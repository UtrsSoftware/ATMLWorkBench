
////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//    LRSTAR Parser Tables.

/*    Generated by: LRSTAR 6.8.009
      Grammar:      atlas.grm																									    
      Skeleton:     skl\parsertables.h.skl
      Output:       parsertables.h
*/               
		#define LOOKAHEADS        3 // Number of lookaheads for LR(k) parsing.

		#define ACCEPT_STATE	   693 // Accept state.
		#define STMT_BEG         50 // Panic mode error recovery begin statement symbol.
		#define STMT_END         15 // Panic mode error recovery end   statement symbol.

/*--- Constants. -------------------------------------------------------------*/
                                                                                          
      static int n_terms      =   206; // Number of terminals.                               
      static int n_heads      =   228; // Number of nonterminals.     
      static int n_prods      =   758; // Number of productions (rules).       
      static int n_states     =   694; // Number of states.
      static int n_nodenames  =   163; // Number of node names.   
      static int n_nodeactns  =    13; // Number of node actions.   
      static int eof_symb     =     5; // <eof> symbol number.
      static int eol_symb     =     0; // <eol> symbol number (not implemented yet).
      static int err_used     =     0; // <error> symbol used in grammar?

/*--- Terminal and Nonterminal Symbols of the Grammar. -----------------------*/

   // Terminal symbols of the grammar. 
		char* parser::term_symb[206] = 
      {
         "<error>",
         "<character_string>",
         "<integer>",
         "<decimal_number>",
         "<digital_number>",
         "<eof>",
         "<first_identifier>",
         "<first_part_number>",
         "<part_number>",
         "<identifier>",
         "<literal>",
         "<lu_comment>",
         "<data_block>",
         "<code_block>",
         "{comment_block}",
         "<eos>",
         "\',\'",
         "\'-\'",
         "\'+\'",
         "\'+-\'",
         "{entry_point}",
         "{branch_target}",
         "\'CNX\'",
         "\'RESULT\'",
         "\'USING\'",
         "\'EQ\'",
         "\'NE\'",
         "\'GT\'",
         "\'LT\'",
         "\'GE\'",
         "\'LE\'",
         "\'&\'",
         "\'OR\'",
         "\'/\'",
         "\'*\'",
         "\'DIV\'",
         "\'MOD\'",
         "\'AND\'",
         "\'**\'",
         "\'XOR\'",
         "\'SHIFT-LEFT\'",
         "\'SHIFT-RIGHT\'",
         "\'ROTATE-LEFT\'",
         "\'ROTATE-RIGHT\'",
         "{eof}",
         "\'SUBFILE\'",
         "\'BEGIN\'",
         "\'ATLAS\'",
         "\'PROGRAM\'",
         "\'SEGMENT\'",
         "\'END\'",
         "\'TERMINATE\'",
         "\'MODULE\'",
         "\'DECLARE\'",
         "\'EXTEND\'",
         "\'REQUIRE\'",
         "\'ESTABLISH\'",
         "\'IDENTIFY\'",
         "\'APPLY\'",
         "\'ARM\'",
         "\'CALCULATE\'",
         "\'CHANGE\'",
         "\'CLOSE\'",
         "\'CONNECT\'",
         "\'DELAY\'",
         "\'DISABLE\'",
         "\'DISCONNECT\'",
         "\'DO\'",
         "\'EXCHANGE\'",
         "\'DIGITAL\'",
         "\'TEST\'",
         "\'ENABLE\'",
         "\'EXECUTE\'",
         "\'FETCH\'",
         "\'FILL\'",
         "\'FINISH\'",
         "\'GO\'",
         "\'TO\'",
         "\'INITIATE\'",
         "\'INPUT\'",
         "\'MEASURE\'",
         "\'MONITOR\'",
         "\'OPEN\'",
         "\'OUTPUT\'",
         "\'PERFORM\'",
         "\'(\'",
         "\')\'",
         "\'PREPARE\'",
         "\'PROVE\'",
         "\'READ\'",
         "\'REMOVE\'",
         "\'RESET\'",
         "\'SENSE\'",
         "\'SETUP\'",
         "\'SPECIFY\'",
         "\'START\'",
         "\'STIMULATE\'",
         "\'STOP\'",
         "\'UPDATE\'",
         "\'VERIFY\'",
         "\'WAIT\'",
         "\'FOR\'",
         "\'DEFINE\'",
         "\'PROCEDURE\'",
         "\'GLOBAL\'",
         "\'EXTERNAL\'",
         "\'TIMED\'",
         "\'SIGNAL\'",
         "\'COMPLEX\'",
         "\'CONFIGURATION\'",
         "\'MESSAGE\'",
         "\'SIMULTANEOUS\'",
         "\'COMPARE\'",
         "\'IF\'",
         "\'THEN\'",
         "\'ELSE\'",
         "\'=\'",
         "\'WHILE\'",
         "\'SOURCE\'",
         "\'SENSOR\'",
         "\'TIMING\'",
         "\'B\'",
         "\'LEAVE\'",
         "\'INCLUDE\'",
         "\'NON-ATLAS\'",
         "\'RESUME\'",
         "\'THRU\'",
         "\'BY\'",
         "\';\'",
         "\'OF\'",
         "\'RECORD\'",
         "\'[\'",
         "\']\'",
         "\'IS\'",
         "\'C\'",
         "\'~\'",
         "\'!\'",
         "\'@\'",
         "\'%\'",
         "\'^\'",
         "\'?\'",
         "\'.\'",
         "\':\'",
         "\'#\'",
         "\'<\'",
         "\'>\'",
         "\'{\'",
         "\'}\'",
         "\'NOT\'",
         "\'CONNECTION\'",
         "\'NOM\'",
         "\'UL\'",
         "\'LL\'",
         "\'FALSE\'",
         "\'TRUE\'",
         "\'BNR\'",
         "\'B1C\'",
         "\'B2C\'",
         "\'BSM\'",
         "\'BCD\'",
         "\'SBCD\'",
         "\'ASCII7\'",
         "\'ISO7\'",
         "\'TTL\'",
         "\'COMMON\'",
         "\'EARTH\'",
         "\'ATMOS\'",
         "\'EOF\'",
         "\'ODD\'",
         "\'PE\'",
         "\'PO\'",
         "\'ORD\'",
         "\'LEN\'",
         "\'LOCN\'",
         "\'COUNT\'",
         "\'SIZE\'",
         "\'SUCC\'",
         "\'PRED\'",
         "\'DATE\'",
         "\'CHAR\'",
         "\'BITS\'",
         "\'COPY\'",
         "\'ROTATE\'",
         "\'SHIFT\'",
         "\'A-SHIFT\'",
         "\'DIG\'",
         "\'DEC\'",
         "\'INT\'",
         "\'ROUND\'",
         "\'ABS\'",
         "\'SQRT\'",
         "\'SIN\'",
         "\'COS\'",
         "\'TAN\'",
         "\'ATAN\'",
         "\'LN\'",
         "\'EXP\'",
         "\'LOG\'",
         "\'ALOG\'",
         "\'DELETE\'",
         "\'INSERT\'",
         "\'TRIM\'",
         "\'APPEND\'",
         "\'TIME\'",
         "\'EXTRACT\'",
         "\'CHR\'"
      };                                                 

   // Head symbols of the grammar. 
      char* parser::head_symb[228] = 
      {
         "goal",
         "atlas_file",
         "lookup_file",
         "subfile_spec",
         "set",
         "lu_comment",
         "generic",
         "specific",
         "main_file",
         "atlas_program_structure",
         "begin_atlas_program_statement",
         "begin_atlas_program_stmt",
         "program_name",
         "program_preamble_structure",
         "program_procedural_structure",
         "program_segment_structure",
         "segment",
         "segment_statement",
         "SegmentName",
         "segment_statements",
         "end_segment_statement",
         "terminate_atlas_program_statement",
         "terminate_atlas_program_stmt",
         "atlas_module_structures",
         "atlas_module_structure",
         "begin_atlas_module_statement",
         "begin_atlas_module_stmt",
         "module_preamble_structure",
         "module_procedural_structure",
         "terminate_atlas_module_statement",
         "terminate_atlas_module_stmt",
         "module_name",
         "declare_statements",
         "declare_statement",
         "declare_stmt",
         "extend_statements",
         "extend_statement",
         "extend_stmt",
         "require_statements",
         "require_statement",
         "require_stmt",
         "establish_statements",
         "establish_statement",
         "establish_stmt",
         "identify_statements",
         "identify_statement",
         "identify_stmt",
         "statement",
         "regular_stmt",
         "Unknown",
         "fstatno",
         "define_statements",
         "define_statement",
         "define_stmt",
         "define_procedure",
         "define_signal",
         "define_complex",
         "define_exchange",
         "define_message",
         "define_digital_configuration",
         "Message",
         "end_statement",
         "end_stmt",
         "Name",
         "Args",
         "RArgs",
         "do_group",
         "do_statement",
         "do_stmt",
         "enddo_statement",
         "enddo_stmt",
         "if_group",
         "compare_stmt",
         "if_statement",
         "if_stmt",
         "else_statement",
         "else_stmt",
         "endif_statement",
         "endif_stmt",
         "for_group",
         "for_statement",
         "for_stmt",
         "endfor_statement",
         "endfor_stmt",
         "while_group",
         "while_statement",
         "while_stmt",
         "endwhile_statement",
         "endwhile_stmt",
         "subgroup",
         "local_preamble",
         "subgroup_statements",
         "subgroup_statement",
         "define_digital",
         "branch_target",
         "entry_point",
         "comment",
         "comment_block",
         "data",
         "data_block",
         "code",
         "code_block",
         "leave_stmt",
         "Group",
         "include_statements",
         "include_statement",
         "include_stmt",
         "include1",
         "include2",
         "filelist",
         "filename",
         "include_file",
         "leave_group",
         "leave_atlas_stmt",
         "resume_atlas_stmt",
         "output_args",
         "output_arg",
         "Using",
         "Device",
         "range",
         "thru",
         "by",
         "assignment",
         "arguments",
         "items",
         "item",
         "type",
         "size",
         "integer",
         "record",
         "member_typedef",
         "member_vars",
         "member_var",
         "nulltype",
         "member_type",
         "member_size",
         "member_integer",
         "output_item",
         "compare_expr",
         "compare_exp",
         "expr",
         "exp",
         "signed_primary",
         "primary",
         "constant",
         "signed_constant",
         "params",
         "datastore",
         "variablews",
         "variable",
         "sub",
         "qualifier",
         "dim",
         "nominal",
         "compare_boolean",
         "boolean",
         "uplowlimit",
         "lowuplimit",
         "quantity",
         "enumeration",
         "connection",
         "function",
         "[lu_comment]",
         "([lu_comment] subfile_spec)",
         "([lu_comment] subfile_spec)...",
         "([lu_comment] set)",
         "([lu_comment] set)...",
         "([lu_comment] specific)",
         "([lu_comment] specific)...",
         "[program_procedural_structure]",
         "[program_segment_structure]...",
         "[program_name]",
         "<eos>...",
         "[comment]",
         "[include_statements]",
         "[extend_statements]",
         "[require_statements]",
         "[establish_statements]",
         "$00017",
         "[$00017]...",
         "(statement | segment)",
         "(statement | segment)...",
         "segment...",
         "statement...",
         "atlas_module_structure...",
         "[module_procedural_structure]",
         "[module_name]",
         "declare_statement...",
         "[',' arguments]",
         "extend_statement...",
         "require_statement...",
         "establish_statement...",
         "identify_statement...",
         "assignment/','...",
         "[',']",
         "[items]",
         "[output_args]",
         "[data]",
         "['(' Args ')']",
         "['RESULT' '(' RArgs ')']",
         "[[','] arguments]",
         "define_statement...",
         "[',' Name]",
         "items/','...",
         "[local_preamble]",
         "[subgroup_statements]",
         "subgroup_statement...",
         "'B'...",
         "[arguments]",
         "include_statement...",
         "filename/','...",
         "output_arg/','...",
         "output_item...",
         "expr/','...",
         "(',' | ';')",
         "items/(',' | ';')...",
         "item...",
         "member_typedef/';'...",
         "member_var/','...",
         "['IS' type]",
         "['(' params ')']",
         "[dim]",
         "sub/','...",
         "('(' sub/','... ')')",
         "('(' sub/','... ')')...",
         "('.' qualifier)",
         "('.' qualifier)...",
         "<keyword>"
      };
  
   // Head symbol for a production 
      static uchar head_numb[758] = 
      {
          0,    1,    1,    2,    2,    3,    4,    5,    6,    6,    7,    7,    8,    8,    8,    9,   10,   10,   11,   12,
         13,   14,   15,   16,   16,   17,   18,   19,   20,   21,   21,   21,   21,   22,   23,   24,   25,   25,   26,   27,
         28,   29,   29,   29,   29,   30,   31,   32,   33,   33,   34,   34,   35,   36,   36,   37,   37,   38,   39,   39,
         40,   40,   41,   42,   42,   43,   43,   44,   45,   45,   46,   46,   47,   47,   47,   47,   47,   47,   47,   47,
         47,   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
         48,   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
         48,   48,   48,   48,   49,   50,   50,   51,   52,   52,   53,   53,   53,   53,   53,   53,   53,   54,   54,   54,
         54,   54,   54,   55,   55,   55,   56,   56,   56,   57,   58,   59,   59,   59,   60,   61,   61,   62,   62,   62,
         62,   63,   64,   64,   65,   66,   67,   67,   68,   68,   69,   69,   70,   71,   71,   72,   73,   73,   74,   75,
         75,   76,   77,   77,   78,   79,   80,   80,   81,   82,   82,   83,   84,   85,   85,   86,   87,   87,   88,   89,
         90,   91,   92,   92,   92,   92,   92,   93,   93,   93,   94,   94,   95,   95,   96,   97,   98,   99,  100,  101,
        102,  102,  102,  102,  102,  103,  104,  105,  105,  106,  106,  106,  107,  108,  109,  110,  111,  111,  111,  112,
        112,  113,  114,  115,  116,  116,  117,  118,  118,  119,  119,  119,  120,  121,  122,  123,  123,  124,  125,  125,
        126,  126,  126,  126,  126,  127,  127,  128,  129,  130,  131,  132,  133,  134,  134,  134,  134,  134,  135,  135,
        136,  137,  137,  137,  137,  137,  137,  137,  137,  137,  137,  137,  137,  137,  137,  137,  137,  137,  137,  137,
        137,  137,  137,  137,  137,  137,  137,  137,  137,  137,  137,  137,  137,  137,  137,  137,  137,  137,  137,  137,
        137,  137,  137,  137,  138,  139,  139,  139,  139,  139,  139,  139,  139,  139,  139,  139,  139,  139,  139,  139,
        139,  139,  139,  139,  139,  139,  139,  139,  140,  141,  141,  141,  141,  141,  141,  141,  141,  141,  141,  141,
        141,  141,  141,  141,  141,  141,  141,  141,  141,  141,  141,  142,  142,  142,  142,  143,  143,  143,  143,  143,
        143,  143,  143,  143,  143,  143,  144,  144,  144,  145,  145,  145,  145,  145,  145,  146,  147,  147,  148,  148,
        149,  149,  149,  150,  151,  152,  153,  154,  154,  154,  154,  155,  155,  155,  155,  156,  157,  158,  158,  158,
        159,  159,  159,  159,  159,  159,  159,  159,  159,  159,  160,  160,  160,  160,  160,  160,  161,  161,  161,  161,
        161,  161,  161,  161,  161,  161,  161,  161,  161,  161,  161,  161,  161,  161,  161,  161,  161,  161,  161,  161,
        161,  161,  161,  161,  161,  161,  161,  161,  161,  161,  161,  161,  161,  161,  161,  162,  162,  163,  164,  164,
        165,  166,  166,  167,  168,  168,  169,  169,  170,  170,  171,  171,  172,  172,  173,  173,  174,  174,  175,  175,
        176,  176,  177,  177,  178,  178,  178,  179,  179,  180,  180,  181,  181,  182,  182,  183,  183,  184,  184,  185,
        185,  186,  186,  187,  187,  188,  188,  189,  189,  190,  190,  191,  191,  192,  192,  193,  193,  194,  194,  195,
        195,  196,  196,  197,  197,  198,  198,  199,  199,  200,  200,  201,  201,  202,  202,  203,  203,  204,  204,  205,
        205,  206,  206,  207,  207,  208,  208,  209,  209,  210,  210,  211,  211,  212,  212,  213,  213,  214,  214,  215,
        215,  216,  216,  217,  217,  218,  218,  219,  219,  220,  220,  221,  221,  222,  222,  223,  224,  224,  225,  226,
        226,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,
        227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,
        227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,
        227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,
        227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,
        227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,
        227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,
        227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227,  227
      };

   // Index to first tail symbol for a production 
      static ushort f_tail[759] = 
      {
          0,    2,    3,    5,    7,   10,   13,   15,   16,   17,   18,   19,   20,   21,   23,   24,   29,   31,   32,   39,
         40,   46,   47,   48,   52,   55,   60,   61,   62,   67,   69,   72,   73,   75,   82,   83,   87,   89,   90,   97,
        102,  103,  105,  108,  109,  111,  118,  119,  120,  122,  123,  127,  131,  132,  134,  135,  139,  143,  144,  146,
        147,  151,  155,  156,  158,  159,  163,  167,  168,  170,  171,  175,  179,  180,  182,  183,  184,  185,  186,  187,
        188,  190,  194,  198,  204,  208,  212,  216,  220,  224,  228,  235,  244,  248,  251,  255,  259,  263,  266,  271,
        275,  279,  283,  287,  291,  298,  305,  312,  316,  320,  324,  328,  332,  336,  340,  344,  348,  352,  356,  360,
        364,  369,  373,  374,  375,  376,  376,  377,  378,  380,  381,  384,  387,  390,  394,  395,  396,  397,  407,  419,
        431,  444,  459,  474,  482,  492,  502,  511,  522,  533,  541,  549,  557,  567,  577,  579,  581,  582,  586,  592,
        598,  605,  606,  607,  609,  610,  613,  615,  616,  622,  629,  631,  632,  637,  642,  645,  650,  652,  653,  660,
        662,  663,  666,  668,  669,  675,  678,  680,  681,  690,  692,  693,  699,  702,  704,  705,  712,  714,  715,  721,
        723,  724,  725,  726,  727,  729,  730,  732,  741,  750,  759,  760,  761,  765,  766,  767,  768,  769,  770,  771,
        772,  778,  784,  790,  796,  801,  802,  803,  805,  806,  808,  809,  810,  817,  824,  825,  826,  827,  829,  832,
        836,  839,  843,  847,  848,  850,  851,  852,  853,  854,  857,  862,  863,  864,  865,  868,  869,  871,  872,  873,
        874,  875,  877,  878,  879,  880,  885,  892,  893,  898,  901,  902,  904,  904,  905,  911,  912,  913,  914,  915,
        918,  919,  920,  921,  922,  924,  925,  926,  927,  928,  930,  931,  932,  933,  934,  935,  936,  937,  938,  939,
        940,  941,  942,  943,  945,  947,  949,  951,  953,  955,  957,  959,  961,  962,  963,  964,  965,  966,  967,  968,
        969,  970,  971,  972,  973,  974,  978,  982,  986,  990,  994,  998, 1002, 1006, 1010, 1014, 1018, 1022, 1026, 1030,
       1034, 1038, 1042, 1046, 1050, 1054, 1058, 1059, 1060, 1061, 1064, 1067, 1070, 1073, 1076, 1079, 1082, 1085, 1088, 1091,
       1094, 1097, 1100, 1103, 1106, 1109, 1112, 1115, 1118, 1121, 1124, 1125, 1126, 1128, 1130, 1132, 1134, 1135, 1136, 1138,
       1139, 1140, 1142, 1143, 1144, 1145, 1148, 1150, 1152, 1154, 1157, 1160, 1163, 1166, 1169, 1172, 1173, 1174, 1175, 1177,
       1180, 1182, 1185, 1187, 1188, 1189, 1190, 1192, 1196, 1200, 1203, 1206, 1209, 1212, 1214, 1216, 1220, 1224, 1225, 1226,
       1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
       1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
       1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1282, 1283, 1285, 1286,
       1288, 1290, 1291, 1293, 1295, 1296, 1298, 1298, 1299, 1299, 1301, 1301, 1302, 1303, 1305, 1305, 1306, 1306, 1307, 1307,
       1308, 1308, 1309, 1309, 1310, 1311, 1312, 1313, 1313, 1315, 1316, 1317, 1318, 1320, 1321, 1323, 1324, 1326, 1327, 1329,
       1329, 1330, 1330, 1331, 1332, 1334, 1334, 1336, 1337, 1339, 1340, 1342, 1343, 1345, 1346, 1348, 1349, 1352, 1352, 1353,
       1353, 1354, 1354, 1355, 1355, 1356, 1356, 1359, 1359, 1363, 1363, 1365, 1366, 1368, 1368, 1370, 1371, 1374, 1374, 1375,
       1375, 1376, 1377, 1379, 1380, 1382, 1382, 1383, 1384, 1386, 1387, 1390, 1391, 1394, 1395, 1397, 1398, 1401, 1402, 1403,
       1404, 1407, 1408, 1410, 1411, 1414, 1415, 1418, 1418, 1420, 1420, 1423, 1423, 1424, 1425, 1428, 1431, 1432, 1434, 1436,
       1437, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
       1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
       1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
       1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
       1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
       1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
       1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
       1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596
      };

   // Tail symbol numbers (T: >= 0, NT: < 0)
      static short tail[1596] = 
      {
         -1,    5,   -8,   -2,   -8, -164,   44, -164,   -5,   44,   45,    2, -166,   -6, -168,   11,    7,    6,    8,    9,
         -9,   -9,  -23,  -23,  -10,  -13, -169, -170,  -21,  -96,  -11,  -11,  -50,   46,   16,   47,   48, -171, -172,   10,
       -173, -174, -175, -176, -177, -179, -181, -182,  -17,  -19,  -96,  -20,  -17,  -19,  -20,  -50,   49,   16,  -18,   15,
         10, -183,  -50,   50,   16,   49,   15,  -96,  -22,  -96,  -22,  -96,  -22,  -22,  -96,  -50,   51,   16,   47,   48,
       -171, -172, -184,  -25,  -27, -185,  -29,  -96,  -26,  -26,  -50,   46,   16,   47,   52, -186, -172, -173, -175, -176,
       -177, -179, -183,  -96,  -30,  -96,  -30,  -96,  -30,  -30,  -96,  -50,   51,   16,   47,   52, -186, -172,   10, -187,
        -96,  -34,  -34,  -50,   53, -188, -172,  -50,  -49, -188, -172, -189,  -96,  -37,  -37,  -50,   54, -188, -172,  -50,
        -49, -188, -172, -190,  -96,  -40,  -40,  -50,   55, -188, -172,  -50,  -49, -188, -172, -191,  -96,  -43,  -43,  -50,
         56, -188, -172,  -50,  -49, -188, -172, -192,  -96,  -46,  -46,  -50,   57, -188, -172,  -50,  -49, -188, -172,  -48,
        -96,  -48,  -66,  -71,  -84,  -79, -112,  -72,  -96,  -72,  -50,   58, -188, -172,  -50,   59, -188, -172,  -50,   60,
         16, -193, -194, -172,  -50,   61, -188, -172,  -50,   62, -188, -172,  -50,   63, -188, -172,  -50,   64, -188, -172,
        -50,   65, -188, -172,  -50,   66, -188, -172,  -50,   67,   16,   68, -195, -188, -172,  -50,   67,   16,   69,   70,
         24,  -63, -188, -172,  -50,   71, -188, -172,  -50,   72, -172,  -50,   54, -188, -172,  -50,   73, -188, -172,  -50,
         74, -188, -172,  -50,   75, -172,  -50,   76,   77, -188, -172,  -50,   78, -188, -172,  -50,   79, -188, -172,  -50,
         80, -188, -172,  -50,   81, -188, -172,  -50,   82, -188, -172,  -50,   83,   16, -196, -194, -197, -172,  -50,   84,
         16,  -63,   16, -123, -172,  -50,   84,   16,  -63, -198, -199, -172,  -50,   87, -188, -172,  -50,   88, -188, -172,
        -50,   89, -188, -172,  -50,   90, -188, -172,  -50,   91, -188, -172,  -50,   92, -188, -172,  -50,   93, -188, -172,
        -50,   94, -188, -172,  -50,   95, -188, -172,  -50,   96, -188, -172,  -50,   97, -188, -172,  -50,   98, -188, -172,
        -50,   99, -188, -172,  -50,  100,  101, -188, -172,  -50,  -49, -200, -172,  -95,  -94,    9,    2, -201,  -96,  -53,
        -53,  -54,  -89,  -61,  -56,  -89,  -61,  -59,  -89,  -61,  -50,  -49, -188, -172,  -55,  -57,  -58,  -50,  102,   16,
        -63,   16,  103, -198, -199, -188, -172,  -50,  102,   16,  -63,   16,  104,   16,  103, -198, -199, -188, -172,  -50,
        102,   16,  -63,   16,  105,   16,  103, -198, -199, -188, -172,  -50,  102,   16,  -63,   16,  106,   69,   16,  103,
       -198, -199, -188, -172,  -50,  102,   16,  -63,   16,  104,   16,  106,   69,   16,  103, -198, -199, -188, -172,  -50,
        102,   16,  -63,   16,  105,   16,  106,   69,   16,  103, -198, -199, -188, -172,  -50,  102,   16,  -63,   16,  107,
       -188, -172,  -50,  102,   16,  -63,   16,  104,   16,  107, -188, -172,  -50,  102,   16,  -63,   16,  105,   16,  107,
       -188, -172,  -50,  102,   16,  -63,   16,  108,  107, -188, -172,  -50,  102,   16,  -63,   16,  104,   16,  108,  107,
       -188, -172,  -50,  102,   16,  -63,   16,  105,   16,  108,  107, -188, -172,  -50,  102,   16,  -63,   16,   68, -188,
       -172,  -50,  102,   16,  -63,   16,  -60,  -98, -172,  -50,  102,   16,  -63,   16,   69,  109, -172,  -50,  102,   16,
        -63,   16,  104,   16,   69,  109, -172,  -50,  102,   16,  -63,   16,  105,   16,   69,  109, -172,  110,   16,  -96,
        -62,  -62,  -50,   50, -202, -172,  -50,   50, -202,   16,  103, -172,  -50,   50, -202,   16,  107, -172,  -50,   50,
       -202,   16,  108,  107, -172,   10, -203, -203,   16, -203,  -67,  -89,  -69,  -96,  -68,  -68,  -50,   67,   16,  111,
       -188, -172,  -50,   67,   16,  106,   69, -188, -172,  -96,  -70,  -70,  -50,   50,   16,   67, -172,  -73,  -89,  -75,
        -89,  -77,  -73,  -89,  -77,  -50,  112,   16, -138, -172,  -96,  -74,  -74,  -50,  113,   16, -140,   16,  114, -172,
        -96,  -76,  -76,  -50,  115, -172,  -96,  -78,  -78,  -50,   50,   16,  113, -188, -172,  -80,  -89,  -82,  -96,  -81,
        -81,  -50,  101,   16, -147,  116, -119,   16,  114, -172,  -96,  -83,  -83,  -50,   50,   16,  101, -188, -172,  -85,
        -89,  -87,  -96,  -86,  -86,  -50,  117,   16, -140,   16,  114, -172,  -96,  -88,  -88,  -50,   50,   16,  117, -188,
       -172, -204, -205, -187, -206,  -47, -102,  -96, -102,  -93,  -96,  -93,  -50,  102,   16,  -63,   16,   69,  118, -188,
       -172,  -50,  102,   16,  -63,   16,   69,  119, -188, -172,  -50,  102,   16,  -63,   16,   69,  120, -188, -172, -207,
         21,  -50,   10, -188, -172,   20,  -97,   14,  -99,   12, -101,   13,  -50,  122,   16,  117, -208, -172,  -50,  122,
         16,  101, -208, -172,  -50,  122,   16,  113, -208, -172,  -50,  122,   16,   67, -208, -172,  -50,  122,   16, -103,
       -172,   10, -209,  -96, -106, -106, -107, -111, -107, -108,  -50,  123,   16,   47,   52, -110,   15,  -50,  123,   16,
        124,   52, -109,   15, -210,   10,   44,  -23,   44,   -2,  -23,   44,  -96, -113, -100, -114, -113, -100, -114,  -50,
        122,   47,   15,  -50,  125,   47, -172, -211, -117, -118, -212,   24,   10,    9, -140, -120, -140, -140, -120, -140,
       -121, -140, -213,  126,  127, -147,  116, -140, -215, -215,   16, -216, -137,   24,    9,    9, -127, -227,   10, -129,
         85,    2,   86,  129, -126,   85, -128,  126, -128,   86,  129, -126,    2,  130,  129,  131, -217,  132, -131,  133,
       -134, -218,   10, -133,    9,    9,   85, -135,   86,  129, -134, -227,   10, -129,    2, -136,  126, -136,    2, -227,
          9,    8,   10, -219,    2,    3,    4,    1,  134,   10,   22,  135,  136,  137,  138,  139,  140,   31,   33,   34,
         17,   18,   19,   17,    2,   17,    3,   17,    8,   18,    2,   18,    3,   18,    8,   19,    2,   19,    3,   19,
          8,  116,  141,  142,  143,  144,  145,  131,  132,  146,  147,   85,   86, -139, -147,   16,   38, -139, -147,   16,
         34, -139, -147,   16,   33, -139, -147,   16,   35, -139, -147,   16,   36, -139, -147,   16,   18, -139, -147,   16,
         17, -139, -147,   16,   31, -139, -147,   16,   39, -139, -147,   16,   40, -139, -147,   16,   41, -139, -147,   16,
         42, -139, -147,   16,   43, -139, -147,   16,   25, -139, -147,   16,   26, -139, -147,   16,   27, -139, -147,   16,
         28, -139, -147,   16,   29, -139, -147,   16,   30, -139, -147,   16,   37, -139, -147,   16,   32, -139, -154, -142,
       -141, -141,   38, -141, -141,   34, -141, -141,   33, -141, -141,   35, -141, -141,   36, -141, -141,   18, -141, -141,
         17, -141, -141,   31, -141, -141,   39, -141, -141,   40, -141, -141,   41, -141, -141,   42, -141, -141,   43, -141,
       -141,   25, -141, -141,   26, -141, -141,   27, -141, -141,   28, -141, -141,   29, -141, -141,   30, -141, -141,   37,
       -141, -141,   32, -141, -142, -143,   18, -143,   17, -143,  148, -143, -161, -220, -147,    1,  134,   10,    9,   76,
        149, -160, -159, -155, -144,   85, -141,   86,    2, -221,    3, -221,    4, -221,   17,    2, -221,   17,    3, -221,
         17,    4, -221,   18,    2, -221,   18,    3, -221,   18,    4, -221, -213, -149, -148, -149, -224, -149, -224, -152,
         10, -221,   10, -226, -221, -148, -226, -140,   10,    9,  150, -158, -147,   16, -153, -156, -147,   16, -153, -157,
       -147,   16, -156, -147,   16, -157, -147, -153, -156, -147, -153, -157, -147, -156, -147, -157,  151, -158,  152, -158,
        152, -158,  151, -158, -147, -144, -145,  153,  154,  155,  156,  157,  158,  159,  160,  161,  162,    9,    2,  163,
        164,  165,  166,  167,  168,  169,  170,  171,  172,  173,  174,  175,  176,  177,  178,  179,  180,  181,  182,  183,
        184,  185,  186,  187,  188,  189,  190,  191,  192,  193,  194,  195,  196,  197,  198,  199,  200,  201,  202,  203,
        204,  205,   -5, -162,   -3, -163, -164, -163, -162,   -4, -165, -166, -165, -162,   -7, -167, -168, -167,  -14, -170,
        -15,  -12,   15, -172,   15,  -96, -104,  -35,  -38,  -41,  -32,  -44,  -51, -179, -178,  -47,  -16, -180, -181, -180,
        -16, -182,  -16,  -47, -183,  -47,  -24, -184,  -24,  -28,  -31,  -33, -187,  -33,   16, -123,  -36, -189,  -36,  -39,
       -190,  -39,  -42, -191,  -42,  -45, -192,  -45, -122, -193,   16, -122,   16, -124, -115,  -98,   85,  -64,   86,   23,
         85,  -65,   86, -194, -123,  -52, -201,  -52,   16,  -63, -124, -203,   16, -124,  -90,  -91,  -92, -206,  -92,  121,
       -207,  121, -123, -105, -209, -105, -110, -210,   16, -110, -116, -211,   16, -116, -137, -212, -137, -140, -213,   16,
       -140,   16,  128, -124, -215, -214, -124, -125, -216, -125, -130, -217,  128, -130, -132, -218,   16, -132,  133, -126,
         85, -146,   86, -152, -150, -222,   16, -150,   85, -222,   86, -223, -224, -223,  141, -151, -225, -226, -225,   25,
         26,   27,   28,   29,   30,   32,   35,   36,   37,   39,   40,   41,   42,   43,   45,   46,   47,   48,   49,   50,
         51,   52,   53,   54,   55,   56,   57,   58,   59,   60,   61,   62,   63,   64,   65,   66,   67,   68,   69,   70,
         71,   72,   73,   74,   75,   76,   77,   78,   79,   80,   81,   82,   83,   84,   87,   88,   89,   90,   91,   92,
         93,   94,   95,   96,   97,   98,   99,  100,  101,  102,  103,  104,  105,  106,  107,  108,  109,  110,  111,  112,
        113,  114,  115,  117,  118,  119,  120,  121,  122,  123,  124,  125,  126,  127,  129,  130,  133,  134,  148,  149,
        150,  151,  152,  153,  154,  155,  156,  157,  158,  159,  160,  161,  162,  163,  164,  165,  166,  167,  168,  169,
        170,  171,  172,  173,  174,  175,  176,  177,  178,  179,  180,  181,  182,  183,  184,  185,  186,  187,  188,  189,
        190,  191,  192,  193,  194,  195,  196,  197,  198,  199,  200,  201,  202,  203,  204,  205
      };

/*--- Bit Matrix and Access Vectors. -----------------------------------------*/

   // B_matrix.  
      static uchar Bm [699] = 
      {
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    4,   18,    0,    0,    0,    0,    0,    0,    0,
          0,   16,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    4,   16,    0,    0,    0,    0,    0,    0,
          0,    0,   32,    0,    0,    0,    0,    0,    0,    0,    4,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    2,    0,    8,    0,    0,    0,    0,    0,    0,    0,    2,    0,    0,    0,    0,    0,    2,    0,   64,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    8,    0,    0,    0,    0,    0,    0,    0,    4,   16,    2,
          0,    0,    0,    0,    0,    2,    0,  128,    1,    0,    0,   33,   70,    4,  136,    0,    0,    0,    4,    0,
          2,    0,    0,    0,    0,    0,    2,    0,    0,    8,    0,    0,    0,    0,    0,    0,    0,    0,    0,    4,
          0,  128,    1,    0,    0,   32,   70,    4,  136,    0,    0,  128,    0,    0,    0,   32,    0,    0,    0,    0,
          0,   64,    0,    0,    0,    0,    0,    0,    0,    2,    0,    0,    0,    0,    0,    0,    0,    0,   32,    0,
          0,    0,    0,    0,    0,    0,    0,  128,    0,    0,    0,    0,  128,    0,    0,    0,   16,    0,    0,    0,
          0,    0,  128,    0,    0,    0,   64,    0,    0,    0,    0,    0,  128,    8,    0,    0,    0,    0,    0,   32,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  206,  129,  249,  245,  255,  255,  255,  255,  127,  255,
         15,    0,    1,    0,    0,    0,    0,    0,    0,    0,    0,    0,   24,   64,    4,    0,    0,    0,  142,  129,
          0,    0,    0,   64,    1,    0,    0,  160,  128,    1,    0,    0,   32,   70,   12,  136,    0,    0,    0,    0,
          2,    0,    0,   32,    0,    0,    0,    0,    5,    0,    0,    0,    0,    0,   64,    0,    0,    0,    0,    8,
          0,  128,    0,    0,    0,  128,    0,    0,    0,    0,    0,   64,    0,    0,    0,    0,    0,    0,  128,    0,
          0,  206,  129,  249,  245,  255,  255,  253,  255,  127,  255,   15,    0,    0,    0,    0,    0,    0,    0,   64,
          0,    0,    0,    0,    0,    0,    0,    0,    0,   64,    0,    0,    0,    0,    0,    0,    1,    0,    0,    0,
        128,    0,    0,    0,    0,    0,    0,    0,    0,   64,  128,    1,    0,    0,    0,    0,    0,    0,    0,    0,
          0,  206,  129,  241,  245,  255,  255,  255,  255,  127,  255,   15,    0,   64,    0,    0,    0,    0,    1,    0,
          0,    0,   64,    0,    0,    0,    0,    0,    0,    0,    0,    7,  128,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,  142,    1,    0,    0,    0,   64,    1,    0,    0,   32,    0,  132,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    8,    0,  128,  240,    7,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    7,
          0,   64,    0,   64,    0,    0,    0,    0,    0,    0,    0,    1,    0,    0,    0,    0,    0,  192,    0,    0,
          0,    0,    0,    0,    0,    0,    0,  128,    1,   80,  245,  255,  255,  252,  191,  127,  179,   15,  128,    0,
          0,    0,    0,    0,    1,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    6,    0,  128,  240,    7,
          0,    0,    0,    0,    0,    0,    7,   12,  129,    0,    0,    0,    0,    0,    0,    0,    0,  128,  240,    7,
          0,    0,    2,    0,    0,    0,    0,    1,    0,    0,    0,    4,    4,  136,    0,    0,  128,    0,    0,    0,
         16,    1,    8,    0,    0,    0,   64,    0,    0,    0,    0,    2,    0,    0,    0,    0,   12,    0,    0,    0,
          0,    0,    0,    0,    0,    0,  128,    7,    0,    0,    0,    0,    0,    0,  128,  224,    7,    0,    0,    0,
          0,    0,    0,    0,    6,    0,    0,    0,    0,    0,    0,  128,    0,    0,    0,    0,    1,    0,    0,    0,
          0,  128,    0,    0,    0,    0,    0,    8,    0,    0,    0,    0,    0,    0,    0,    0,    1,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    1,    0,    0,    0,    0,    0,    0,    0,    0,    0,   16,    0,    0,    0,
          0,    0,    0,    0,    0,  128,    8,    0,    0,    0,    0,    0,   24,  240,    1,    0,    0,   96,    0,    0,
          0,    0,    0,    0,    0,    0,  144,    1,    0,    0,    0,    0,    0,   16,  208,    1,    0,    0,    0
      };

   // B_matrix row. 
      static ushort Br [694] = 
      {
         11,   21,   32,   32,    0,    0,   39,   50,   18,   60,   32,   39,   50,   69,    0,   69,    0,   78,   50,   86,
         78,   97,  107,    0,    0,    0,    0,  118,  128,    0,   69,    0,  131,   50,   60,    0,    0,  141,   69,   32,
        151,   50,    0,    0,  158,  168,  158,   32,   69,   78,   78,   78,   78,   78,   78,   78,   78,   78,   78,   78,
         78,   78,   78,   78,  177,   78,   78,  177,  182,   78,   78,   78,   78,   78,   78,   78,   78,   78,   78,   78,
         78,   78,   78,   78,   78,   78,   78,   78,   78,   44,   78,   78,   78,   78,  158,  192,   32,   50,    0,   69,
         32,   32,   32,  128,   50,   32,   78,   32,   86,    0,    0,   46,   50,   78,   78,  202,   50,    0,    0,  209,
        219,    0,   85,  165,   50,  230,  177,  177,  230,  241,  177,  177,  177,  241,  177,  177,  177,  177,  177,  177,
        247,  177,  177,  177,  177,  177,   78,  177,  177,  177,  177,  177,  230,  241,  177,  177,  177,  177,  177,  177,
        177,  177,  177,  177,  177,  177,  177,   78,  241,  258,  258,  258,  177,   78,   78,  165,   50,  268,  118,   69,
        276,    0,   50,  165,   50,  165,   50,   50,   13,    0,  284,   50,    0,  291,   86,    0,   78,    0,  177,  177,
         78,   78,  301,   50,    0,    0,  241,  241,  168,   78,  310,  321,    0,    0,    0,    0,    0,  177,  177,  177,
        177,  177,  177,  332,  340,  350,   78,  360,  177,  177,  177,  177,  177,  177,  230,   37,   16,   78,  177,  177,
        177,  177,  177,  177,  177,  177,  177,  370,   78,    0,  381,  392,  177,  177,  177,  177,  177,  177,  177,  177,
        177,  177,  177,  177,  177,  177,  332,  177,  401,  350,  412,  412,  412,  423,  423,  258,  241,  423,  434,   78,
        445,  449,   78,  177,  177,   78,   78,  460,   78,  177,   32,   78,   78,  158,   78,    0,   46,  467,   85,   85,
          0,  158,  177,  177,  177,  177,   78,   78,    0,  177,  177,  477,    0,  467,  230,    0,  487,  258,  340,  241,
        498,  258,  177,  241,  360,   78,  127,   78,  177,  177,   49,  230,   48,  230,  230,  177,  258,  177,  505,  516,
        527,  527,  527,  258,  536,   14,  258,  258,  258,  258,  258,  258,  258,  258,  258,  258,  258,  258,  258,  258,
        258,  258,  258,  258,  258,  258,  258,   14,  177,  177,   45,  241,  546,   82,  177,  165,   50,   44,  180,  177,
        158,  241,  241,    0,   85,  177,  177,  177,  177,  556,    0,    0,    0,   50,    0,    0,    0,  177,  177,  177,
          0,    0,  565,  177,  177,  241,  177,  177,  177,  177,  350,  177,   65,   78,   78,   34,    0,  505,  258,  258,
        258,  258,  258,  258,  258,  258,  258,  258,  258,  258,  258,  258,  258,  258,  258,  258,  258,  258,  258,  576,
        576,    1,   51,   65,   78,  177,  584,  584,  593,  593,  593,  593,  593,  593,  584,  584,  601,  601,  601,  601,
        601,  601,  601,    0,    0,    0,    0,  177,  177,   78,  177,  230,  230,  230,  230,   78,   78,   78,  177,  357,
        177,  177,   78,  241,  177,  177,   78,   78,   78,   32,   32,   32,  611,   50,  621,   50,   50,   23,  258,  177,
         78,  177,  177,  177,  230,  177,  321,   14,  258,  258,  412,  412,  412,  412,  412,  412,  527,  527,  177,  177,
        177,   16,  177,  177,  177,  177,  177,  177,  177,  177,  241,  241,  177,  177,  177,  241,  165,   50,   78,   78,
         34,   65,  241,  177,   65,   78,  177,  341,  628,  177,  177,  177,  177,  177,  177,  177,  177,  177,  177,  177,
         78,    0,  177,  177,   50,  637,  647,  657,   78,    0,  177,  230,  177,  258,   78,   78,   78,  177,  667,  676,
        241,  177,  177,   65,  487,  487,  241,  241,  177,  177,  177,   49,   78,   64,  350,   78,   78,   16,   78,  181,
         78,  177,  680,  637,  350,  177,  177,  177,  177,  177,  177,   48,  688,  688,   78,  177,   78,  177,  177,  181,
        487,   50,  177,  177,  177,   78,   64,  350,   16,   78,  181,   64,  350,   16,   78,  181,   15,  177,  177,  177,
        177,  177,   65,   34,    0,  177,  177,   48,   78,  177,   78,  177,   48,   78,  177,   78,  350,  177,  177,  637,
         50,  177,  177,   78,   15,  177,  177,  177,   78,   15,  177,  177,   48,  487,  177,  350,  177,  177,  350,  177,
         78,  177,   48,  177,   48,  177,   78,   78,  177,  177,  177,  177,  177,    0
      };

   // B_matrix column.
      static uchar Bc [206] = 
      {
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
          2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    3,    3,    3,    3,    3,
          3,    3,    3,    3,    3,    3,    3,    3,    3,    4,    4,    4,    4,    4,    4,    4,    4,    5,    5,    5,
          5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
          5,    5,    5,    5,    5,    6,    6,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
          5,    6,    6,    6,    6,    6,    6,    6,    7,    7,    6,    7,    5,    7,    7,    7,    7,    7,    8,    8,
          8,    8,    5,    8,    8,    8,    8,    8,    8,    9,    9,    9,    9,    9,    9,    2,    2,    2,    2,    2,
          2,    9,    2,    2,    2,    2,    2,    2,    9,    9,   10,   10,   10,    9,    9,    9,    9,    9,    9,    9,
          9,    9,    9,   10,   10,   10,   10,    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
          9,    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
          9,    9,    9,    9,    9,    9
      };
  
	// B_matrix column.
      static uchar Bmask [206] = 
      {
          1,    2,    4,    8,    8,   16,   32,   32,   64,  128,    1,    2,    4,    8,   16,   32,   64,  128,  128,    1,
          2,    2,    1,    4,    8,   16,   16,   16,   16,   16,   16,   32,   64,  128,  128,    1,    1,    1,    2,    4,
          4,    4,    4,    4,    8,   16,   32,   64,  128,    1,    2,    4,    8,   16,   32,   64,  128,    1,    2,    2,
          2,    2,    2,    2,    2,    2,    2,    4,    8,   16,   32,    2,    2,    2,    2,    2,   64,  128,    2,    2,
          2,    2,    2,    2,    2,    1,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
          2,    4,    8,   16,   32,   32,   64,  128,    1,    2,   32,    4,    2,    8,   16,   32,   64,  128,    1,    1,
          1,    2,    2,    4,    8,   16,   32,   64,  128,    1,    2,    4,    8,   16,   32,    1,    1,    1,    1,    1,
          1,   64,    1,    1,    1,    1,    1,    1,  128,   32,    1,    2,    4,   32,   32,   32,   32,   32,   32,   32,
         32,   32,   32,    8,    8,    8,    8,   32,   32,   32,   32,   32,   32,   32,   32,   32,   32,   32,   32,   32,
         32,   32,   32,   32,   32,   32,   32,   32,   32,   32,   32,   32,   32,   32,   32,   32,   32,   32,   32,   32,
         32,   32,   32,   32,   32,   32
      };
  
/*--- Terminal Transition Matrix and Access Vectors. -------------------------*/

   // T_matrix. 
      static short Tm [1607] = 
      {
          0,    0,    0,    0,    0,    0,    0,    0,  345,  367,  370,  371,  373,  377,  378,  380,  506,  507,  509,  521,
        531,  535,  571,  578,  587,  612,  613, -154,  636,  664,  669, -404, -235,  333,  171,  313,  372,  498, -492,  602,
        569,  339,  644,  315, -267,    0,    0, -378, -248, -247,  169,    0,  168,    0,    0,    0, -225,    0,    0,  301,
          0,    0,  270,  172,  271,  272,    0,  227,    0,  541,  193,  439,  440,  -11,  -46,  -10,    0,  153,    0,    0,
          0,    0,    0,    0, -431,    0,    0,    0, -430,  -19,    0,    0,  152,    0,    0,    0,    0,    0,  334,  653,
          0,  648,    0, -595,  479,    0,  471,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  384,
          0,    0,  561,    0,    0,    0,  631,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  655,
        472,  626,  621,  659,    0,    0,    0,    0,    0,    0, -578,    0,  473,    0,    0,    0,  474,  334,  603,    0,
        632,    0,    0,  633,  634,  635,    0,    0,    0,    0,  340,  341,  342,    0,    0,  627,    0,    0,  628,  629,
        630,    0,  510,    0,  511,  512, -405, -161,    0, -232,  133,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  298,    0,    0,
        291,    0,  483,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0, -432, -433, -434, -435,  592,  593,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  321,  565,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  594,  595,  596,  597,  598,  599,    0,
        600,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  299,   45,    0,
          0,    0, -124,  -26,    0, -493,   46,  418,  419,    0,  319,    0,  420,  421,  422,  423,  424,  425,  426,  427,
        428,  429,  430,  431,  432,  434,  435,  436,  437,  438,   -4,    0,   20,  122,  530,   51,  285,  294,  381,    0,
        114,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  468,    0,  327,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  343, -546,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,  167,    0,  617,    0,    0,    0,  618,  619,  646,    0,    0,    0,  475,
        467,  433,  336,  477,    0,  513,    0,  514,  515, -124,   50,  564, -233,  140,  620,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  340,  341,  342,    0,    0,
        379,    0,    0,  292,    0,    0,    0,   52,    0,    0,    0,   53,   54,   55,   56,   57,   58,   59,   60,   61,
         62,    0,  614,    0,   63,   64,   65,   66,   67,   68,    0,   69,   70,   71,   72,   73,   74,   75,  504, -548,
         76,   77,   78,   79,   80,   81,   82,   83,   84,   85,   86,   87,   88,   89,   90,  286,  678,    0,    0,    0,
        650,    0,    0,    0,    0,   91,   92,    0,    0,    0,   93,    0,    0,    0,    0,  287,  270, -377,  271,  272,
       -379,  227,   -7, -241, -538,  273,  274,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0, -236,    0,    0,  172,    0,  399,  288,    0,  382,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  548,    0,    0,    0,    0,    0,    0,
       -380,    0,    0,    0,    0,    0,    0,    0,    0,  275, -590,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,  476,    0,  675,    0,    0,    0,  641,    0,  651,    0,    0,    0,    0,  546,  289,
          0,    0,    0,    0,    0,    0,    0,    0,    0,  660,    0,    0,  673,    0,    0,    0,    0,  276,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  277,  278,    0,  517,  516, -420, -421, -422, -423,
       -424, -425, -426, -427, -428, -429,    0,    0,    0,    0, -436, -437, -438, -439, -440, -441, -442, -443, -444, -445,
       -446, -447, -448, -449, -450, -451, -452, -453, -454, -455, -456, -457, -458, -459, -460, -461, -462, -463, -464, -465,
       -466, -467, -468, -469, -470, -471, -472, -473, -474, -126,  693,   -9,   -8, -124,   50,   -7, -492,   44,  346,  347,
       -217, -219,  405,  348,  349,  350,  351,  352,  353,  354,  355,  356,  357,  358,  359,  360,  362,  363,  364,  365,
        366,   -3,   18,   17,  119,  206,   51,  209,  196,  207,  174,   52,  201,  307,  487,   53,   54,   55,   56,   57,
         58,   59,   60,   61,   62,  234,  235,  326,   63,   64,   65,   66,   67,   68,  146,   69,   70,   71,   72,   73,
         74,   75,  321, -385,   76,   77,   78,   79,   80,   81,   82,   83,   84,   85,   86,   87,   88,   89,   90,  488,
        656, -215, -213,  236,  616, -211,  610,  410,  237,   91,   92,  445,  361,  317,   93,  574,  575,  576, -563,   94,
        106,  293, -252, -253,  586,  584,    0,  542, -268,  585,    0,    0,    0,    0,    0,    0,    0,  319,    0,  604,
       -276,    0,    0,  323,    0,    0,  340,  341,  342, -601, -602, -603, -604, -605, -606,    0, -607,    0,    0, -608,
       -609, -610, -611, -612, -613, -614, -615,    0, -616, -617, -618, -619, -620, -621, -622, -623, -624, -625, -626, -627,
       -628, -629, -630, -631, -632, -633, -634, -635, -636, -637, -638, -639, -640, -641, -642, -643, -644, -645, -646, -647,
       -648, -649, -650, -651, -652, -653, -654, -655,    0,    0, -656, -657, -658, -659, -660, -661, -662, -663, -664, -665,
       -666, -667, -668, -669, -670, -671, -672, -673, -674, -675, -676, -677, -678, -679, -680, -681, -682, -683, -684,    0,
       -685, -686, -687, -688, -689, -690, -691, -693, -694, -695, -692, -696,  401,    0,    0, -698, -699,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0, -700, -701, -702, -703, -704, -705, -706, -707, -708, -709,
       -710, -711, -712, -713, -714, -715, -716, -717, -718, -719, -720, -721, -722, -723, -724, -725, -726, -727, -728, -729,
       -730, -731, -732, -733, -734, -735, -736, -737, -738, -739, -740, -741, -742, -743, -744, -745, -746, -747, -748, -749,
       -750, -751, -752, -753, -754, -755, -756, -757, -280,    0,    0,    0,  400, -263,    0,    0,  170,    0,    0,    0,
          0,    0, -601, -602, -603, -604, -605, -606,    0, -607,    0,    0, -608, -609, -610, -611, -612, -613, -614, -615,
          0, -616, -617, -618, -619, -620, -621, -622, -623, -624, -625, -626, -627, -628, -629, -630, -631, -632, -633, -634,
       -635, -636, -637, -638, -639, -640, -641, -642, -643, -644, -645, -646, -647, -648, -649, -650, -651, -652, -653, -654,
       -655,    0,    0, -656, -657, -658, -659, -660, -661, -662, -663, -664, -665, -666, -667, -668, -669, -670, -671, -672,
       -673, -674, -675, -676, -677, -678, -679, -680, -681, -682, -683, -684,    0, -685, -686, -687, -688, -689, -690, -691,
       -693, -694, -695, -692, -696,  401,    0,    0, -698, -699,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0, -700, -701, -702, -703, -704, -705, -706, -707, -708, -709, -710, -711, -712, -713, -714, -715, -716,
       -717, -718, -719, -720, -721, -722, -723, -724, -725, -726, -727, -728, -729, -730, -731, -732, -733, -734, -735, -736,
       -737, -738, -739, -740, -741, -742, -743, -744, -745, -746, -747, -748, -749, -750, -751, -752, -753, -754, -755, -756,
       -757, -285, -288, -286, -287, -282,  212, -283,  -25,  128,  213,  214,  215, -290, -259, -601, -602, -603, -604, -605,
       -606, -297, -607, -298, -299, -608, -609, -610, -611, -612, -613, -614, -615, -237, -616, -617, -618, -619, -620, -621,
       -622, -623, -624, -625, -626, -627, -628, -629, -630, -631, -632, -633, -634, -635, -636, -637, -638, -639, -640, -641,
       -642, -643, -644, -645, -646, -647, -648, -649, -650, -651, -652, -653, -654, -655, -322, -323, -656, -657, -658, -659,
       -660, -661, -662, -663, -664, -665, -666, -667, -668, -669, -670, -671, -672, -673, -674, -675, -676, -677, -678, -679,
       -680, -681, -682, -683, -684, -312, -685, -686, -687, -688, -689, -690, -691, -693, -694, -695, -692, -696, -697, -318,
       -319, -698,  216, -291, -292, -293, -294, -295, -296, -313, -314, -315, -316, -317, -320, -321, -700, -701, -702, -703,
       -704, -705, -706, -707, -708, -709, -710, -711, -712, -713, -714, -715, -716, -717, -718, -719, -720, -721, -722, -723,
       -724, -725, -726, -727, -728, -729, -730, -731, -732, -733, -734, -735, -736, -737, -738, -739, -740, -741, -742, -743,
       -744, -745, -746, -747, -748, -749, -750, -751, -752, -753, -754, -755, -756, -757, -285, -288, -286, -287, -282,  212,
       -283,  -28,  129,  213,  214,  215, -290, -246, -601, -602, -603, -604, -605, -606, -297, -607, -298, -299, -608, -609,
       -610, -611, -612, -613, -614, -615, -238, -616, -617, -618, -619, -620, -621, -622, -623, -624, -625, -626, -627, -628,
       -629, -630, -631, -632, -633, -634, -635, -636, -637, -638, -639, -640, -641, -642, -643, -644, -645, -646, -647, -648,
       -649, -650, -651, -652, -653, -654, -655, -322, -323, -656, -657, -658, -659, -660, -661, -662, -663, -664, -665, -666,
       -667, -668, -669, -670, -671, -672, -673, -674, -675, -676, -677, -678, -679, -680, -681, -682, -683, -684, -312, -685,
       -686, -687, -688, -689, -690, -691, -693, -694, -695, -692, -696, -697, -318, -319, -698,  216, -291, -292, -293, -294,
       -295, -296, -313, -314, -315, -316, -317, -320, -321, -700, -701, -702, -703, -704, -705, -706, -707, -708, -709, -710,
       -711, -712, -713, -714, -715, -716, -717, -718, -719, -720, -721, -722, -723, -724, -725, -726, -727, -728, -729, -730,
       -731, -732, -733, -734, -735, -736, -737, -738, -739, -740, -741, -742, -743, -744, -745, -746, -747, -748, -749, -750,
       -751, -752, -753, -754, -755, -756, -757
      };

   // T_matrix row. 
      static ushort Tr [694] = 
      {
        709,  709,  709,  709,  709,  709,  709,  709,  709,  709,  709,  298,  709,  709,  709,  709,  709,  709,  298,  298,
        298,  709,  709,  709,  709,  709,  709,  709,  709,  709,  709,  709,  709,  709,  516,  709,  709,  709,  709,  709,
        298,  709,  709,  709,  709,  709,  298,  709,  709,  516, 1221, 1414, 1221, 1221, 1221,  182, 1221, 1221, 1221, 1221,
       1221, 1221,  405, 1221,  709, 1221, 1221,  709,  709, 1221, 1221, 1221, 1221, 1221,   84,   69, 1221, 1221, 1221, 1221,
       1221, 1221, 1221, 1221, 1221, 1221, 1221, 1221, 1221,  298,   44,   42, 1028,   26,  516,  709,  709,  709,  709,  709,
        709,  709,  709,  709,  709,  709,   62,  709, 1221,  709,  709,  709,  709, 1221, 1221,  709,  709,  709,  709,  709,
        709,  709,  709,  709,  709, 1221,  709,  709, 1221,  298,  709,  709,  709,  516,  709,  709,  709,  709,  709,  709,
        709,  709,  298,  709,  709,  298, 1221,  709,  709,  709,  709,  709, 1414,  182,  709,  709,  709,  709,  709,  709,
        709,  709,  709,  709,  709,  709,  709, 1221,  516,  516,  516,  516,  516, 1221, 1221,  298,  709,  405,  709,  709,
        516,  709,  709,  182,  709,  405,  709,  709,  709,  709,  298,  709,  709,  182, 1414,  709,   51,  709,  709,  709,
       1221, 1221,  709,  709,  709,  709,   84,   69,  709,   27,   35, 1221,  709,  709,  709,  709,  709,  298,  298, 1221,
        298,  298,  298,  709,  709,  709,  835,  182,  298,  298,  298,  298,  298,  298, 1221,  709,  298, 1221,  298,  298,
        298,  709,  298,  298,  298,  298,  298,   44,  516,  709, 1221,   25,  298,  298,  298,  298,  298,  298,  298,  298,
        298,  298,  298,  298,  298,  709,  298,  709,   33,  298,  182,  182,  182,  516,  516,  516,   42,  516,   84,    0,
        709,  709,    1,  709,  709,    2,    3,   28,    4,  709,  709,    5,    6,  405,    7,  709,  298,  709,  298,  516,
        709,   84,  298,  298,  709,  709, 1221, 1221,  709,  709,  709,   69,  709,  516, 1221,  709, 1028,  516,  709,   26,
        182,  516,  709,  516,  182, 1221,  709, 1221,  709,  298,  709, 1414,  709, 1221, 1221,  298,  516,  298,  709,  298,
         62,   62,   62,  516,  709,  709,  516,  516,  516,  516,  516,  516,  516,  516,  516,  516,  516,  516,  516,  516,
        516,  516,  516,  516,  516,  516,  516,  298,  298,  298,  298,  182,   51,  298,  298,  516,  709,  516,  298,  709,
         69,   27,   27,  709,  182,  298,  298,  709,  709,  709,  709,  709,  709,  709,  709,  709,  709,  298,  298, 1414,
        709,  709,   29,  298,  709,  182,  709,  298,  709,  709,  405,  709,  298,    8,    9,  709,  709,  709,  516,  516,
        516,  516,  516,  516,  516,  516,  516,  516,  516,  516,  516,  516,  516,  516,  516,  516,  516,  516,  516,  182,
        405,  516,  516,  516,   10,  709,  709,  709,  709,  709,  709,  709,  709,  709,  709,  709,  709,  709,  709,  709,
        709,  709,  709,  709,  709,  709,  709,  709,  709,   11,  709, 1221, 1221, 1221, 1221, 1221, 1221, 1221,  298,  298,
        182,  405,   12,   69,  298,  298, 1221, 1221,   13,  709,  709,  709,  709,  709,  709,  709,   69,  709,  516,  298,
       1221,  298,  298,  298, 1221,  298, 1221,  516,  516,  516,  182,  182,  182,  182,  182,  182,   62,   62,  298,  298,
        298,  516,  298,  709,  709,  709,  709,  709,  709,  709,   84,   27,  709,  709,  709,  182,   84,  709, 1221, 1221,
        298,  182,   35,  709,  405,   14,  709,  709,  709,  298,  298,  298,  298,  298,  298,  298,  709,  298,  298,  298,
         15,  709,  709,  709,   44,  709,  709,  709,   16,  709,  298, 1221,  298,  516, 1221, 1221, 1221,  298,  182,   31,
        182,  298,  298,   84, 1028,  835,   35,   35,  709,  709,  709,  709, 1221,  709,   84,   17,   18,  405, 1221,  709,
         19,  298,  298,  298,   69,  298,  298,  298,  709,  709,  709,  709,   84,   69,   20,  709, 1221,  709,  709,  516,
       1028,   42,  298,  298,  298, 1221,  298,   84,   44, 1221,  405,  516,   84,   42, 1221,   44,  709,  298,  709,  298,
        298,  709,   69,  516,  709,  709,  709,  709,   21,  709, 1221,  709,  709,   22,  709, 1221,   84,  298,  298,  516,
       1028,  298,  298, 1221,  516,  298,  709,  298, 1221,  405,  298,  709,  709,  835,  709,   84,  298,  709,   84,  298,
       1221,  298,  709,  298,  709,  709, 1221, 1221,  298,  709,  709,  298,  298,  709
      };

   // T_matrix column. 
      static uchar Tc [206] = 
      {
          1,    1,    0,    2,    3,    1,    2,    3,    6,    4,    5,    6,   11,   12,   92,    7,    8,    9,   10,   11,
         93,   96,   12,   98,   13,   14,   15,   16,   17,   18,   19,   20,   21,   22,   23,   24,   25,   26,  103,   27,
         28,   29,   30,   31,   32,   33,   34,   35,   36,   37,   38,   39,   40,   41,   42,   43,   44,   45,   46,   47,
         48,   49,   50,   51,   52,   53,   54,   55,   56,   57,   58,   59,   60,   61,   62,   63,   64,   65,   66,   67,
         68,   69,   70,   71,   72,   73,   74,   75,   76,   77,   78,   79,   80,   81,   82,   83,   84,   85,   86,   87,
         88,   89,   90,   91,   92,   93,   94,   95,   96,   97,   98,   99,  100,  101,  102,  103,  104,  105,  106,  107,
        108,  109,  110,  111,  115,  112,  113,  114,  115,  116,  117,  118,  119,  120,  121,  122,  123,  124,  125,  126,
        127,  128,  129,  130,  131,  132,  133,  134,  135,  136,  137,  138,  139,  140,  141,  142,  143,  144,  145,  146,
        147,  148,  149,  150,  151,  152,  153,  154,  155,  156,  157,  158,  159,  160,  161,  162,  163,  164,  165,  166,
        167,  168,  169,  170,  171,  172,  173,  174,  175,  176,  177,  178,  179,  180,  181,  182,  183,  184,  185,  186,
        187,  188,  189,  190,  191,  192
      };

/*--- Nonterminal Transition Matrix and Access Vectors. ----------------------*/

   // N_matrix. 
      static short Nm [3399] = 
      {
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,  492,  572,  577,  581,  582,  601,  605,  606,  607,  622,  623,  624,
        637,  639,  640,  657,  658,  661,  662,  665,  667,  670,  676,  679,  681,  683,  688,  691,  692,  558,  536,  536,
        537, -214,  536,  537, -214,  536,  537, -214,  492,  493, -214,    0,    0,    0,    0, -418, -419, -417,  224,  225,
          0,    0,    0,    0,    0, -416,    0,  570,  554,    0,  494,  555,    0,  -68,  557,    0,    0,  552,    0, -130,
          0,    0, -131,    0,  685, -132,    0,  689,    0,    0,  690, -155, -156,  674,    0, -156,  390,    0, -156,  559,
       -128,  188, -134,    0,  391,    0, -370, -371, -384,    0,  281,  224,  225,  -69, -534, -383, -135, -136,  111, -382,
        269,    0,  392, -347, -371, -384,    0,  268,  224,  225,  302, -346, -383,    0,    0,    0, -382,  269,    0,    0,
          0,    0,    0,    0,    0,    0,  265,  337, -240,  197,    0,  115,    0,    0,    0,    0, -347, -371, -384,    0,
        268,  224,  225,  305, -346, -383,    0,    0,  463, -382,  269,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        368, -331,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  123,    0,    0,  328,  -58, -347, -371,
       -384,    0,  268,  224,  225,    0, -346, -383,    0,    0,  175, -382,  269,    0, -330, -347, -371, -384,    0,  268,
        224,  225,  385, -346, -383,  -23,    0,    0, -382,  269,    0,    0,    0,    0, -170,  183,    0,    0,  404,  386,
       -347, -371, -384,    0,  268,  224,  225,    0, -346, -383,    0,    0,  185, -382,  269,  406, -340, -347, -371, -384,
       -196,  268,  224,  225,  478, -346, -383,    0,    0,    0, -382,  269,    0, -341,    0,    0,    0,    0,    0,    0,
        534,  484,    0,    0,    0,    0,    0,    0, -189,    0,    0,    0,    0,    0,  188,    0,    0,  543, -327, -347,
       -371, -384,    0,  268,  224,  225,    0, -346, -383,    0,    0,    0, -382,  269,    0, -326,    0,    0,    0,  296,
          0,    0,    0,  485, -347, -371, -384,    0,  268,  224,  225,    0, -346, -383,    0,    0,    0, -382,  269,  562,
          0, -239,    0,    0,    0,    0,    0,    0,  499,  202,    0,    0,    0,    0, -347, -371, -384, -328,  268,  224,
        225,    0, -346, -383,  563,  295,  375, -382,  269,    0,    0, -347, -371, -384,  -63,  268,  224,  225,  503, -346,
       -383,    0, -329,    0, -382,  269,    0,    0,    0,    0,    0,    0, -182,    0,  590,  520,   40,  -42, -214,    0,
          0, -370, -371, -384,    0,  281,  224,  225,    0,    0, -383,  645, -333,    0, -382,  269,    0,    0,    0,    0,
          0,    0,  -53,    0,    0,  254,  123,  124, -214, -337,    0, -370, -371, -384,    0,  281,  224,  225,    0,    0,
       -383,  159,    0,    0, -382,  269,    0,    0,    0,    0,    0,    0,    0,    0,    0,  257,    0,    0,  -24,   95,
        -30, -214,    0,  452, -370, -371, -384,    0,  281,  224,  225,  162,    0, -383,    0,    0,  180, -382,  269,    0,
          0, -347, -371, -384,    0,  268,  224,  225,  259, -346, -383,    0,    0,  455, -382,  269,    0,    0,    0,    0,
          0,    0, -182,    0,  164,  407,  297,  -48,    0,    0,    0, -347, -371, -384,    0,  268,  224,  225,    0, -346,
       -383,  533,    0,   21, -382,  269,  457,    0,    0,    0,    0,  111,  112, -214,    0,  501, -370, -371, -384, -345,
        281,  224,  225,    0,    0, -383, -179,    0,    0, -382,  269,  588,    0,    0, -514,  -35,    0,    0,    0,    0,
        253,    0,  110,    0,    0,    0,    0,    0,    0, -344,    0,    0,    0,   40,   41, -214,  158,    0, -370, -371,
       -384,    0,  281,  224,  225,    0,    0, -383,    0,    0,    0, -382,  269,    0,    0,    0,    0,    0,  451,  -54,
          0,    0,  256, -528,    0,  175,  176, -214,    0,    0, -370, -371, -384,    0,  281,  224,  225,    0,  161, -383,
          0,    0,    0, -382,  269,    0,    0,    0,    0, -171,    0,    0,    0,    0,  258,    0,    0,   95,   97, -214,
        454,    0, -370, -371, -384,    0,  281,  224,  225,    0,  163, -383,    0,    0,    0, -382,  269,    0,    0,    0,
          0,    0,    0,    0,    0,    0,  260,    0,    0,    0, -165,    0,  456,    0,    0,    0,    0,    0,    0,    0,
          0,    0,  165,    0,    0,  -49,    0,  183,  184, -214, -524,    0, -370, -371, -384,    0,  281,  224,  225,    0,
          0, -383,    0,    0,  458, -382,  269,    0,    0,    0,    0,    0,  185,  186, -214,    0,  263, -370, -371, -384,
       -197,  281,  224,  225,    0,    0, -383, -185,    0,    0, -382,  269,  199,    0,    0,    0,    0,  115,  116, -214,
       -190,  264, -347, -371, -384,    0,  268,  224,  225,    0, -346, -383,    0,    0,  461, -382,  269,  241,    0,    0,
       -192,    0,    0,    0,    0,    0,  374,  202,  203, -214,    0, -530, -347, -371, -384,    0,  268,  224,  225,  462,
       -346, -383,  388,  -59,    0, -382,  269,    0,  375,  376, -214,    0,  -64, -347, -371, -384,  505,  268,  224,  225,
       -339, -346, -383,    0,    0, -173, -382,  269,    0,    0,    0,    0,  609,    0, -183,  389,    0,  518,    0, -532,
          0,    0, -418, -419, -417,  224,  225,    0,    0,    0, -334,    0, -415,  615,    0,    0,    0,    0,    0,    0,
          0,  390,    0,    0,  551, -128,    0, -134,    0,  391,    0, -335,    0,    0,    0,    0,    0,    0,    0,    0,
        671, -135, -136,  -48,  180,  182, -214,  392,    0, -370, -371, -384,    0,  281,  224,  225,    0,    0, -383,    0,
        -68, -174, -382,  269,    0,    0,    0,    0,    0,    0, -183,    0,    0,  262,    0,  181,  115,  116, -214,    0,
          0, -370, -371, -384,    0,  281,  224,  225,    0,  198, -383,    0,    0,    0, -382,  269,    0,    0,    0,    0,
          0,    0,    0,    0,    0,  255,    0,    0, -501,  117, -529,  460,    0,    0, -180,    0,    0,    0,    0,    0,
          0,  160,  -59,  118,    0,    0,   11,   12, -214,    0,    0, -370, -371, -384,  -37,  281,  224,  225,    0,    0,
       -383,    0,    0,  453, -382,  269,    0,    0,    0,    0,    0,    5,    0,    0,    0,  329,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,   10,    0,    0,    0,  284,    0,  194,    0,    0,    0,    0, -517,    0,
        115,  116, -214,    0,    0, -370, -371, -384,    0,  281,  224,  225,    0,  465, -383,    0,    0,    0, -382,  269,
          0,    0,    0,    0,    0,    0,    0,    0,    0,  335,    0,    0, -501,  195, -529,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,  304,  -59,  118,    0,    0,   32,  -32, -214,    0,    0, -370, -371, -384,    0,  281,
        224,  225,    0,    0, -383,    0,    0,  466, -382,  269,    0,    0,    0,    0,    0,    0,    0,    0,    0,  243,
          0,    0, -227,    0,   34,    0,    0,    0,    0,    0,    0,    0,    0,    0, -265,  151, -231,    0,    0,    0,
          0,    0,    0, -264,  190,  191, -214,    0,    0, -370, -371, -384,    0,  281,  224,  225,    0,  446, -383,    0,
          0,   21, -382,  269,    0,    0,    0,    0,    0,    0,    0,    0,    0,  303, -262,    0,    0,    0,  -15,    0,
          0,    0,    0,  192,    0,    0,    0,    0,    0,  283,  189,    0, -513,    0,  202,  203, -214, -489,    0, -347,
       -371, -384,    0,  268,  224,  225,    0, -346, -383,    0,    0,  464, -382,  269,    0,    0,    0,    0,    0,  -64,
          0,    0,    0,  369,    0,    0,    0,    0,  204,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  387,
          0, -503,  205,    0,    0,    0, -531,    0,    0,  202,  203, -214,    0,    0, -347, -371, -384, -338,  268,  224,
        225,    0, -346, -383,    0,    0,    0, -382,  269,    0,   32,   33, -214,    0,  -64, -370, -371, -384,  502,  281,
        224,  225,    0,  300, -383,    0,    0,    0, -382,  269,    0,    0,    0,    0,  589,    0, -503,  205,    0,  246,
       -568, -531, -228,    0,   34,    0,    0,    0,    0,    0,    0,    0, -325,    0,    0,  156, -231,    0,    0,    0,
          0,    0,    0, -277,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0, -274,  449,   95,   97,
       -214, -558,    0, -347, -371, -384,    0,  268,  224,  225,    0, -346, -383,    0, -275,    0, -382,  269,    0,    0,
          0,    0,    0,    0,    0,    0,    0,  403,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,   98,  529,    0,    0,  -49,    0,    0,    0,    0, -523,    0,    0,    0,    0,    0,    0,    0,   99,
          0, -332,    0,    0,  290,   95,   97, -214, -558,  547, -370, -371, -384,    0,  281,  224,  225,    0,    0, -383,
          0,    0,    0, -382,  269,    0,    0,    0,    0,    0,    0,    0,    0,    0,  549,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,   98,  654,    0,    0,  -49,    0,    0,    0,    0, -523,    0,
          0,    0,    0,    0,    0,    0,   99,    0,    0,    0,    0,  490,  280,   95,   97, -214, -558, -576, -370, -371,
       -384,    0,  281,  224,  225,    0,    0, -383,    0,    0,    0, -382,  269,    0,    0,    0,    0,    0,    0,    0,
          0,    0,  550,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,   98,  666,    0,
          0,  -49,    0,    0,    0,    0, -523,    0,    0,    0,    0,    0,    0,    0,   99,    0,   40,   41, -214,  491,
        280, -370, -371, -384,    0,  281,  224,  225,    0,    0, -383,    0,    0, -499, -382,  269,    0,    0,    0,    0,
          0,    0,  -54,    0,    0,  245, -527,    0,  109,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       -266,  155,   43,    0,    0,    0,    0,    0,    0, -264,   95,   97, -214, -558, -403, -370, -371, -384,    0,  281,
        224,  225,    0,  448, -383,    0,    0,    0, -382,  269,    0,    0,    0,    0,    0,    0,    0,    0,    0,  522,
       -262,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,   98,  649,    0,    0,  -49,    0,
          0,    0,    0, -523,    0,    0,    0,    0,    0,    0,    0,   99,    0,    0,    0,    0,  489,  280,    0,    0,
       -594,  494,  495, -214,    0, -250, -370, -371, -384,    0,  281,  224,  225,    0,    0, -383,    0,    0, -552, -382,
        269,    0,    0,    0,    0,    0,    0,  390,    0,    0,  553, -129,    0, -134,    0,  391,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,  677, -135, -136,   95,   97, -214, -558,  392,    0,    0, -536,    0,  223,  224,
        225, -592, -566,    0,    0,    0,    0,    0,  280,    0,    0,    0,    0,    0,    0,    0,    0,    0,  232,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0, -579,    0,   98,  143,    0,    0,  -49, -581,    0,
          0,    0, -523,    0,    0,    0,    0,    0,    0,    0,   99, -258,    0,    0,  523,   96,    0,    0,    0,    0,
          0,  210,  211,    0,    0,    0,    0, -394,   95,   97, -214, -558,    0, -281,    0, -418, -419, -417,  224,  225,
          0, -566,    0,    0,    0, -406,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  238,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0, -579,    0,   98,  147,    0,    0,  -49, -581,    0,    0,
          0, -523,    0,    0,    0,    0,    0,    0,    0,   99, -258,    0,    0,  525,  101,    0,   95,   97, -214, -558,
        210,  211,    0, -418, -419, -417,  224,  225,    0, -566,    0,    0, -281,  441,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,  239,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0, -579,    0,
         98,  148,    0,    0,  -49, -581,    0,    0,    0, -523,    0,    0,    0,    0,    0,    0,    0,   99, -258,    0,
          0,  526,  102,    0,    0,    0,    0,    0,  210,  211,    0,    0,  177,    0,    0, -166,    0, -347, -371, -384,
       -281,  268,  224,  225,    0, -346, -383,    0,    0, -206, -382,  269,    0,    0, -123, -122,    0,    0, -204,    0,
          0,  397,    0,  -73,  -80, -186,    0,    0,    0,    0,    0,  103,    0,    0,    0,    0,    0,  527, -176,    0,
         11,   12, -214,    0,    0, -193, -373, -384,  -37,  281,  224,  225, -592,    0, -383, -342,   31, -476, -382,  269,
        311,    0,    0,    0, -485,    5,    0,    0,    0,  221,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,  135,    0,    0,    0,    0,    0,    0, -518,    0,    0,  682,  686,    0,    0,    0,
          0,    0, -574,    0,    0,    0,    0,    0,    0,    0,  486,    0,    0,    0,    0,    0,    0,    0, -401,    0,
          0,    0, -600,    0, -281,   32,   33, -214,    0,    0, -370, -371, -384,    0,  281,  224,  225, -592,    0, -383,
          0,    0,    0, -382,  269,    0,    0,    0,    0, -497,    0,    0,    0,    0,  228, -567,   35, -228,    0,   34,
          0,    0,    0,    0,    0,   37,  -44, -214, -166, -588,  137, -231, -418, -419, -417,  224,  225,    0, -264,    0,
          0,    0,  442,    0,    0,    0,    0, -123, -122,    0,  544,   36,  344,    0,  240,  539,  -73,  -80, -186,    0,
          0,    0,    0, -390,  103,    0,    0, -555,    0, -262,  149, -176,    0,    0, -581,    0,    0,    0, -193,    0,
          0,    0,    0,    0,    0,  545,    0, -258,    0,   31,    0,    0,    0,    0,   11,   12, -214,    0,  211, -370,
       -371, -384,  -37,  281,  224,  225,    0,    0, -383, -281,    0, -476, -382,  269,    8,    9,    0,    0,    0,    5,
          0,    0,    0,  244,    0,    0,    0, -229,    0,    0,    0,    0,    0,    0,  107,   10,    0,    0,    0,  154,
          0,  108,    0,    0,    0,    0, -517, -277,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       -269,  447,    0, -478,    0,    0,    0,    0,    0,    0,   40,   41, -214,    0, -254, -370, -371, -384, -275,  281,
        224,  225, -592,  411, -383,    0,    0, -499, -382,  269,    0,    0,    0,    0,    0,    0,  -54,    0,    0,  230,
       -527,    0,   42,    0,    0,    0,    0,    0,    0,    0,    0,    0, -579,    0,    0,  139,   43,    0,    0, -581,
         95,   97, -214, -558,  415, -370, -371, -384,    0,  281,  224,  225, -258, -566, -383,    0,    0,  280, -382,  269,
          0,    0,  210,  211,    0,    0,    0,    0, -392,  233,    0,    0,    0,    0, -281,    0,    0,    0,    0,    0,
          0,    0, -579,    0,   98,  144,    0,    0,  -49, -581,    0,    0,  414, -523,    0,    0,    0,    0,    0,    0,
          0,   99, -258,    0,    0,  524,  100,  280,    0,    0,  416,    0,  210,  211,    0,    0,    0,    0,    0,    0,
          0,    6, -495, -214, -281,  279, -370, -371, -384,  -36,  281,  224,  225, -592,    0, -383, -407, -408, -476, -382,
        269,  120,    0, -482,    0,    0,    0,    0,    0,    0,  218,   14,   13,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,  560,  132,    0,    0,    0, -582,    0,    0,    0,    0,    0,  652,  668,    0,    0,
          0,    0,    0, -258,    0,    0,  -16,    0,  280,    0,    0,  200,    0,    0,    0,    0,    0,    0,    0, -388,
          0,    0,   11, -495, -214, -281,  282, -370, -371, -384,  -36,  281,  224,  225, -399,    0, -383,    0,    0, -476,
       -382,  269,  311,    0,    0,    0, -484,  312,    0,    0,    0,  220,   16,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0, -540,    0, -554,  134,    0,    0,    0, -581,    0,    0,  325,    0,    0,  672,  680,    0,
          0,    0,    0,    0, -258,    0,    0,    0,   15,  280,    0,    0,  306,    0,    0,  211,    0,    0,    0,    0,
          0,    0, -597,    0,    0,    0, -281,   37,   27, -214, -167,    0, -370, -371, -384,  -74,  281,  224,  225,    0,
          0, -383,    0,    0,    0, -382,  269,    0,    0, -123, -122, -516,   26,    0,    0,    0,  252,  -75,  -72,  -79,
       -187,   24,  -78,    0,    0,    0,   28,    0,    0,    0,    0,  -76,  157, -177,  -77,    0,    0,    0,    0,   25,
       -194,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,   31,    0,   23,  450,  389,  393, -214, -506,    0,
       -347, -371, -384, -505,  268,  224,  225,    0, -346, -383,    0,    0, -551, -382,  269,    0,    0,    0,    0,    0,
          0,  390,    0,    0,  519, -129,    0, -134,    0,  391, -508,    0,    0,    0,    0, -504,    0,    0,    0,  394,
        638, -135, -136,  -49,  395,    0,    0,  392, -523,    0,    0,    0,    0,  396,    0,    0,    0,    0, -336,    0,
        -69, -533,  177,  178, -214, -167,    0, -347, -371, -384,  -74,  268,  224,  225,    0, -346, -383,    0,    0, -205,
       -382,  269,    0,    0, -123, -122, -202,   26, -203,    0,    0,  398,  -75,  -72,  -79, -187,   24,  -78,    0,    0,
          0,   28,    0,    0,    0,    0,  -76,  528, -177,  -77,    0,    0,    0,    0,   25, -194,    0,    0,    0,    0,
          0,    0,    0,    0,    0, -343,   31,    0,   23,    0,    0,    0, -562,  177,  178, -214, -167,    0, -370, -371,
       -384,  -74,  281,  224,  225,    0,    0, -383,    0,    0, -205, -382,  269,    0,    0, -123, -122, -202,   26, -203,
          0,    0,  261,  -75,  -72,  -79, -187,   24,  -78,    0,    0,    0,   28,    0,    0,    0,    0,  -76,  166, -177,
        -77,    0,    0,    0,    0,   25, -194,    0,    0,    0,    0,    0,    0,    0,    0, -199,  179,   31, -560,   23,
        459,    0,    0, -561,   37,   27, -214, -167,    0,    0, -374, -384,  -74,  281,  224,  225, -592,    0, -383,    0,
          0,    0, -382,  269,    0,    0, -123, -122, -515,   26,  247,    0,    0,  229,  -75,  -72,  -79, -187,   24,  -78,
          0,    0,    0,   28,   38,    0,   39,    0,  -76,  138, -177,  -77, -572,    0,    0,    0,   25, -194,    0,    0,
          0,    0,    0,    0,    0,    0, -573,    0,   31, -520,   23,    0,    0,  250,    0,    0,    0,    0,    0,    0,
          0,    0, -391,    0,    0,    0,    0,    0, -281,   22,   27, -214, -167, -575, -370, -371, -384,  -74,  281,  224,
        225,    0,    0, -383,    0,    0,   21, -382,  269,    0,    0, -123, -122, -509,   26,    0,    0,    0,  242,  -75,
        -72,  -79, -187,   24,  -78,    0, -512,    0,   28,    0,    0, -556,    0,  -76,  150, -177,  -77, -510, -581,    0,
          0,   25, -194,    0,    0,    0,    0,    0,    0,    0,    0, -258,    0,   31,  443,   23,  280,    0,    0,  444,
          0,    0,  211,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0, -281,   11,   12, -214,  267, -570, -347,
       -371, -384,  -37,  268,  224,  225, -592, -346, -383, -409, -410, -476, -382,  269,  120,    0, -481,  121,    0,    5,
        247,    0,    0,  217,    0,    0,    0,    0,    0,    0,    0,    0, -586,    0, -542,   10,    0,    0,  500,  131,
          0,  -13, -571,    0,    0,  330, -517,  248,    0,  647,  663,    0,    0,    0,    0,    0, -573, -324,    0,    0,
          0,    0,  249,  250,  173,    0,    0,    0,    0,    0,    0,    0, -387,  417,    0,    0, -600,    0, -281,   22,
         27, -214, -167,    0,    0, -372, -384,  -74,  281,  224,  225, -592,    0, -383,    0,    0,   21, -382,  269,    0,
          0, -123, -122, -509,   26,   29,    0,    0,  222,  -75,  -72,  -79, -187,   24,  -78,    0, -511,   30,   28, -487,
          0, -580,    0,  -76,  136, -177,  -77, -510, -581,    0,    0,   25, -194,    0,  684,  687,    0,    0,    0,    0,
          0, -258,    0,   31,    0,   23,    0,    0,    0,  538,    0,    0,  211,    0,    0,    0,    0, -389,    0,    0,
          0,    0,    0, -281,   37,   27, -214, -167, -403, -370, -371, -384,  -74,  281,  224,  225, -592,    0, -383,    0,
          0,    0, -382,  269,    0,    0, -123, -122, -515,   26,   47,    0,    0,  231,  -75,  -72,  -79, -187,   24,  -78,
          0,    0,    0,   28,   48,    0, -555,    0,  -76,  141, -177,  -77,  412, -581,    0,    0,   25, -194,    0,    0,
          0,    0,    0,    0,  413,    0, -258,    0,   31,    0,   23,  280,    0,    0, -593,    0,    0,  211,    0,    0,
          0,    0, -393,  402,    0,    0,    0,    0, -281,    6,    7, -214, -522, -569,    0,    0,    0,  -37,  266,  224,
        225, -592, -526,    0, -411, -412,   19,  583, -584,    8,    0,  608, -216, -491,    5,    0,    0,  556,  145,    0,
        481,    0,    0,   -2,  187,  383,  566, -585, -218,    0,   10, -579,  532,  469,  130,    3,  -14,    0, -581,    0,
        322, -517,    0,    0,  611,  625,    0,    0,    0,    0, -279, -258,    0,    0,  -17,    4,  482,    0, -479,  113,
          0,  210,  211,    0,  568,    0,    0, -400,    0,    0,    0, -599,  324, -281,    6,    7, -214, -522,  480,  508,
        573, -535,  -37,  223,  224,  225, -592, -550, -261, -413, -414, -476,  540, -583,    8,    9, -544, -216, -491,    5,
        208,  105,  309,  142,  219,    1, -483,  591,   -1,  104,  308,  566, -585, -218,    2,   10, -579,  310,  251,  127,
          3,  -14, -480, -581,  226,  125, -517, -477,  408,  332,  409,  126, -271,  579,  642,  643, -258,  470, -598,  -17,
          4, -244, -381, -478,   49,  314,  210,  211,  567,  568, -284, -375, -386,  338, -596,  320, -599,  318, -281
      };

   // N_matrix row. 
      static ushort Nr [694] = 
      {
       3314, 3314, 3229, 2974, 2361, 2442, 3314, 2361, 3314, 3229, 1960, 3314, 2442, 3059, 2045, 2804, 2230, 3314, 3314, 3314,
       3314, 3144, 3314, 1689, 2280, 1768, 1836, 2085, 3314, 3314, 2889, 3314, 3314, 1070, 2154, 1516, 1250, 3314, 2527,  551,
       3229,  416,  916,  593, 3314, 2974, 3314,  446, 2527, 3314, 3314, 3314, 3229, 2974, 2361, 3314, 2442, 1960, 3059, 2045,
       2804, 2230, 3314, 3144, 3314, 1689, 2280, 3229, 3314, 1768, 1836, 2085, 2889, 1070, 3314, 3314, 2154, 1516, 1250, 2527,
        551,  416,  916,  593,  446,  625,  479,  657, 2733, 3314, 3314, 3314, 3314, 3314, 3314, 2974,  625,  479,  657, 2733,
        884,  707,  732, 3229,  121, 1124, 3314,  966, 3314, 1020, 2085, 3314,  138,  884,  707, 2361,  171, 1174,  757, 3314,
       3314, 2361, 3314, 3314,  213, 3314, 2974, 2361, 3229, 3314, 2442, 1960, 3059, 3314, 2045, 2804, 2230, 3144, 1689, 2280,
       3314, 1768, 3314, 1836, 2085, 3314,  732, 2889, 1070, 2154, 1516, 1250, 2974, 3314, 2527,  551,  416,  916,  593,  446,
        625,  479,  657, 2733,  884,  707,  732,  121, 3229, 2974, 2361, 2442, 3314, 1124,  966, 3314,  230, 3314, 1912, 2662,
       3314, 1318,  496, 3314,  255, 3314,  272,  314, 3314, 1070, 3314,  339,  526, 3314, 3314, 1229, 3314,  416,  121, 1124,
       1020,  138, 2442,  369, 3314,  787, 3314, 3314, 2442, 3314, 3314, 2361, 3314, 3314, 3314, 3314, 3314, 3314, 3314, 3314,
       3314, 3314, 3314, 3314, 3314, 3314, 3229, 3229, 3314, 3314, 3314, 3314, 3314, 3314, 2442, 3314, 3314,  171, 3314, 3314,
       3314,  966, 3314, 3314, 3314, 3314, 3314, 3314, 2974, 3314, 1960, 3314, 3314, 3314, 3314, 3314, 3314, 3314, 3314, 3314,
       3314, 3314, 3314, 3314, 3314, 1020, 3314,  138, 3314, 3314, 3314, 2974, 2361, 1960, 3059, 2045, 3314, 2804, 3314, 3314,
       3314, 3314, 3314,  171, 1174, 3314, 3314, 3314, 3314,  757,  808, 3314, 3314, 3314, 3314,  479, 3314, 3314, 3314, 3314,
       3229, 3314, 3314, 3314,  213,  230, 1174,  757, 2595, 1912, 2662, 3314, 1960, 3314, 3059, 3314, 2045, 2230, 2974, 3314,
       2442, 3144, 1318, 1689, 1960,  213, 3314,  230,  496, 3314, 3314, 2804, 3314, 2230, 3144, 3314, 2280, 3314, 3229, 2974,
       1768, 1836, 2085, 2889, 3314, 3314, 1070, 2154, 1516, 1250, 2527,  551,  416,  916,  593,  446,  625,  479,  657, 2733,
        884,  707,  732,  121, 1124,  966, 1020, 3314, 3314, 3314, 3314, 3229, 3314, 3314, 3314, 3314,  386, 3314, 3314,  255,
       3314, 3314, 3229, 2595, 3314, 3314, 3314,  272,  314, 1960, 1570, 1385, 1453,  835,  657,   68, 1641, 3314, 3314, 3314,
       3314, 3314, 3314, 3314,  339, 2974,  526, 3314, 1229,  369, 3314,  787, 3314, 3314, 3314, 3314, 3314, 2361,  138,  171,
       1174,  757,  213,  230, 1912, 2662, 1318,  496,  255,  272,  314,  339,  526, 1229,  369,  787,  808, 2595,  386, 3314,
       3314, 3314, 3314, 3314, 3314,  808, 3314, 3314, 3314, 3314, 3314, 3314, 3314, 3314, 3314, 3314, 3314, 3314, 3314, 3314,
       3314, 3314, 3314, 3314, 3314, 3314, 3314, 2595,  386, 3314, 1570, 1689, 2280, 1768, 1836, 1912, 2662, 1318, 3314, 3314,
       3314, 3314, 3314, 3229, 3314, 3314,  496,  255, 3314,   59,   62,   65, 3059,   28, 2045,   90, 3314, 3314, 1570, 3314,
        272, 3314, 3314, 3314, 2085, 3314, 2889, 3314, 1385, 1453, 3059, 2045, 2804, 2230, 3144, 1689,  835,   68, 3314, 3314,
       3314, 3314, 3314, 1385, 1453,  835,   68, 1641,   59,   62, 3229, 2974,   65,   28,   90, 2361, 3314,   58,  314,  339,
       3314, 3314, 3314,   58, 3314, 3314,    0, 3314, 3314, 3314, 3314, 3314, 3314, 3314, 3314, 3314,    1, 3314, 3314, 3314,
       3314, 3314,    2,    3, 3229, 3314, 3314, 3314, 3314, 3314, 3314, 2889, 3314, 1641,  526, 1229,  369, 3314, 3314,    4,
       2442, 3314, 3314, 3314, 1070, 2154, 3229, 2974,    5,    6,    7, 3229,  787, 3314, 3229, 3314, 3314, 3314,  808, 3314,
       3314, 3314, 3314, 3314, 3314, 3314, 3314, 3314,    8,    9,   10, 3229, 3314, 3314, 3314,   11, 2595,   12,   13, 3314,
       1516, 3314, 3314, 3314, 3314,  386, 3314, 2974, 3314, 1570, 3314, 3314, 2361, 3314, 1385, 3314, 3314, 3314,   14, 3314,
       3314,   15, 3314, 3314, 3314,   16,   17, 2974, 3314,   18, 1453,   19, 2361, 3314,   20,  835, 2442, 3314, 3314, 3314,
       3229, 3314, 3314,   68, 3314, 3314,   21, 3314, 1641, 3314, 3314,   22, 2442, 1250,   23, 1960, 3314,   24, 3059, 3314,
         59, 3314, 1960, 3314, 3059,   25,   62,   65, 3314,   26,   27, 3314, 3314, 3314
      };

   // N_matrix column. 
      static uchar Nc [758] = 
      {
         31,   31,   31,   40,   40,   53,   48,   17,   26,   26,   32,   32,   34,   34,   34,   46,   66,   66,   65,   24,
         31,   40,   53,   48,   48,   17,   30,   26,   32,   34,   34,   34,   34,   46,   47,   52,   25,   25,    8,   66,
         65,   24,   24,   24,   24,   31,    3,   40,   53,   53,   48,   48,   17,   30,   30,   26,   26,   32,   34,   34,
         46,   46,   47,   52,   52,   25,   25,    8,   66,   66,   65,   65,   24,   24,   24,   24,   24,   24,   24,   24,
         24,   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
         31,   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
         31,   31,   31,   31,   70,    0,    0,    3,   17,   17,   30,   30,   30,   30,   30,   30,   30,   26,   26,   26,
         26,   26,   26,   32,   32,   32,   34,   34,   34,   46,   47,   52,   52,   52,   33,   40,   40,   53,   53,   53,
         53,   44,   48,   48,   25,    8,   66,   66,    3,    3,   65,   65,   24,   30,   30,   32,   34,   34,   46,   31,
         31,   70,   17,   17,   26,   47,   52,   52,   33,   40,   40,   53,   44,   25,   25,   53,   48,   48,    8,   66,
          3,   65,   70,   70,   70,   70,   70,   17,   17,   17,   22,   22,   23,   23,    1,    2,   22,   23,   35,   39,
         26,   26,   26,   26,   26,   63,   24,   30,   30,   32,   32,   32,   34,   46,   31,    4,   33,   33,   33,   35,
         35,   39,   47,   40,   48,   48,   26,   67,   67,   52,   52,   52,    5,    6,    7,   13,   13,   42,   49,   49,
         44,   44,   44,   44,   44,   14,   14,   18,   53,   19,   37,   38,   58,   66,   66,   66,   66,   66,   60,   60,
         61,   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
         62,   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
         62,   62,   62,   62,    3,   63,   63,   63,   63,   63,   63,   63,   63,   63,   63,   63,   63,   63,   63,   63,
         63,   63,   63,   63,   63,   63,   63,   63,    4,   67,   67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
         67,   67,   67,   67,   67,   67,   67,   67,   67,   67,   67,    5,    5,    5,    5,    6,    6,    6,    6,    6,
          6,    6,    6,    6,    6,    6,    7,    7,    7,    8,    8,    8,    8,    8,    8,   65,    9,    9,   10,   10,
         11,   11,   11,   70,   64,   12,   79,   13,   13,   13,   13,   14,   14,   14,   14,   15,   16,   17,   17,   17,
         18,   18,   18,   18,   18,   18,   18,   18,   18,   18,   68,   68,   68,   68,   68,   68,   19,   19,   19,   19,
         19,   19,   19,   19,   19,   19,   19,   19,   19,   19,   19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
         19,   19,   19,   19,   19,   19,   19,   19,   19,   19,   19,   19,   19,   19,   19,   20,   20,   69,   21,   21,
         22,   23,   23,   24,   25,   25,   26,   26,   27,   27,   28,   28,   29,   29,   30,   30,   31,   31,   32,   32,
         33,   33,   34,   34,   35,   35,   35,   36,   36,   37,   37,   38,   38,   39,   39,   40,   40,   41,   41,   42,
         42,   43,   43,   44,   44,   45,   45,   46,   46,   47,   47,   48,   48,   49,   49,   50,   50,   51,   51,   52,
         52,   53,   53,   54,   54,   55,   55,   56,   56,   57,   57,   58,   58,   59,   59,   60,   60,   61,   61,   62,
         62,   63,   63,   64,   64,   65,   65,   66,   66,   67,   67,   68,   68,   69,   69,   70,   70,   71,   71,   72,
         72,   73,   73,   74,   74,   75,   75,   76,   76,   77,   77,   78,   78,   79,   79,   80,   81,   81,   82,   83,
         83,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,
         84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,
         84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,
         84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,
         84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,
         84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,
         84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,
         84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84,   84
      };

/*--- Reduction Matrix and Access Vectors. -----------------------------------*/

   // R_matrix. 
      static ushort Rm [1668] = 
      {
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  475,  125,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,   12,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,  125,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,  494,    0,    0,    0,    0,  494,  494,    0,    0,    0,    0,  494,    0,    0,    0,  494,    0,
        494,  494,  494,  494,  494,  494,  494,    0,    0,  494,    0,  494,  494,    0,    0,    0,  494,    0,    0,    0,
          0,  494,  494,    0,    0,    0,    0,  494,    0,    0,    0,    0,    0,  494,  494,  494,  494,  494,  494,  494,
          0,    0,  494,    0,  494,    0,    0,    0,    0,   34,    0,    0,    0,    0,    0,    0,    0,    0,    0,   34,
          0,  125,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        125,  125,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  486,    0,  125,    0,    0,    0,  125,    0,
          0,    0,    0,    0,    0,    0,    0,    0,  496,  496,    0,    0,    0,    0,  496,    0,    0,    0,  496,    0,
        496,  496,  496,  496,  496,  496,  496,    0,    0,  496,    0,  496,  125,    0,    0,    0,    0,    0,    0,    0,
        125,  125,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  519,    0,  125,    0,    0,    0,  125,    0,
          0,    0,    0,    0,    0,    0,    0,    0,  498,    0,    0,    0,    0,  498,    0,    0,    0,    0,    0,  498,
        498,    0,  498,  498,  498,  498,    0,    0,  498,    0,  498,    0,    0,    0,    0,    0,    0,    0,    0,  557,
          0,    0,    0,    0,  557,    0,    0,    0,    0,  557,    0,  125,  557,    0,    0,    0,  557,    0,    0,  557,
          0,  557,    0,    0,    0,    0,    0,    0,    0,    0,  557,    0,    0,    0,    0,  557,    0,    0,    0,    0,
        557,    0,  125,  557,    0,    0,    0,  557,    0,    0,  557,  557,  557,    0,    0,    0,    0,    0,    0,    0,
        125,  125,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,   21,    0,  125,    0,    0,    0,  125,    0,
          0,    0,    0,    0,    0,    0,    0,    0,  210,    0,    0,    0,    0,  210,  210,    0,  210,    0,    0,  210,
          0,    0,    0,  210,  210,  210,    0,  210,    0,    0,    0,  210,    0,    0,  210,  210,    0,    0,    0,    0,
          0,    0,    0,  230,  230,    0,    0,    0,    0,  230,    0,  475,  125,  230,    0,  230,  230,  230,  230,  230,
        230,  230,    0,    0,  230,    0,  230,  230,    0,    0,    0,    0,    0,    0,    0,    0,  498,    0,    0,    0,
          0,  498,    0,    0,    0,  498,    0,  498,  498,    0,  498,  498,  498,  498,    0,    0,  498,    0,  498,    0,
          0,    0,    0,    0,    0,    0,  226,  226,    0,    0,    0,    0,  226,    0,    0,    0,  226,    0,  226,  226,
        226,  226,  226,  226,  226,    0,    0,  226,    0,  226,  125,    0,    0,    0,    0,    0,    0,    0,  125,  125,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,   40,    0,  125,    0,    0,    0,  125,    0,    0,    0,
          0,    0,    0,    0,    0,    0,  500,    0,    0,    0,    0,  500,    0,    0,    0,    0,    0,  500,  500,  500,
        125,  500,  500,  500,    0,    0,  500,    0,  500,    0,    0,    0,    0,    0,    0,    0,    0,   52,    0,    0,
          0,    0,   52,    0,    0,    0,   52,    0,   52,   52,    0,   52,   52,   52,   52,    0,    0,   52,    0,   52,
          0,    0,    0,    0,    0,    0,    0,  125,  125,    0,    0,    0,    0,    0,    0,    0,    0,    0,   27,    0,
          0,  125,    0,    0,    0,  125,    0,    0,    0,    0,    0,    0,    0,    0,    0,  537,  537,  537,    0,    0,
        537,  537,  537,    0,    0,  549,    0,    0,    0,  537,  537,  537,  537,  537,  537,  537,  537,  537,  537,  537,
        537,  537,  537,  537,  537,  537,  537,  537,  537,    0,    0,    0,    0,    0,    0,    0,    0,  200,    0,    0,
          0,    0,  200,    0,    0,    0,    0,  200,    0,  125,  200,    0,    0,    0,  200,    0,    0,  200,  200,  200,
          0,    0,    0,    0,    0,    0,    0,  125,  125,    0,    0,    0,    0,    0,    0,    0,    0,    0,  559,    0,
          0,  125,    0,    0,    0,  125,    0,    0,  125,  559,    0,    0,    0,    0,    0,    0,    0,    0,  500,    0,
          0,    0,    0,  500,    0,    0,    0,  500,    0,  500,  500,  500,  125,  500,  500,  500,    0,    0,  500,    0,
        500,    0,    0,    0,    0,   43,    0,   43,    0,    0,    0,    0,    0,    0,    0,    0,    0,   43,    0,   43,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  502,    0,
          0,    0,    0,  502,    0,    0,    0,    0,    0,  502,  502,  502,    0,  125,  502,  502,    0,    0,  502,    0,
        502,    0,    0,    0,    0,    0,    0,    0,    0,   57,    0,    0,    0,    0,   57,    0,    0,    0,   57,    0,
         57,   57,   57,  125,   57,   57,   57,    0,    0,   57,    0,   57,    0,    0,    0,    0,    0,  475,    0,    0,
          0,    0,    0,    0,    0,    0,    5,    5,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,  125,  125,    0,    0,    0,    0,    0,    0,    0,    0,    0,  201,    0,
          0,  125,    0,    0,    0,  125,    0,    0,  125,  201,    0,    0,    0,    0,    0,   31,    0,   31,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,   31,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,   22,    0,    0,    0,    0,    0,    0,    0,    0,   22,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  502,    0,    0,    0,    0,  502,    0,
          0,    0,  502,    0,  502,  502,  502,    0,  125,  502,  502,    0,    0,  502,    0,  502,    0,    0,    0,    0,
         41,    0,   41,    0,    0,    0,    0,    0,    0,    0,    0,    0,   41,    0,   41,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,   62,    0,    0,    0,    0,   62,    0,
          0,    0,   62,    0,   62,   62,   62,    0,  125,   62,   62,    0,    0,   62,    0,   62,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,  257,  257,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  587,  587,  587,    0,    0,  587,  587,  587,  587,
          0,  587,  587,    0,    0,  587,  587,  587,  587,  587,  587,  587,  587,  587,  587,  587,  587,  587,  587,  587,
        587,  587,  587,  587,    0,  300,    0,    0,    0,    0,    0,  300,  300,  300,    0,  300,  300,    0,    0,  300,
        300,  300,  300,  300,  300,  300,  300,  300,  300,  300,  300,  300,  300,  300,  300,  300,  300,  300,  300,    0,
        301,    0,    0,    0,    0,    0,  301,  301,  301,    0,  301,  301,    0,    0,  301,  301,  301,  301,  301,  301,
        301,  301,  301,  301,  301,  301,  301,  301,  301,  301,  301,  301,  301,  301,    0,  302,    0,    0,    0,    0,
          0,  302,  302,  302,    0,  302,  302,    0,    0,  302,  302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
        302,  302,  302,  302,  302,  302,  302,  302,  302,    0,  699,  699,  699,    0,    0,  699,  699,    0,  699,    0,
        699,  699,    0,    0,  699,  699,  699,  699,  699,  699,  699,  699,  699,  699,  699,  699,  699,  699,  699,  699,
        699,  699,  699,  699,    0,    0,    0,    0,    0,    0,    0,    0,    0,  243,    0,  243,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,   29,
          0,   29,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,   29,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,   39,    0,    0,    0,    0,   39,    0,    0,
          0,    0,    0,   39,  125,   39,    0,    0,  125,   39,    0,    0,  125,    0,   39,    0,    0,    0,    0,    0,
          6,  475,  475,    0,    0,    0,    0,    0,    0,    6,    6,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  577,  577,  577,    0,    0,  577,  577,  577,    0,    0,
        256,    0,    0,    0,  577,  577,  577,  577,  577,  577,  577,  577,  577,  577,  577,  577,  577,  577,  577,  577,
        577,  577,  577,  577,    0,    0,    0,    0,    0,    0,    0,    0,   20,    0,    0,    0,    0,   20,    0,    0,
          0,   20,    0,   20,  125,   20,    0,    0,  125,   20,    0,    0,  125,    0,   20,    0,    0,    0,    0,    0,
          0,    0,    0,   47,    0,    0,    0,    0,   47,    0,    0,    0,   47,    0,   47,    0,   47,    0,    0,   47,
         47,    0,    0,   47,    0,   47,    0,    0,    0,    0,    0,    0,    0,    0,   67,    0,    0,    0,    0,   67,
          0,    0,    0,   67,    0,   67,   67,   67,    0,    0,    0,   67,    0,    0,   67,    0,   67,    0,    0,    0,
          0,    0,    0,    0,    0,  127,    0,    0,    0,    0,  127,    0,    0,    0,  127,    0,  127,  127,  127,    0,
          0,  127,  127,    0,    0,    0,    0,  127,    0,    0,    0,    0,  260,  260,  260,    0,    0,  260,  260,  260,
        260,    0,  260,  260,    0,    0,  260,  260,  260,  260,  260,  260,  260,  260,  260,  260,  260,    0,  260,  260,
        260,  260,  260,  260,  260,  260,    0,  697,  697,  697,    0,    0,  697,  697,  697,  697,    0,  697,  697,    0,
          0,  697,  697,  697,  697,  697,  697,  697,  697,  697,  697,  697,  697,  697,  697,  697,  697,  697,  697,    0,
        697,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  553,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        278,    0,    0,    0,    0,  280,    0,    0
      };

   // R_matrix row. 
      static short Rr [694] = 
      {
          0,  -17,  125,  -48,  -81, -114,  -17,  125,  -17,  475, -145,  -17,  125, -173, -201, -233, -260,  -17,  -17,  476,
        -17,  125,  -17, -291, -322, -291, -291,  125,  -17,  488, -353, -386,  -17,  125, -416, -448, -479,  -17, -511,  125,
        -17,  125, -538, -569,  -17,  475,  -17,  125, -600, -634,  525,  -17,  525,  525,  525,  -17,  525,  525,  525,  525,
        525,  525,  -17,  525,  -17,  525,  525,  -17,  -17,  525,  525,  525,  525,  525,  -17,  -17,  525,  525,  525,  525,
        525,  525,  525,  525,  525,  525,  525,  525,  525,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  125,  125, -669, -700,
        125,  125,  125,  -17,  125,  125,  -17,  125,  -17, -730, -763,  -17,  125,  525,  525,  -17,  125, -790, -821,  -17,
        -17, -852,  -17,  -17,  125,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
        -17,  -17,   93,  -17,  -17,   97,  525,  -17,  -17,  -17,  -17,  -17,  541,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
        -17,  -17,  -17,  -17,  -17,  -17,  -17,  525,  -17,  -17,  -17,  -17,  -17,  525,  525,  -17,  125,  -17,  125, -880,
        -17, -291,  125,  -17,  125,  -17,  125,  125,  -17, -913,  -17,  125, -938,  -17,  -17, -965,  -17, -998,  -17,  -17,
        525,  525,  -17,  125,  507,-1025,  490,  521,  475,  -17,  255,-1056,-1090,-1124,-1159,-1194,-1229,  121,  212,  -17,
         94,   81,   82,  -17,  397,  396,  537,  591,   84,   85,   86,   87,   88,   89,  539,  -17,  -17,  525,   92,   95,
         96,  -17,   99,  100,  101,  102,  103,  -17,  537,-1264,  245,  545,  107,  108,  109,  110,  111,  112,  113,  114,
        115,  116,  117,  118,  119,  -17,  -17,  -17,  376,  589,  591,  591,  591,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
        348,  376,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  125,  -17,  -17,  -17,  -17,-1297,  -17,  -17,  -17,  -17,
        507,  -17,   56,   55,  -17,  -17,  525,  525,-1324,  -17,  -17,  -17,-1355,  -17,  -17,-1389,  -17,  -17,  402,  -17,
        398,  -17,  -17,  538,  591,  525,  -17,  525,  -17,   98,  543,  -17,  547,  -17,  -17,  120,  -17,  175,  -17,  -17,
        -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
        -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,   51,   50,  -17,  -17,  -17,  -17,  181,  -17,  125,  -17,  -17,  -17,
        -17,  -17,  -17,-1424,  -17,   61,   60,  -17,  -17,  -17, -291, -291, -291,  125,-1455,-1486,-1517,   18,   38,  -17,
      -1551,-1586,  -17,   83,  -17,  -17,  -17,  168,  -17,  -17,  -17,  -17,  -17,  162,  -17,  575,  -17,  -17,  -17,  -17,
        -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,
        -17,  -17,  -17,  -17,  395,  -17,  355,  354,  362,  363,  364,  365,  366,  367,  356,  369,  351,  350,  352,  353,
        368,  349,  357,  358,  359,  360,  361,  -17,  -17,  -17,  -17,  565,  565,  565,  565,  525,  525,  525,  242,  -17,
        -17,  -17,  234,  521,   66,   65,  525,  525,  -17,  125,  125,  125,  -17,  125,  -17,  125,  -17,  -17,  -17,   90,
        525,  169,  104,  106,  -17,  105,  -17,  -17,  -17,  -17,  591,  591,  591,  591,  591,  591,  -17,  -17,  178,  195,
        172,  -17,  224,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  490,  -17,  -17,  -17,  -17,  -17,  -17,  125,  525,  525,
        -17,  267,  -17,  -17,  -17,  164,  -17,  249,  -17,  223,  221,  222,  220,  184,  191,  198,  -17,   45,  -17,   70,
        -17,-1621,  -17,  -17,  -17,  -17,  -17,  -17,  270,  272,   91,  -17,  188,  -17,  525,  525,  525,   33,  -17,  -17,
        -17,   71,  133,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  -17,  525,  -17,  545,  -17,  -17,  -17,  525,  -17,
        -17,  157,  -17,  -17,  273,  207,  208,  209,  -17,  -17,  -17,  547,  -17,  -17,  -17,  -17,  525,  -17,  -17,  -17,
        -17,  -17,  150,  149,  151,  525,  -17,  545,  -17,  525,  -17,  -17,  545,  -17,  525,  -17,  -17,  143,  -17,  158,
        159,  -17,  -17,  -17,-1633,  -17,  -17,  547,  -17,  -17,  525,  -17,  547,  -17,  -17,  525,  545,  146,  160,  -17,
        -17,  137,  152,  525,  -17,  144,  -17,  153,  525,  -17,  145,  -17,  547,  -17,  -17,  545,  147,  -17,  545,  148,
        525,  138,  547,  139,  547,  -17,  525,  525,  140,  -17,  -17,  141,  142,  -17
      };

   // R_matrix column. 
      static uchar Rc [206] = 
      {
          0,    1,    2,    3,    1,    4,    5,    5,    6,    7,    8,    0,    9,    0,   10,   11,   12,    1,    1,    1,
         13,   13,    1,    0,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    0,    1,
          1,    1,    1,    1,   14,   15,   16,    1,    1,   17,   18,   19,    1,   20,   21,   22,   23,   24,   25,   25,
         25,   25,   25,   25,   25,   25,   25,   25,    1,    1,    1,   25,   25,   25,   25,   25,   25,    1,   25,   25,
         25,   25,   25,   25,   25,   26,   27,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
         25,   25,   28,    1,    1,    1,    1,    1,    1,    1,    1,    1,   25,   25,    1,   29,    1,   25,    1,    1,
          1,   30,   25,   31,    1,    1,   32,    1,   12,   33,    1,    1,    1,   34,    1,    1,    1,    1,    1,    1,
          1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
          1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
          1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
          1,    1,    1,    1,    1,    1
      };

/*--- Nondeterministic Parsing Arrays. ---------------------------------------*/

   // Nondeterministic State?. 
      static uchar nd_state [694] = 
      {
          0,    0,    0,    0,    1,    1,    0,    0,    0,    0,    0,    0,    0,    1,    1,    1,    1,    0,    0,    0,
          0,    0,    0,    1,    1,    1,    1,    0,    0,    0,    1,    1,    0,    0,    1,    1,    1,    0,    1,    0,
          0,    0,    1,    1,    0,    0,    0,    0,    1,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    1,    1,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    1,    1,    0,    0,    0,    0,    0,    0,    1,    1,    0,
          0,    1,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    1,
          0,    1,    0,    0,    0,    0,    0,    0,    0,    1,    0,    0,    1,    0,    0,    1,    0,    1,    0,    0,
          0,    0,    0,    0,    0,    1,    0,    0,    0,    0,    0,    1,    1,    1,    1,    1,    1,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    1,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    1,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    1,    0,    0,    0,    1,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    1,    0,    0,    0,    0,    0,    0,    1,    1,    1,    0,    1,    1,    1,    0,    0,    0,
          1,    1,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    1,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    1,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    1,    0,
          0,    1,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0
      };

   // Nondeterministic Start. 
      static ushort nd_start [695] = 
      {
          0,    0,    0,    0,    0,    2,    4,    4,    4,    4,    4,    4,    4,    4,   10,   14,   18,   26,   26,   26,
         26,   26,   26,   26,   32,   38,   44,   50,   50,   50,   50,   56,   58,   58,   58,   62,   70,   74,   74,   78,
         78,   78,   78,   84,   92,   92,   92,   92,   92,   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
         96,   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,
         96,   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,   96,  102,
        106,  106,  106,  106,  106,  106,  106,  106,  106,  106,  112,  114,  114,  114,  114,  114,  114,  114,  120,  126,
        126,  126,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,
        128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,
        128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,  128,
        132,  132,  138,  138,  138,  138,  138,  138,  138,  138,  140,  140,  140,  144,  144,  144,  150,  150,  152,  152,
        152,  152,  152,  152,  152,  152,  158,  158,  158,  158,  158,  158,  160,  162,  168,  174,  180,  182,  182,  182,
        182,  182,  182,  182,  182,  182,  182,  182,  182,  182,  182,  182,  182,  182,  182,  182,  182,  182,  182,  182,
        182,  182,  182,  182,  182,  182,  182,  182,  182,  182,  184,  184,  184,  184,  184,  184,  184,  184,  184,  184,
        184,  184,  184,  184,  184,  184,  184,  184,  184,  184,  184,  184,  184,  184,  184,  184,  184,  184,  184,  184,
        184,  184,  184,  184,  184,  184,  184,  184,  184,  184,  184,  184,  184,  184,  184,  184,  186,  186,  186,  186,
        186,  186,  186,  186,  186,  186,  186,  186,  186,  192,  192,  192,  192,  194,  194,  194,  194,  194,  194,  194,
        194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,
        194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,
        194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,  194,
        194,  194,  194,  194,  200,  200,  200,  200,  200,  200,  200,  206,  212,  218,  218,  226,  234,  242,  242,  242,
        242,  244,  246,  246,  246,  246,  246,  246,  246,  246,  246,  246,  246,  246,  246,  246,  246,  248,  248,  248,
        248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,
        248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,
        248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,
        248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,  248,
        248,  248,  248,  248,  248,  248,  248,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,
        250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,
        250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  250,  415,
        415,  415,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,
        417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,
        417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,
        417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,
        417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,
        417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,
        417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417,  417
      };

   // Nondeterministic Terminal Symbol. 
      static uchar nd_term [417] = 
      {
         14,   14,   14,   14,    2,    2,   14,   14,   49,   49,    2,    2,   14,   14,    2,    2,   14,   14,    2,    2,
          9,    9,   14,   14,   54,   54,    2,    2,    9,    9,   14,   14,    2,    2,    9,    9,   14,   14,    2,    2,
          9,    9,   14,   14,    2,    2,    9,    9,   14,   14,    2,    2,   14,   14,   49,   49,  121,  121,    2,    2,
         14,   14,    2,    2,    9,    9,   14,   14,   54,   54,    2,    2,   14,   14,    2,    2,   14,   14,    2,    2,
          9,    9,   14,   14,    2,    2,    9,    9,   14,   14,   54,   54,    2,    2,   14,   14,    2,    2,    9,    9,
         14,   14,    2,    2,   14,   14,    2,    2,    9,    9,   14,   14,   14,   14,    2,    2,    9,    9,   14,   14,
          2,    2,    9,    9,   14,   14,   11,   11,    2,    2,   14,   14,    2,    2,    9,    9,   14,   14,   14,   14,
          2,    2,   49,   49,    2,    2,    9,    9,   14,   14,   14,   14,    2,    2,    9,    9,   14,   14,   86,   86,
        133,  133,    2,    2,    3,    3,    8,    8,    2,    2,    3,    3,    8,    8,    2,    2,    3,    3,    8,    8,
         10,   10,   16,   16,   14,   14,    2,    2,    9,    9,   14,   14,   11,   11,    2,    2,    9,    9,   14,   14,
          2,    2,    9,    9,   14,   14,    2,    2,    9,    9,   14,   14,    2,    2,    9,    9,   14,   14,    2,    2,
          9,    9,   14,   14,   53,   53,    2,    2,    9,    9,   14,   14,   57,   57,    2,    2,    9,    9,   14,   14,
        102,  102,   85,   85,  129,  129,   16,   16,   86,   86,    2,    2,    2,    9,    9,    9,   10,   10,   10,   14,
         14,   14,   20,   20,   20,   21,   21,   21,   49,   49,   49,   51,   51,   51,   53,   53,   53,   54,   54,   54,
         57,   57,   57,   58,   58,   58,   59,   59,   59,   60,   60,   60,   61,   61,   61,   62,   62,   62,   63,   63,
         63,   64,   64,   64,   65,   65,   65,   66,   66,   66,   67,   67,   67,   71,   71,   71,   72,   72,   72,   73,
         73,   73,   74,   74,   74,   75,   75,   75,   76,   76,   76,   78,   78,   78,   79,   79,   79,   80,   80,   80,
         81,   81,   81,   82,   82,   82,   83,   83,   83,   84,   84,   84,   87,   87,   87,   88,   88,   88,   89,   89,
         89,   90,   90,   90,   91,   91,   91,   92,   92,   92,   93,   93,   93,   94,   94,   94,   95,   95,   95,   96,
         96,   96,   97,   97,   97,   98,   98,   98,   99,   99,   99,  100,  100,  100,  101,  101,  101,  102,  102,  102,
        112,  112,  112,  113,  113,  113,  117,  117,  117,  121,  121,  121,  122,  122,  122,   16,   16
      };

   // Nondeterministic Action.
      static short nd_action [417] = 
      {
        908, -494,  908, -494,  819, -486,  908, -486, -486, -125,  819, -496,  908, -496,  819, -519,  908, -519,  819, -498,
       -498, -125,  908, -498, -498, -125,  819, -557, -557, -125,  908, -557,  819, -557, -557, -125,  908, -557,  819, -557,
       -557, -125,  908, -557,  819, -557, -557, -125,  908, -557,  819,  -21,  908,  -21,  -21, -125, 1257, -210,  819, -230,
        908, -230,  819, -498, -498, -125,  908, -498, -498, -125,  819, -226,  908, -226,  819,  -40,  908,  -40,  819, -500,
       -500, -125,  908, -500,  819,  -52,  -52, -125,  908,  -52,  -52, -125,  819,  -27,  908,  -27,  819, -200, -200, -125,
        908, -200,  819, -559,  908, -559,  819, -500, -500, -125,  908, -500,  908,  -43,  819, -502, -502, -125,  908, -502,
        819,  -57,  -57, -125,  908,  -57,  700,   -5,  819, -201,  908, -201,  819, -557, -557, -125,  908, -557,  908,  -31,
        819,  -22,  -22, -125,  819, -502, -502, -125,  908, -502,  908,  -41,  819,  -62,  -62, -125,  908,  -62, 1016, -257,
        316, -587,  996, -300,  997, -300,  998, -300,  999, -301, 1000, -301, 1001, -301, 1002, -302, 1003, -302, 1004, -302,
        982, -699,  331, -243,  908,  -29,  819,  -39,  -39, -125,  908,  -39,  700,   -6,  819,  -20,  -20, -125,  908,  -20,
        819, -557, -557, -125,  908, -557,  819, -557, -557, -125,  908, -557,  819, -557, -557, -125,  908, -557,  819,  -47,
        -47, -125,  908,  -47,  -47, -125,  819,  -67,  -67, -125,  908,  -67,  -67, -125,  819, -127, -127, -125,  908, -127,
       -127, -125,  496, -260,  497, -697,  509, -251, 1016, -163,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,
        -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,
        -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71,
       -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,
        -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,
        -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71,
       -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,
        -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,
        -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  -51,  -71, -133,  580, -553
      };

/*--- Production Variables. --------------------------------------------------*/

   // Production length - 1 
      static char PL[758] = 
      {
          1,    0,    1,    1,    2,    2,    1,    0,    0,    0,    0,    0,    0,    1,    0,    4,    1,    0,    6,    0,
          5,    0,    0,    3,    2,    4,    0,    0,    4,    1,    2,    0,    1,    6,    0,    3,    1,    0,    6,    4,
          0,    1,    2,    0,    1,    6,    0,    0,    1,    0,    3,    3,    0,    1,    0,    3,    3,    0,    1,    0,
          3,    3,    0,    1,    0,    3,    3,    0,    1,    0,    3,    3,    0,    1,    0,    0,    0,    0,    0,    0,
          1,    3,    3,    5,    3,    3,    3,    3,    3,    3,    6,    8,    3,    2,    3,    3,    3,    2,    4,    3,
          3,    3,    3,    3,    6,    6,    6,    3,    3,    3,    3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
          4,    3,    0,    0,    0,   -1,    0,    0,    1,    0,    2,    2,    2,    3,    0,    0,    0,    9,   11,   11,
         12,   14,   14,    7,    9,    9,    8,   10,   10,    7,    7,    7,    9,    9,    1,    1,    0,    3,    5,    5,
          6,    0,    0,    1,    0,    2,    1,    0,    5,    6,    1,    0,    4,    4,    2,    4,    1,    0,    6,    1,
          0,    2,    1,    0,    5,    2,    1,    0,    8,    1,    0,    5,    2,    1,    0,    6,    1,    0,    5,    1,
          0,    0,    0,    0,    1,    0,    1,    8,    8,    8,    0,    0,    3,    0,    0,    0,    0,    0,    0,    0,
          5,    5,    5,    5,    4,    0,    0,    1,    0,    1,    0,    0,    6,    6,    0,    0,    0,    1,    2,    3,
          2,    3,    3,    0,    1,    0,    0,    0,    0,    2,    4,    0,    0,    0,    2,    0,    1,    0,    0,    0,
          0,    1,    0,    0,    0,    4,    6,    0,    4,    2,    0,    1,   -1,    0,    5,    0,    0,    0,    0,    2,
          0,    0,    0,    0,    1,    0,    0,    0,    0,    1,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    1,    1,    1,    1,    1,    1,    1,    1,    1,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    3,    3,    3,    3,    3,    3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
          3,    3,    3,    3,    3,    3,    0,    0,    0,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
          2,    2,    2,    2,    2,    2,    2,    2,    2,    2,    0,    0,    1,    1,    1,    1,    0,    0,    1,    0,
          0,    1,    0,    0,    0,    2,    1,    1,    1,    2,    2,    2,    2,    2,    2,    0,    0,    0,    1,    2,
          1,    2,    1,    0,    0,    0,    1,    3,    3,    2,    2,    2,    2,    1,    1,    3,    3,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,   -1,    0,    1,    0,    1,
          1,    0,    1,    1,    0,    1,   -1,    0,   -1,    1,   -1,    0,    0,    1,   -1,    0,   -1,    0,   -1,    0,
         -1,    0,   -1,    0,    0,    0,    0,   -1,    1,    0,    0,    0,    1,    0,    1,    0,    1,    0,    1,   -1,
          0,   -1,    0,    0,    1,   -1,    1,    0,    1,    0,    1,    0,    1,    0,    1,    0,    2,   -1,    0,   -1,
          0,   -1,    0,   -1,    0,   -1,    2,   -1,    3,   -1,    1,    0,    1,   -1,    1,    0,    2,   -1,    0,   -1,
          0,    0,    1,    0,    1,   -1,    0,    0,    1,    0,    2,    0,    2,    0,    1,    0,    2,    0,    0,    0,
          2,    0,    1,    0,    2,    0,    2,   -1,    1,   -1,    2,   -1,    0,    0,    2,    2,    0,    1,    1,    0,
          1,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0
      };

   // Reverse the order of nodes (for a production/rule).
      static uchar reverse[758] = 
      {
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0
      };

/*--- Token Action Variables -------------------------------------------------*/

	// Token Action number. 
      static char tact_numb[206] = 
      {
         -1,    0,    1,    1,    1,    2,    3,    3,    3,    0,    0,    4,    5,    6,   -1,    7,    7,    8,    8,    8,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1
      };

   // Token Action Function Pointers.	
      static int (*tact_func[9]) (int&) = 
      {
			token_action::lookup,
         token_action::CNXlookup,
         token_action::checkeof,
         token_action::firstid,
         token_action::lucomment,
         token_action::datablock,
         token_action::codeblock,
         token_action::CNXoff,
         token_action::CNXcheck
      };

	// First argument index for token actions.
      int parser::tact_arg[206] = 
      {
         -1,   -1,   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1
      };

/*--- Parse Action Variables ------------------------------------------------*/

   // Parse Action Number
      static char pact_numb[758] = 
      {
         -1,   -1,   -1,    0,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    1,   -1,   -1,    2,   -1,
         -1,   -1,   -1,    3,    3,    4,   -1,   -1,    5,   -1,   -1,   -1,   -1,    6,   -1,    7,   -1,   -1,    8,   -1,
         -1,   -1,   -1,   -1,   -1,    9,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   10,   11,   11,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   12,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   13,   -1,   -1,   14,   -1,   15,   15,   -1,
         -1,   16,   -1,   -1,   17,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   18,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1
      };

   // Parse Action Function Pointers	
      static int (*pact_func[19]) (int) = 
      {
			parse_action::Lookup,
         parse_action::AtlasProgram,
         parse_action::BEGIN_ATLAS_PROGRAM,
         parse_action::Segment,
         parse_action::SEGMENT,
         parse_action::END_SEGMENT,
         parse_action::TERMINATE_ATLAS_PROGRAM,
         parse_action::AtlasModule,
         parse_action::BEGIN_ATLAS_MODULE,
         parse_action::TERMINATE_ATLAS_MODULE,
         parse_action::UnknownVerb,
         parse_action::StatementNumber,
         parse_action::Message,
         parse_action::INCLUDE_ATLAS_MODULE,
         parse_action::Filename,
         parse_action::IncludeFile,
         parse_action::LEAVE_ATLAS,
         parse_action::UsingDevice,
         parse_action::Keyword
      };

	// Parser Action Argument Index and first argument for make_node.
      int parser::pact_arg[758] = 
      {
         -1,   -1,   -1,   -1,   -1,   10,   -1,   17,   18,   22,   26,   30,   -1,   -1,   -1,   -1,   -1,   -1,   34,   38,
         -1,   -1,   -1,   -1,   -1,   48,   49,   -1,   50,   -1,   -1,   -1,   -1,   51,   -1,   -1,   -1,   -1,   55,   -1,
         -1,   -1,   -1,   -1,   -1,   65,   69,   -1,   -1,   -1,   76,   80,   -1,   -1,   -1,   87,   91,   -1,   -1,   -1,
         98,  102,   -1,   -1,   -1,  109,  113,   -1,   -1,   -1,  120,  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,  140,  144,  148,  152,  156,  160,  164,  168,  172,  176,  180,  184,  188,  192,  196,  200,  204,  208,  212,
        216,  220,  224,  228,  232,  236,  240,  244,  248,  252,  256,  260,  264,  268,  272,  276,  280,  284,  288,  292,
        296,  300,   -1,   -1,  304,  308,  309,   -1,   -1,   -1,   -1,   -1,   -1,  322,   -1,   -1,   -1,  326,  330,  334,
        338,  342,  346,  350,  354,  358,  362,  366,  370,  374,  378,  382,  386,  390,   -1,   -1,   -1,  397,  401,  405,
        409,  413,   -1,   -1,   -1,   -1,   -1,   -1,  426,  430,   -1,   -1,  434,   -1,   -1,  438,   -1,   -1,  442,   -1,
         -1,  446,   -1,   -1,  450,   -1,   -1,   -1,  454,   -1,   -1,  458,   -1,   -1,   -1,  462,   -1,   -1,  466,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,  476,  480,  484,  488,  489,  490,  491,  492,  493,   -1,  497,   -1,  501,
        502,  506,  510,  514,  518,  522,   -1,   -1,   -1,   -1,   -1,   -1,  538,  542,   -1,  546,   -1,   -1,   -1,   -1,
         -1,  562,  566,   -1,   -1,   -1,  576,  580,  584,   -1,   -1,   -1,  597,  601,  605,   -1,   -1,   -1,   -1,  618,
        622,  626,  630,  634,  638,  642,  646,  647,   -1,  651,   -1,  652,  656,  657,  658,  659,  660,  661,  662,  663,
        664,  665,  669,  673,  677,  681,  685,  689,  693,  697,  701,  705,  709,  713,  717,  721,  725,  729,  733,  737,
        741,  745,  749,  753,  757,  761,  765,  769,  773,  777,  781,  785,  789,  793,  797,  801,  805,  809,  813,  817,
        821,  825,  829,  833,   -1,  840,  844,  848,  852,  856,  860,  864,  868,  872,  876,  880,  884,  888,  892,  896,
        900,  904,  908,  912,  916,  920,   -1,   -1,   -1,  927,  931,  935,  939,  943,  947,  951,  955,  959,  963,  967,
        971,  975,  979,  983,  987,  991,  995,  999, 1003, 1007,   -1,   -1, 1011, 1015, 1019, 1023,   -1, 1027, 1031, 1035,
       1039, 1043,   -1,   -1,   -1,   -1, 1047, 1051, 1055, 1059, 1063, 1067, 1071, 1075, 1079,   -1,   -1,   -1,   -1,   -1,
       1092, 1096,   -1, 1100, 1104, 1108,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
       1145, 1149, 1153, 1157, 1161, 1165, 1169, 1173, 1177, 1181,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1
      };

/*--- Make-Node Variables ----------------------------------------------------*/

   // Make-Node Numbers (for a production).
      static short node_numb[758] = 
      {
          0,   -1,   -1,    1,    1,    2,    3,    4,    5,    5,    5,    5,   -1,   -1,   -1,    6,   -1,   -1,    7,    8,
          9,   10,   -1,   11,   11,   12,   13,   -1,   -1,   -1,   -1,   -1,   -1,   14,   -1,   15,   -1,   -1,   16,   17,
         18,   -1,   -1,   -1,   -1,   19,   20,   21,   -1,   -1,   22,   23,   24,   -1,   -1,   25,   23,   26,   -1,   -1,
         27,   23,   28,   -1,   -1,   29,   23,   30,   -1,   -1,   31,   23,   -1,   -1,   32,   33,   34,   35,   -1,   -1,
         -1,   36,   37,   38,   39,   40,   41,   42,   43,   44,   45,   46,   47,   48,   25,   49,   50,   51,   52,   53,
         54,   55,   56,   57,   58,   59,   59,   60,   61,   62,   63,   64,   65,   66,   67,   68,   69,   70,   71,   72,
         73,   23,   -1,   -1,   74,   75,   75,   76,   -1,   -1,   77,   78,   79,   23,   -1,   -1,   -1,   80,   80,   80,
         80,   80,   80,   81,   81,   81,   82,   82,   82,   83,   84,   85,   85,   85,   86,   -1,   -1,   87,   87,   87,
         87,   88,   89,   89,   90,   -1,   -1,   -1,   91,   92,   -1,   -1,   93,   -1,   -1,   94,   -1,   -1,   95,   -1,
         -1,   96,   -1,   -1,   97,   -1,   -1,   -1,   98,   -1,   -1,   99,   -1,   -1,   -1,  100,   -1,   -1,  101,   -1,
        102,  103,   -1,   -1,   -1,   -1,   -1,  104,  105,  106,  107,  107,  108,  108,  109,  110,  111,  112,  113,  114,
        115,  116,  117,  118,  119,  120,  121,   -1,   -1,  122,  122,  122,  123,  124,   -1,  125,   -1,  126,  126,  127,
        127,  128,  129,   -1,  130,    5,  131,  132,  132,  133,  133,  134,  131,  131,  135,  136,  136,    5,   -1,  131,
        137,  137,  137,  137,  137,  138,  133,  139,  140,  141,   -1,  142,  137,  137,  137,  137,  137,  137,  138,  133,
        139,  131,  131,  131,  132,  143,  143,  143,  144,  144,  131,  145,  145,  145,  145,  145,  145,  145,  145,  145,
        145,  145,  145,  143,  143,  143,  143,  143,  143,  143,  143,  143,  145,  145,  145,  145,  145,  145,  145,  145,
        145,  145,  145,  145,  146,  147,  147,  147,  147,  147,  147,  147,  148,  148,  148,  148,  148,  148,  149,  149,
        149,  149,  149,  149,  150,  150,   -1,   -1,  146,  147,  147,  147,  147,  147,  147,  147,  148,  148,  148,  148,
        148,  148,  149,  149,  149,  149,  149,  149,  150,  150,   -1,   -1,  151,  151,  151,  152,   -1,  144,  144,  131,
        131,  153,   -1,   -1,   -1,   -1,  143,  143,  143,  143,  143,  143,  143,  143,  143,  136,   -1,   -1,  154,  154,
        132,  132,   -1,  155,  156,  157,  158,  159,  159,  159,  159,  159,  159,  159,  159,  160,  161,   -1,   -1,   -1,
        162,  162,  162,  162,  162,  162,  162,  162,  162,  162,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1
      };

   // Node Names.
      char* parser::node_name[163] = 
      {
      "AtlasFile",
      "Lookup",
      "SUBFILE",
      "Mapping",
      "LUCommentLines",
      "Argument",
      "AtlasProgram",
      "BEGIN_ATLAS_PROGRAM",
      "ProgramName",
      "ProgramPreamble",
      "MainStatements",
      "Segment",
      "SEGMENT",
      "SegmentName",
      "TERMINATE_ATLAS_PROGRAM",
      "AtlasModule",
      "BEGIN_ATLAS_MODULE",
      "ModulePreamble",
      "ModuleStatements",
      "TERMINATE_ATLAS_MODULE",
      "ModuleName",
      "DeclareStatements",
      "DECLARE",
      "UNKNOWN",
      "ExtendStatements",
      "EXTEND",
      "RequireStatements",
      "REQUIRE",
      "EstablishStatements",
      "ESTABLISH",
      "IdentifyStatements",
      "IDENTIFY",
      "DoGroup",
      "IfGroup",
      "WhileGroup",
      "ForGroup",
      "APPLY",
      "ARM",
      "CALCULATE",
      "CHANGE",
      "CLOSE",
      "CONNECT",
      "DELAY",
      "DISABLE",
      "DISCONNECT",
      "DO_EXCHANGE",
      "DO_DIGITAL_TEST",
      "ENABLE",
      "EXECUTE",
      "FETCH",
      "FILL",
      "FINISH",
      "GO_TO",
      "INITIATE",
      "INPUT",
      "MEASURE",
      "MONITOR",
      "OPEN",
      "OUTPUT",
      "PERFORM",
      "PREPARE",
      "PROVE",
      "READ",
      "REMOVE",
      "RESET",
      "SENSE",
      "SETUP",
      "SPECIFY",
      "START",
      "STIMULATE",
      "STOP",
      "UPDATE",
      "VERIFY",
      "WAIT_FOR",
      "UnknownVerb",
      "StatementNumber",
      "DefineStatements",
      "ProcedureGroup",
      "ComplexSignalGroup",
      "DigitalConfigurationGroup",
      "DEFINE_PROCEDURE",
      "DEFINE_SIGNAL",
      "DEFINE_COMPLEX_SIGNAL",
      "DEFINE_EXCHANGE",
      "DEFINE_MESSAGE",
      "DEFINE_DIGITAL_CONFIGURATION",
      "Message",
      "END_DEFINE",
      "Name",
      "ProcedureArguments",
      "ResultArguments",
      "DO_SIMULTANEOUS",
      "DO_TIMED_DIGITAL",
      "END_DO",
      "COMPARE",
      "IF",
      "ELSE",
      "END_IF",
      "FOR",
      "END_FOR",
      "WHILE",
      "END_WHILE",
      "LocalPreamble",
      "Statements",
      "DEFINE_DIGITAL_SOURCE",
      "DEFINE_DIGITAL_SENSOR",
      "DEFINE_DIGITAL_TIMING",
      "BranchTarget",
      "EntryPoint",
      "CommentBlock",
      "CommentLines",
      "DataBlock",
      "DataLines",
      "CodeBlock",
      "CodeLines",
      "LEAVE_WHILE",
      "LEAVE_FOR",
      "LEAVE_IF",
      "LEAVE_DO",
      "LEAVE",
      "Group",
      "IncludeStatements",
      "IncludeGroup",
      "INCLUDE_ATLAS_MODULE",
      "INCLUDE_NON_ATLAS_MODULE",
      "Filename",
      "IncludeFile",
      "IPLGroup",
      "LEAVE_ATLAS",
      "RESUME_ATLAS",
      "UsingDevice",
      "Keyword",
      "Variable",
      "Range",
      "RangeList",
      "Assignment",
      "Arguments",
      "Type",
      "Size",
      "Integer",
      "Record",
      "MemberTypedef",
      "Member",
      "Constant",
      "String",
      "Character",
      "Expression",
      "ArithOp",
      "BooleanOp",
      "CompareOp",
      "RelOp",
      "UnaryOp",
      "Function",
      "Connection",
      "VariableWS",
      "Subscript",
      "Qualifier",
      "Dim",
      "Nominal",
      "Boolean",
      "UpLowLimit",
      "LowUpLimit",
      "Enum"
      };

/*--- Node-Action Variables --------------------------------------------------*/

   // Node-Action Numbers. 
      static char nact_numb[758] = 
      {
          0,   -1,   -1,    0,    0,    0,    0,    1,    0,    0,    0,    0,   -1,   -1,   -1,    2,   -1,   -1,    0,    0,
          0,    0,   -1,    3,    3,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,   -1,    4,   -1,   -1,    0,    0,
          0,   -1,   -1,   -1,   -1,    0,    0,    0,   -1,   -1,    0,    0,    0,   -1,   -1,    0,    0,    0,   -1,   -1,
          0,    0,    0,   -1,   -1,    0,    0,    0,   -1,   -1,    0,    0,   -1,   -1,    0,    0,    0,    0,   -1,   -1,
         -1,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,   -1,   -1,    0,   -1,   -1,    0,   -1,   -1,    0,    0,    0,    0,   -1,   -1,   -1,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,   -1,   -1,    0,    0,    0,
          0,    0,    0,    0,    0,   -1,   -1,   -1,    0,    0,   -1,   -1,    0,   -1,   -1,    0,   -1,   -1,    0,   -1,
         -1,    0,   -1,   -1,    0,   -1,   -1,   -1,    0,   -1,   -1,    0,   -1,   -1,   -1,    0,   -1,   -1,    0,   -1,
          0,    0,   -1,   -1,   -1,   -1,   -1,    0,    0,    0,    5,    5,    6,    6,    7,    8,    0,    9,    0,   10,
          0,    0,    0,    0,    0,    0,    0,   -1,   -1,    0,    0,    0,    0,    0,   -1,    0,   -1,    0,    0,    0,
          0,    0,    0,   -1,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,   -1,    0,
          0,    0,    0,    0,    0,    0,   11,   -1,    0,   -1,   -1,    0,   12,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,   -1,   -1,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,   -1,   -1,    0,    0,    0,    0,   -1,    0,    0,    0,
          0,    0,   -1,   -1,   -1,   -1,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,   -1,   -1,    0,    0,
          0,    0,   -1,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,   -1,   -1,   -1,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1
      };

	// Node-Action Function Pointers.
      static int (*nact_func[13]) (int n) = 
      {
			node_action::xml,
         node_action::LUCommentLines,
         node_action::AtlasProgram,
         node_action::Segment,
         node_action::AtlasModule,
         node_action::BranchTarget,
         node_action::EntryPoint,
         node_action::CommentBlock,
         node_action::CommentLines,
         node_action::DataLines,
         node_action::CodeLines,
         node_action::Range,
         node_action::Type
      };   

   // Node Action Argument Index
      int parser::nact_arg[758] = 
      {
          1,   -1,   -1,    4,    7,   11,   14,   -1,   19,   23,   27,   31,   -1,   -1,   -1,   -1,   -1,   -1,   35,   39,
         42,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   52,   -1,   -1,   -1,   -1,   56,   59,
         62,   -1,   -1,   -1,   -1,   66,   70,   73,   -1,   -1,   77,   81,   84,   -1,   -1,   88,   92,   95,   -1,   -1,
         99,  103,  106,   -1,   -1,  110,  114,  117,   -1,   -1,  121,  125,   -1,   -1,  128,  131,  134,  137,   -1,   -1,
         -1,  141,  145,  149,  153,  157,  161,  165,  169,  173,  177,  181,  185,  189,  193,  197,  201,  205,  209,  213,
        217,  221,  225,  229,  233,  237,  241,  245,  249,  253,  257,  261,  265,  269,  273,  277,  281,  285,  289,  293,
        297,  301,   -1,   -1,  305,   -1,   -1,  310,   -1,   -1,  313,  316,  319,  323,   -1,   -1,   -1,  327,  331,  335,
        339,  343,  347,  351,  355,  359,  363,  367,  371,  375,  379,  383,  387,  391,  394,   -1,   -1,  398,  402,  406,
        410,  414,  417,  420,  423,   -1,   -1,   -1,  427,  431,   -1,   -1,  435,   -1,   -1,  439,   -1,   -1,  443,   -1,
         -1,  447,   -1,   -1,  451,   -1,   -1,   -1,  455,   -1,   -1,  459,   -1,   -1,   -1,  463,   -1,   -1,  467,   -1,
        470,  473,   -1,   -1,   -1,   -1,   -1,  477,  481,  485,   -1,   -1,   -1,   -1,   -1,   -1,  494,   -1,  498,   -1,
        503,  507,  511,  515,  519,  523,  526,   -1,   -1,  529,  532,  535,  539,  543,   -1,  547,   -1,  550,  553,  556,
        559,  563,  567,   -1,  570,  573,  577,  581,  585,  588,  591,  594,  598,  602,  606,  609,  612,  615,   -1,  619,
        623,  627,  631,  635,  639,  643,   -1,   -1,  648,   -1,   -1,  653,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,  666,  670,  674,  678,  682,  686,  690,  694,  698,  702,  706,  710,  714,  718,  722,  726,  730,  734,  738,
        742,  746,  750,  754,  758,  762,  766,  770,  774,  778,  782,  786,  790,  794,  798,  802,  806,  810,  814,  818,
        822,  826,  830,  834,  837,  841,  845,  849,  853,  857,  861,  865,  869,  873,  877,  881,  885,  889,  893,  897,
        901,  905,  909,  913,  917,  921,   -1,   -1,  924,  928,  932,  936,  940,  944,  948,  952,  956,  960,  964,  968,
        972,  976,  980,  984,  988,  992,  996, 1000, 1004, 1008,   -1,   -1, 1012, 1016, 1020, 1024,   -1, 1028, 1032, 1036,
       1040, 1044,   -1,   -1,   -1,   -1, 1048, 1052, 1056, 1060, 1064, 1068, 1072, 1076, 1080, 1083,   -1,   -1, 1086, 1089,
       1093, 1097,   -1, 1101, 1105, 1109, 1112, 1115, 1118, 1121, 1124, 1127, 1130, 1133, 1136, 1139, 1142,   -1,   -1,   -1,
       1146, 1150, 1154, 1158, 1162, 1166, 1170, 1174, 1178, 1182,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1
      };

/*--- Argument Numbers. ------------------------------------------------------*/

   // Parse action argument numbers 
      int parser::arg_numb[1185] = 
      {
         44,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    2,    1,   -1,   -1,   -1,   -1,   -1,    1,    1,    2,
         -1,   -1,    1,    2,   -1,   -1,    1,    2,   -1,   -1,    1,    2,   -1,   -1,    1,    3,   -1,   -1,    1,    2,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    1,    1,    1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,    1,    3,   -1,   -1,    1,    2,   -1,   -1,   -1,   -1,   -1,    1,    3,   -1,   -1,
          1,    3,   -1,   -1,   -1,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,   -1,   -1,   -1,    1,    3,
         -1,   -1,    1,    3,   -1,   -1,   -1,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,   -1,   -1,   -1,
          1,    3,   -1,   -1,    1,    3,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
          1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,
          1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,
          1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,
          1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,
          1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,
          1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,
          1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,
          1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,
          1,    3,   -1,   -1,    1,    4,   -1,   -1,    0,    1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,    1,    3,   -1,   -1,    1,    3,    5,   -1,    1,    3,    6,   -1,    1,    3,    7,   -1,    1,    3,
          5,   -1,    1,    3,    6,   -1,    1,    3,    7,   -1,    1,    3,    5,   -1,    1,    3,    6,   -1,    1,    3,
          7,   -1,    1,    3,    5,   -1,    1,    3,    6,   -1,    1,    3,    7,   -1,    1,    3,   -1,   -1,    1,    3,
         -1,   -1,    1,    3,    5,   -1,    1,    3,    6,   -1,    1,    3,    7,   -1,   -1,   -1,   -1,    1,    3,   -1,
         -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    2,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,
         -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,
         -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    1,    3,   -1,   -1,
          1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    1,    2,    1,    1,    1,   -1,   -1,   -1,    1,   -1,   -1,
         -1,    1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,    1,    3,
         -1,   -1,    1,    2,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    1,    3,
         -1,   -1,    1,    3,   -1,   -1,    1,    2,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,    1,    3,   -1,   -1,    1,    3,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    1,    8,   -1,   -1,
          1,    2,   -1,   -1,    1,    2,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    1,    8,   -1,
         -1,    1,    8,   -1,   -1,    2,    9,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    1,    8,
         -1,   -1,    1,   10,   -1,   -1,    1,   10,   -1,   -1,    1,   10,   -1,   -1,    1,   10,   -1,   -1,    1,   10,
         -1,   -1,    2,   11,   -1,   -1,    1,    1,   -1,   -1,   -1,    0,    1,    2,   -1,   -1,    1,    1,    1,    1,
          1,    1,    1,    1,    1,    1,    8,   -1,   -1,    1,    8,   -1,   -1,    1,    8,   -1,   -1,    1,    2,   -1,
         -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    2,   12,   -1,
         -1,    1,    8,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,
         -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,
         -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    2,   12,   13,   -1,    2,   12,   13,
         -1,    2,   12,   13,   -1,    2,   12,   14,   -1,    2,   12,   14,   -1,    2,   12,   14,   -1,    2,   12,   15,
         -1,    2,   12,   15,   -1,    2,   12,   15,   -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,
         -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,
         -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,   -1,   -1,   -1,
          3,    9,   -1,   -1,    3,    9,   -1,   -1,    3,    9,   -1,   -1,    3,    9,   -1,   -1,    3,    9,   -1,   -1,
          3,    9,   -1,   -1,    3,    9,   -1,   -1,    3,    9,   -1,   -1,    3,    9,   -1,   -1,    3,    9,   -1,   -1,
          3,    9,   -1,   -1,    3,    9,   -1,   -1,    3,    9,   -1,   -1,    3,    9,   -1,   -1,    3,    9,   -1,   -1,
          3,    9,   -1,   -1,    3,    9,   -1,   -1,    3,    9,   -1,   -1,    3,    9,   -1,   -1,    3,    9,   -1,   -1,
          3,    9,   -1,   -1,   -1,   -1,   -1,    2,    9,   -1,   -1,    2,    9,   -1,   -1,    2,    9,   -1,   -1,    2,
          9,   -1,   -1,    2,    9,   -1,   -1,    2,    9,   -1,   -1,    2,    9,   -1,   -1,    2,    9,   -1,   -1,    2,
          9,   -1,   -1,    2,    9,   -1,   -1,    2,    9,   -1,   -1,    2,    9,   -1,   -1,    2,    9,   -1,   -1,    2,
          9,   -1,   -1,    2,    9,   -1,   -1,    2,    9,   -1,   -1,    2,    9,   -1,   -1,    2,    9,   -1,   -1,    2,
          9,   -1,   -1,    2,    9,   -1,   -1,    2,    9,   -1,   -1,    1,    9,   -1,   -1,    1,    9,   -1,   -1,    1,
          9,   -1,   -1,    1,    2,   -1,   -1,    1,   12,   -1,   -1,    2,   12,   -1,   -1,    1,    8,   -1,   -1,    1,
          8,   -1,   -1,    2,   12,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    2,
         12,   13,   -1,    2,   12,   13,   -1,    2,   12,   13,   -1,    2,   12,   14,   -1,    2,   12,   14,   -1,    2,
         12,   14,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    1,    2,   -1,   -1,    1,    2,   -1,   -1,
          1,   12,   -1,   -1,    1,    2,   -1,   -1,    1,   12,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
         -1,   -1,   -1,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,
         -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,   -1,    1,   12,   -1,
         -1,    1,   12,   -1,   -1
      };

   // Text for string arguments. 
      char* parser::arg_text[16] = 
      {
         "num_stmt",
         "num",
         "name",
         "statno",
         "verb",
         "scope=\"local\"",
         "scope=\"global\"",
         "scope=\"external\"",
         "word",
         "op",
         "type",
         "size",
         "text",
         "sign=\"-\"",
         "sign=\"+\"",
         "sign=\"+-\""
      };


//                                                                                                 // 
/////////////////////////////////////////////////////////////////////////////////////////////////////

