<?xml version="1.0" encoding="utf-8"?>
<!-- edited with XMLSpy v2013 rel. 2 (x64) (http://www.altova.com) by Anand Jain (NATIONAL INSTRUMENTS) -->
<xs:schema xmlns:td="urn:IEEE-1671.1:2009:TestDescription" xmlns:c="urn:IEEE-1671:2010:Common" xmlns:hc="urn:IEEE-1671:2010:HardwareCommon" xmlns:te="urn:IEEE-1671:2010:TestEquipment" xmlns:uut="urn:IEEE-1671.3:2009.03:UUTDescription" xmlns:ta="urn:P-IEEE-1671.5:2008.03:TestAdapterDescription" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:IEEE-1671.1:2009:TestDescription" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.05">
	<xs:annotation>
		<xs:documentation xml:lang="en">

This schema is specified in IEEE Std 1671.1-20XX, "IEEE Standard for ATML: Test Description"
 
This schema is a World Wide Web Consortium (W3C) Extensible Markup Language (XML) binding 
of the ATML Test Description component defined in IEEE Std 1671.1-20XX,
"IEEE Standard for ATML: Test Description."

The purpose of this schema is to allow the creation of IEEE Std 1671.1-20XX
Test Description instance documents.This schema uses the W3C XML Schema definition
language as the encoding. This allows for interoperability and 
the exchange of ATML component instances between various systems.
This schema shall not be modified but may be included in 
derivative works. 

Copyright (c) 2011 Institute of Electrical and Electronics 
Engineers, Inc.

USE AT YOUR OWN RISK

		</xs:documentation>
	</xs:annotation>
	<xs:import namespace="urn:IEEE-1671:2010:Common" schemaLocation="Common.xsd"/>
	<xs:import namespace="urn:IEEE-1671:2010:HardwareCommon" schemaLocation="HardwareCommon.xsd"/>
	<xs:import namespace="urn:IEEE-1671.3:2009.03:UUTDescription" schemaLocation="UUTDescription.xsd"/>
	<xs:include schemaLocation="ValueFromTypes.xsd"/>
	<xs:include schemaLocation="Operations.xsd"/>
	<xs:simpleType name="SignalRole">
		<xs:annotation>
			<xs:documentation>Enumeration of signal roles, as follows: Source: The signal is generated by an ATE resource. Sensor: The signal is measured by an ATE resource. Monitor: The signal is monitored by an ATE resource. Load: An ATE resource applies a load to the UUT.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Source"/>
			<xs:enumeration value="Sensor"/>
			<xs:enumeration value="Monitor"/>
			<xs:enumeration value="Load"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="OutcomeValue">
		<xs:annotation>
			<xs:documentation>Enumeration of possible values for outcomes of tests and test groups.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Passed"/>
			<xs:enumeration value="Failed"/>
			<xs:enumeration value="Done"/>
			<xs:enumeration value="Aborted"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="TestType">
		<xs:annotation>
			<xs:documentation>Enumeration of test types, as follows: UutIdentification: Verifies that the model of the current UUT is compatible with the testing procedure described in the instance document. PowerStimuliShort: Verifies power or stimulus inputs to be not shorted prior to any stimulus application to the UUT. SafeToTurnOn: Verifies that is it safe to turn on power. Performance: Verifies proper operation of the UUT. Diagnostic: Isolates faults within the UUT. </xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="UutIdentification"/>
			<xs:enumeration value="PowerStimuliShort"/>
			<xs:enumeration value="SafeToTurnOn"/>
			<xs:enumeration value="Performance"/>
			<xs:enumeration value="Diagnostic"/>
			<xs:enumeration value="SessionAction"/>
			<xs:enumeration value="Other"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="TestDescription">
		<xs:annotation>
			<xs:documentation>This element shall contain information defining test performance, test conditions, diagnostic requirements, and support equipment to locate, align, and verify the proper operation of a UUT.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="td:TestDescription">
					<xs:attributeGroup ref="c:DocumentRootAttributes"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="TestDescription">
		<xs:sequence>
			<xs:element name="UUT" type="td:UUT">
				<xs:annotation>
					<xs:documentation>Shall contain descriptive information for the UUT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="InterfaceRequirements" type="td:InterfaceRequirements" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall describe the characteristics of equipment and circuitry required to test the UUT, excluding the test equipment (e.g., UUT connector information).</xs:documentation>
				</xs:annotation>
				<xs:key name="interfaceConnectorKey">
					<xs:selector xpath="./c:Connectors/c:Connector"/>
					<xs:field xpath="@ID"/>
				</xs:key>
				<xs:keyref name="interfaceConnectorRef" refer="td:interfaceConnectorKey">
					<xs:selector xpath="./c:Ports/c:Port/c:ConnectorPins/c:ConnectorPin"/>
					<xs:field xpath="@connectorID"/>
				</xs:keyref>
				<xs:unique name="interfacePortNamesUnique">
					<xs:selector xpath="./c:Ports/c:Port"/>
					<xs:field xpath="@name"/>
				</xs:unique>
				<xs:key name="testPointKey">
					<xs:selector xpath="./td:TestPoints/td:TestPoint"/>
					<xs:field xpath="@ID"/>
				</xs:key>
				<xs:key name="electroOpticalInterfaceKey">
					<xs:selector xpath="./td:ElectroOpticalInterfaces/td:ElectroOpticalInterface"/>
					<xs:field xpath="@ID"/>
				</xs:key>
			</xs:element>
			<xs:element name="DetailedTestInformation" type="td:DetailedTestInformation">
				<xs:annotation>
					<xs:documentation>Shall contain all of the sufficient data for each UUT test to completely describe all input conditions and measurements required.</xs:documentation>
				</xs:annotation>
				<xs:key name="testGroupKey">
					<xs:selector xpath=".//td:TestGroup"/>
					<xs:field xpath="@ID"/>
				</xs:key>
				<xs:keyref name="testGroupEntryPointRef" refer="td:testGroupKey">
					<xs:selector xpath=".//td:TestGroupEntryPoint"/>
					<xs:field xpath="@testGroupID"/>
				</xs:keyref>
				<xs:keyref name="testGroupCallRef" refer="td:testGroupKey">
					<xs:selector xpath=".//td:Behavior/td:TestGroupCall"/>
					<xs:field xpath="@testGroupID"/>
				</xs:keyref>
				<xs:keyref name="testGroupStepRef" refer="td:testGroupKey">
					<xs:selector xpath=".//td:Step/td:TestGroupReference"/>
					<xs:field xpath="@testGroupID"/>
				</xs:keyref>
				<xs:keyref name="testGroupInitializationRef" refer="td:testGroupKey">
					<xs:selector xpath=".//td:InitializationTestGroup"/>
					<xs:field xpath="@testGroupID"/>
				</xs:keyref>
				<xs:keyref name="testGroupTerminationRef" refer="td:testGroupKey">
					<xs:selector xpath=".//td:TerminationTestGroup"/>
					<xs:field xpath="@testGroupID"/>
				</xs:keyref>
				<xs:key name="testGroupOutcomeKey">
					<xs:selector xpath=".//td:TestGroup/td:Outcomes/td:Outcome"/>
					<xs:field xpath="@ID"/>
				</xs:key>
				<xs:keyref name="testGroupOutcomeRef" refer="td:testGroupOutcomeKey">
					<xs:selector xpath=".//td:Step/td:Results/td:Result/td:TestGroupOutcomeReference"/>
					<xs:field xpath="@testGroupOutcomeID"/>
				</xs:keyref>
				<xs:key name="testGroupParameterKey">
					<xs:selector xpath=".//td:TestGroup/td:ParameterDescriptions/td:ParameterDescription"/>
					<xs:field xpath="@ID"/>
				</xs:key>
				<xs:keyref name="testGroupParameterDatumRef" refer="td:testGroupParameterKey">
					<xs:selector xpath=".//c:Datum"/>
					<xs:field xpath="@testGroupParameterID"/>
				</xs:keyref>
				<xs:keyref name="testGroupParameterValueRef" refer="td:testGroupParameterKey">
					<xs:selector xpath=".//td:ValueToParameter"/>
					<xs:field xpath="@testGroupParameterID"/>
				</xs:keyref>
				<xs:key name="testGroupTestResultKey">
					<xs:selector xpath=".//td:TestGroup/td:TestResultDescriptions/td:TestResultDescription"/>
					<xs:field xpath="@ID"/>
				</xs:key>
				<xs:keyref name="testGroupTestResultTestResultRef" refer="td:testGroupTestResultKey">
					<xs:selector xpath=".//td:Action/td:TestResults/td:TestResult/td:ValueToTestResult"/>
					<xs:field xpath="@testGroupTestResultID"/>
				</xs:keyref>
				<xs:keyref name="testGroupTestResultSessionDatumRef" refer="td:testGroupTestResultKey">
					<xs:selector xpath=".//td:Action/td:SessionData/td:SessionDatum/td:ValueToTestResult"/>
					<xs:field xpath="@testGroupTestResultID"/>
				</xs:keyref>
				<xs:key name="actionKey">
					<xs:selector xpath=".//td:Action"/>
					<xs:field xpath="@ID"/>
				</xs:key>
				<xs:keyref name="actionInitializationRef" refer="td:actionKey">
					<xs:selector xpath=".//td:InitializationAction"/>
					<xs:field xpath="@actionID"/>
				</xs:keyref>
				<xs:keyref name="actionTerminationRef" refer="td:actionKey">
					<xs:selector xpath=".//td:TerminationAction"/>
					<xs:field xpath="@actionID"/>
				</xs:keyref>
				<xs:keyref name="actionStepRef" refer="td:actionKey">
					<xs:selector xpath=".//td:Step/td:ActionReference"/>
					<xs:field xpath="@actionID"/>
				</xs:keyref>
				<xs:keyref name="actionTestGroupRef" refer="td:actionKey">
					<xs:selector xpath=".//td:TestGroup/td:ActionReferences/td:ActionReference"/>
					<xs:field xpath="@actionID"/>
				</xs:keyref>
				<xs:keyref name="actionEntryPointRef" refer="td:actionKey">
					<xs:selector xpath=".//td:ActionEntryPoint"/>
					<xs:field xpath="@actionID"/>
				</xs:keyref>
				<xs:key name="actionOutcomeKey">
					<xs:selector xpath=".//td:Action/td:Outcomes/td:Outcome"/>
					<xs:field xpath="@ID"/>
				</xs:key>
				<xs:keyref name="actionOutcomeResultRef" refer="td:actionOutcomeKey">
					<xs:selector xpath=".//td:Result/td:ActionOutcomeReference"/>
					<xs:field xpath="@actionOutcomeID"/>
				</xs:keyref>
				<xs:keyref name="actionOutcomeOperationRef" refer="td:actionOutcomeKey">
					<xs:selector xpath=".//td:Operation/td:Results/td:Result"/>
					<xs:field xpath="@actionOutcomeID"/>
				</xs:keyref>
				<xs:key name="testResultKey">
					<xs:selector xpath=".//td:Action/td:TestResults/td:TestResult"/>
					<xs:field xpath="@ID"/>
				</xs:key>
				<xs:keyref name="testResultDatumRef" refer="td:testResultKey">
					<xs:selector xpath=".//c:Datum/td:TestResult"/>
					<xs:field xpath="@testResultID"/>
				</xs:keyref>
				<xs:keyref name="testResultOperationRef" refer="td:testResultKey">
					<xs:selector xpath=".//td:Operation/td:ValueToTestResult"/>
					<xs:field xpath="@testResultID"/>
				</xs:keyref>
				<xs:keyref name="resultOutValueResultID" refer="td:testResultKey">
					<xs:selector xpath=".//td:IeeeStd1641/td:IeeeStd1641OutValues/td:ResultOutValue"/>
					<xs:field xpath="@resultID"/>
				</xs:keyref>
				<xs:key name="sessionDatumKey">
					<xs:selector xpath=".//td:Action/td:SessionData/td:SessionDatum"/>
					<xs:field xpath="@ID"/>
				</xs:key>
				<xs:keyref name="sessionDatumDatumRef" refer="td:sessionDatumKey">
					<xs:selector xpath=".//c:Datum/td:SessionDatum"/>
					<xs:field xpath="@sessionDatumID"/>
				</xs:keyref>
				<xs:keyref name="sessionDatumOperationRef" refer="td:sessionDatumKey">
					<xs:selector xpath=".//td:Operation/td:ValueToSessionDatum"/>
					<xs:field xpath="@sessionDatumID"/>
				</xs:keyref>
				<xs:key name="measurementKey">
					<xs:selector xpath=".//td:Operation/td:Measurement"/>
					<xs:field xpath="@ID"/>
				</xs:key>
				<xs:keyref name="measurementRef" refer="td:measurementKey">
					<xs:selector xpath=".//c:Datum"/>
					<xs:field xpath="@measurementID"/>
				</xs:keyref>
				<xs:key name="globalSignalKey">
					<xs:selector xpath=".//td:GlobalSignal/td:Source"/>
					<xs:field xpath="@ID"/>
				</xs:key>
				<xs:keyref name="globalSignalReferenceRef" refer="td:globalSignalKey">
					<xs:selector xpath=".//td:GlobalSignalReference"/>
					<xs:field xpath="@globalSignalID"/>
				</xs:keyref>
				<xs:keyref name="globalSignalOperationRef" refer="td:globalSignalKey">
					<xs:selector xpath=".//td:GlobalSignalOperation"/>
					<xs:field xpath="@globalSignalID"/>
				</xs:keyref>
				<xs:key name="componentKey">
					<xs:selector xpath=".//td:Component"/>
					<xs:field xpath="@ID"/>
				</xs:key>
				<xs:keyref name="componentRef" refer="td:componentKey">
					<xs:selector xpath=".//td:AdjustComponent"/>
					<xs:field xpath="@componentID"/>
				</xs:keyref>
				<xs:keyref name="componentFaultRef" refer="td:componentKey">
					<xs:selector xpath=".//td:Fault/td:Definition"/>
					<xs:field xpath="@componentID"/>
				</xs:keyref>
				<xs:key name="failureKey">
					<xs:selector xpath=".//td:FailureFaultData/td:Failures/td:Failure"/>
					<xs:field xpath="@ID"/>
				</xs:key>
				<xs:keyref name="failureOutcomeRef" refer="td:failureKey">
					<xs:selector xpath=".//td:Outcome/td:DetectionIsolation/td:Failures/td:Failure"/>
					<xs:field xpath="@failureID"/>
				</xs:keyref>
				<xs:keyref name="failureNextStepRef" refer="td:failureKey">
					<xs:selector xpath=".//td:NextStep/td:DetectionIsolation/td:Failures/td:Failure"/>
					<xs:field xpath="@failureID"/>
				</xs:keyref>
				<xs:key name="tsfLibraryKey">
					<xs:selector xpath="./td:TsfLibraries/td:TsfLibrary"/>
					<xs:field xpath="@ID"/>
				</xs:key>
				<xs:keyref name="tsfLibraryRef" refer="td:tsfLibraryKey">
					<xs:selector xpath=".//td:TsfClass"/>
					<xs:field xpath="@tsfLibraryID"/>
				</xs:keyref>
				<xs:key name="toolKey">
					<xs:selector xpath=".//td:Tools/td:Tool"/>
					<xs:field xpath="@ID"/>
				</xs:key>
				<xs:keyref name="toolRef" refer="td:toolKey">
					<xs:selector xpath=".//td:Behavior/td:AutomaticGeneration"/>
					<xs:field xpath="@toolID"/>
				</xs:keyref>
			</xs:element>
			<xs:element name="Extension" type="c:Extension" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provided to permit schema extensibility.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" type="c:NonBlankString">
			<xs:annotation>
				<xs:documentation>Name of the instance document.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="version" type="c:NonBlankString">
			<xs:annotation>
				<xs:documentation>Version of the instance document.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="SignalRequirements">
		<xs:annotation>
			<xs:documentation>Shall describe all UUT signal requirements for testing the UUT. Note that UUT power requirements can be described using this element, as well as the UUT/TestData/PowerRequirements element. If the instance document contains power requirements specified using both elements, these descriptions shall be consistent.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="SignalRequirement" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Describes one UUT signal requirement.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="TsfClass" type="td:TsfClass">
							<xs:annotation>
								<xs:documentation>Identifies the TSF class for the signal.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="TsfClassAttribute" type="td:TsfClassAttribute" minOccurs="0" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Describes requirements for one attribute of the signal.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="role" type="td:SignalRole" use="required">
						<xs:annotation>
							<xs:documentation>Signal role, e.g., source, sensor, monitor, load.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Extension" type="c:Extension" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provided to permit schema extensibility.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="InterfaceRequirements">
		<xs:annotation>
			<xs:documentation>Shall describe the characteristics of equipment and circuitry required to test the UUT (excluding the test equipment).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Fixtures" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall contain the description of any fixtures or signal conditioning modules required to verify operation of the UUT. This includes UUT mounting, holding and support fixtures, cooling carts, pneumatic function generators, hydraulic fixtures, etc.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Fixture" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Shall describe one fixture.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:choice>
									<xs:element name="DescriptionDocumentReference" type="c:DocumentReference">
										<xs:annotation>
											<xs:documentation>Shall reference an external XML document conformant with the schema defined by IEEE Std. 1671.5 ATML Test Adapter Description.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Definition" type="c:ItemDescription">
										<xs:annotation>
											<xs:documentation>Shall provide a description of the fixture in the current instance document. To describe Fixture Interfaces (ex. when active Fixtures are used and the Test Description must reference Fixture Ports), use derived type TestAdapterDescription. You can reference Fixture ports from all locations that support referencing of UUT ports by using the hc:Network type.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:choice>
								<xs:attribute name="ID" type="c:NonBlankString" use="required">
									<xs:annotation>
										<xs:documentation>Unique identifier, enables referencing the fixture.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Extension" type="c:Extension" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provided to permit schema extensibility.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DetailedTestInformation">
		<xs:annotation>
			<xs:documentation>Shall describe initialization, performance, and diagnostic test information</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TsfLibraries" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall identify the Test Signal Framework (TSF) Libraries referenced in the current instance document. These TSF Libraries describe the interface and behavior of IEEE Std 1641 signals used in the instance document. Refer to clause 6 of IEEE 1641 for information on describing TSF Libraries.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="TsfLibrary" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Identifies one TSF Library by referencing the external XML documents that describe the interface and behavior of signals from the TSF Library.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="XmlSchemaURL" type="c:NonBlankURI">
										<xs:annotation>
											<xs:documentation>References the XML Schema document that defines the interface of the TSF Library.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="XmlInstanceDocumentURL" type="c:NonBlankURI">
										<xs:annotation>
											<xs:documentation>References the XML instance document that describes the interface and behavior of signals from the TSF Library. For each TSF Library, the file referenced by this element shall be identical to the file referenced by the â€˜xsi:schemaLocationâ€™ attribute of the root element. Note that the previous constraint is not enforced by this XML schema. Consumer applications should verify the constraint programmatically.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="name" type="c:NonBlankString">
									<xs:annotation>
										<xs:documentation>Descriptive name for the TSF Library.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="ID" type="c:NonBlankString" use="required">
									<xs:annotation>
										<xs:documentation>Unique identifier, enables referencing of the TSF Library element.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="EntryPoints">
				<xs:annotation>
					<xs:documentation>Shall identify the test groups or actions that can be used as entry points for testing the UUT. For each entry point, test conditions are completely stated and are not dependent on previous tests or setups. The element shall not appear in instance documents unless it has at least one child element. Note that this constraint is not enforced by the XML schema. Consumers should verify the constraint programmatically.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="TestGroupEntryPoints" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Shall identify the test groups that can be used as entry points for testing the UUT.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="TestGroupEntryPoint" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Shall identify one "test group" entry point.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:attribute name="ID" type="c:NonBlankString" use="required">
												<xs:annotation>
													<xs:documentation>Unique identifier, enables the referencing of the entry point.</xs:documentation>
												</xs:annotation>
											</xs:attribute>
											<xs:attribute name="testGroupID" type="c:NonBlankString" use="required">
												<xs:annotation>
													<xs:documentation>ID of the test group specified as entry point.</xs:documentation>
												</xs:annotation>
											</xs:attribute>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="primaryTestGroupEntryPointID" type="c:NonBlankString" use="required">
									<xs:annotation>
										<xs:documentation>Shall identify one of the entry points described through TestGroupEntryPoint child elements as the "primary" entry point of the program. The "primary" entry point is used in the absence of an entry point selection (e.g., by the operator). </xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
							<xs:key name="entryPointKey">
								<xs:selector xpath="./td:TestGroupEntryPoint"/>
								<xs:field xpath="@ID"/>
							</xs:key>
							<xs:keyref name="entryPointRef" refer="td:entryPointKey">
								<xs:selector xpath="."/>
								<xs:field xpath="@primaryTestGroupEntryPointID"/>
							</xs:keyref>
						</xs:element>
						<xs:element name="ActionEntryPoints" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Shall identify the actions that can be used as entry points for testing the UUT.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="ActionEntryPoint" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Shall identify one "action" entry point. This can be a test or a session action.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:attribute name="actionID" type="c:NonBlankString" use="required">
												<xs:annotation>
													<xs:documentation>ID of the action specified as entry point.</xs:documentation>
												</xs:annotation>
											</xs:attribute>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Actions">
				<xs:annotation>
					<xs:documentation>Shall contain the list of actions (tests and session actions) described by the instance document.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Action" type="td:Test" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Shall describe one action (test or session action). Note that ActionType is an abstract type. Consequently, elements with derived types shall be provided. The 'xsi:type' attribute shall be used to indicates the type of these elements. </xs:documentation>
							</xs:annotation>
							<xs:key name="localSignalKey">
								<xs:selector xpath=".//td:LocalSignal/td:Source|.//td:LocalSignal/td:Sensor|.//td:LocalSignal/td:Monitor"/>
								<xs:field xpath="@ID"/>
							</xs:key>
							<xs:keyref name="localSignalRef" refer="td:localSignalKey">
								<xs:selector xpath=".//td:LocalSignalReference"/>
								<xs:field xpath="@localSignalID"/>
							</xs:keyref>
							<xs:key name="localSourceSignalKey">
								<xs:selector xpath=".//td:LocalSignal/td:Source"/>
								<xs:field xpath="@ID"/>
							</xs:key>
							<xs:keyref name="localSourceSignalRef" refer="td:localSourceSignalKey">
								<xs:selector xpath=".//td:LocalSourceSignalReference"/>
								<xs:field xpath="@localSourceSignalID"/>
							</xs:keyref>
							<xs:key name="localSensorSignalKey">
								<xs:selector xpath=".//td:LocalSignal/td:Sensor"/>
								<xs:field xpath="@ID"/>
							</xs:key>
							<xs:keyref name="localSensorSignalRef" refer="td:localSensorSignalKey">
								<xs:selector xpath=".//td:LocalSensorSignalReference"/>
								<xs:field xpath="@localSensorSignalID"/>
							</xs:keyref>
							<xs:key name="localMonitorSignalKey">
								<xs:selector xpath=".//td:LocalSignal/td:Monitor"/>
								<xs:field xpath="@ID"/>
							</xs:key>
							<xs:keyref name="localMonitorSignalLocalRef" refer="td:localMonitorSignalKey">
								<xs:selector xpath=".//td:LocalMonitorSignalReference"/>
								<xs:field xpath="@localMonitorSignalID"/>
							</xs:keyref>
							<xs:keyref name="localMonitorSignalEventFromRef" refer="td:localMonitorSignalKey">
								<xs:selector xpath=".//td:EventBased/td:From"/>
								<xs:field xpath="@localMonitorSignalID"/>
							</xs:keyref>
							<xs:keyref name="localMonitorSignalEventToRef" refer="td:localMonitorSignalKey">
								<xs:selector xpath=".//td:EventBased/td:To"/>
								<xs:field xpath="@localMonitorSignalID"/>
							</xs:keyref>
							<xs:keyref name="localMonitorSignalSyncToRef" refer="td:localMonitorSignalKey">
								<xs:selector xpath=".//td:Synchronization/td:SyncTo"/>
								<xs:field xpath="@localMonitorSignalID"/>
							</xs:keyref>
							<xs:keyref name="localMonitorSignalGatedWithRef" refer="td:localMonitorSignalKey">
								<xs:selector xpath=".//td:Synchronization/td:Gated/td:With"/>
								<xs:field xpath="@localMonitorSignalID"/>
							</xs:keyref>
							<xs:keyref name="localMonitorSignalGatedFromRef" refer="td:localMonitorSignalKey">
								<xs:selector xpath=".//td:Synchronization/td:Gated/td:FromTo/td:From"/>
								<xs:field xpath="@localMonitorSignalID"/>
							</xs:keyref>
							<xs:keyref name="localMonitorSignalGatedToRef" refer="td:localMonitorSignalKey">
								<xs:selector xpath=".//td:Synchronization/td:Gated/td:FromTo/td:To"/>
								<xs:field xpath="@localMonitorSignalID"/>
							</xs:keyref>
							<xs:key name="measurementKey2">
								<xs:selector xpath=".//td:Operation/td:Measurement"/>
								<xs:field xpath="@ID"/>
							</xs:key>
							<xs:keyref name="measurementOperationRef" refer="td:measurementKey2">
								<xs:selector xpath=".//td:Operation/td:MeasurementReference"/>
								<xs:field xpath="@measurementID"/>
							</xs:keyref>
							<xs:keyref name="measurementValueRef" refer="td:measurementKey2">
								<xs:selector xpath=".//td:Value"/>
								<xs:field xpath="@measurementID"/>
							</xs:keyref>
							<xs:keyref name="measurementDatumRef" refer="td:measurementKey2">
								<xs:selector xpath=".//c:Datum"/>
								<xs:field xpath="@measurementID"/>
							</xs:keyref>
							<xs:key name="outcomeKey1">
								<xs:selector xpath=".//td:Outcomes/td:Outcome"/>
								<xs:field xpath="@ID"/>
							</xs:key>
							<xs:keyref name="outcomeOperationRef" refer="td:outcomeKey1">
								<xs:selector xpath=".//td:Operation/td:Results/td:Result"/>
								<xs:field xpath="@actionOutcomeID"/>
							</xs:keyref>
							<xs:keyref name="outcomeConditionRef" refer="td:outcomeKey1">
								<xs:selector xpath=".//td:ActionOutcomeReference"/>
								<xs:field xpath="@actionOutcomeID"/>
							</xs:keyref>
							<xs:key name="parameterKey">
								<xs:selector xpath=".//td:Parameters/td:Parameter"/>
								<xs:field xpath="@ID"/>
							</xs:key>
							<xs:keyref name="parameterDatumRef" refer="td:parameterKey">
								<xs:selector xpath=".//c:Datum"/>
								<xs:field xpath="@parameterID"/>
							</xs:keyref>
							<xs:keyref name="parameterValueRef" refer="td:parameterKey">
								<xs:selector xpath=".//td:Value"/>
								<xs:field xpath="@parameterID"/>
							</xs:keyref>
							<xs:keyref name="parameterInParameterValueRef" refer="td:parameterKey">
								<xs:selector xpath=".//td:ParameterInValue"/>
								<xs:field xpath="@parameterID"/>
							</xs:keyref>
							<xs:key name="iteratorKey">
								<xs:selector xpath=".//td:Decision/td:Iterator"/>
								<xs:field xpath="@ID"/>
							</xs:key>
							<xs:keyref name="iteratorInIteratorValueRef" refer="td:iteratorKey">
								<xs:selector xpath=".//td:IteratorInValue"/>
								<xs:field xpath="@iteratorID"/>
							</xs:keyref>
							<xs:keyref name="iteratorDatumRef" refer="td:iteratorKey">
								<xs:selector xpath=".//c:Datum"/>
								<xs:field xpath="@iteratorID"/>
							</xs:keyref>
							<xs:key name="messageInKey">
								<xs:selector xpath=".//td:MessageIn"/>
								<xs:field xpath="@ID"/>
							</xs:key>
							<xs:keyref name="messageInRef" refer="td:messageInKey">
								<xs:selector xpath=".//td:Value"/>
								<xs:field xpath="@messageInID"/>
							</xs:keyref>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
				<xs:unique name="actionNamesUnique">
					<xs:selector xpath="./td:Action"/>
					<xs:field xpath="@name"/>
				</xs:unique>
			</xs:element>
			<xs:element name="TestGroups">
				<xs:annotation>
					<xs:documentation>Shall contain the list of test groups described by the instance document.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="TestGroup" type="td:TestGroup" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Shall describe one test group. Note that TestGroupType is an abstract type. Consequently, elements with derived types shall be assigned to this element. The xsi:type' attribute shall be used to indicates the type of these elements. </xs:documentation>
							</xs:annotation>
							<xs:key name="outcomeKey2">
								<xs:selector xpath=".//td:Outcome"/>
								<xs:field xpath="@ID"/>
							</xs:key>
							<xs:keyref name="outcomeSequenceRef" refer="td:outcomeKey2">
								<xs:selector xpath=".//td:SequenceOutcome"/>
								<xs:field xpath="@sequenceOutcomeID"/>
							</xs:keyref>
							<xs:keyref name="outcomeFinishRef" refer="td:outcomeKey2">
								<xs:selector xpath=".//td:Finish"/>
								<xs:field xpath="@sequenceOutcomeID"/>
							</xs:keyref>
							<xs:key name="stepKey">
								<xs:selector xpath=".//td:Step"/>
								<xs:field xpath="@ID"/>
							</xs:key>
							<xs:keyref name="stepEntryPointRef" refer="td:stepKey">
								<xs:selector xpath=".//td:EntryPoint"/>
								<xs:field xpath="@stepID"/>
							</xs:keyref>
							<xs:keyref name="stepNextStepRef" refer="td:stepKey">
								<xs:selector xpath=".//td:NextStep"/>
								<xs:field xpath="@stepID"/>
							</xs:keyref>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
				<xs:unique name="testGroupNamesUnique">
					<xs:selector xpath="./td:TestGroup"/>
					<xs:field xpath="@name"/>
				</xs:unique>
			</xs:element>
			<xs:element name="GlobalVariables" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="GlobalVariable" type="td:Variable" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="SignalRequirements" type="td:SignalRequirements" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall specify all UUT signal requirements for testing the UUT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FailureFaultData" type="td:FailureFaultData" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall contain UUT fault data, including faults and failures. The element shall not appear in instance documents unless it has at least one child element. Note that this constraint is not enforced by the XML schema. Consumers should verify the constraint programmatically.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AutomaticGeneration" type="td:AutomaticGeneration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall identify the Automatic Test Program Generation (ATPG) tools used to generate the test program.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Extension" type="c:Extension" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provided to permit schema extensibility.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UUT">
		<xs:annotation>
			<xs:documentation>Shall contain descriptive UUT information required to support the test procedure specified in the current instance document. Use </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Description">
				<xs:annotation>
					<xs:documentation>Shall contain UUT Description data.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:element name="DescriptionDocumentReference" type="c:DocumentReference">
							<xs:annotation>
								<xs:documentation>Shall reference an external XML document conformant with the schema defined by IEEE Std. 1671.3 ATML UUT Description.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Definition" type="uut:UUTDescription">
							<xs:annotation>
								<xs:documentation>Shall provide a description of the fixture in the current instance document.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:complexType>
			</xs:element>
			<xs:element name="TestData" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall contain all of the general UUT data that may be of use in developing test requirements and test programs. The element shall not appear in instance documents unless it has at least one child element. Note that this constraint is not enforced by the XML schema. Consumers should verify the constraint programmatically.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PowerRequirements" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Shall specify all UUT alternating current (AC) and direct current (DC) power source requirements for testing the UUT. Note that UUT power requirements can be described using this element, as well as the DetailedTestInformation/SignalRequirements element. The SignalRequirements element shall be used when signal requirements conformant with IEEE Std 1641 are desired. This element shall be used in all other situations. Note that a similar element exists in the referenced UUT Description document, under UutDescription/Hardware. That element describes power source requirements for normal operation of the UUT, while the current element describes requirements for testing the UUT. </xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:complexContent>
									<xs:extension base="hc:PowerSpecifications">
										<xs:sequence>
											<xs:element name="Extension" type="c:Extension" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Provided to permit schema extensibility.</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
						<xs:element name="OperationalAndSafetyRequirements" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Shall specify any precautions or instructions necessary for personnel and equipment protection. Shall include specification of any special handling (e.g., Electrostatic Sensitive Device) required by the UUT and the specification of any general procedures and precautions associated with operating the UUT. The element shall not appear in instance documents unless it has at least one child element. Note that this constraint is not enforced by the XML schema. Consumers should verify the constraint programmatically.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Operational" type="c:NonBlankString" minOccurs="0" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Shall describe all conditions required for proper and safe operation, including cooling air, hydraulic pressure, and pneumatic sources.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="AdjustmentAlignment" type="c:NonBlankString" minOccurs="0" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Shall specify adjustment and alignment requirements.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Safety" type="c:NonBlankString" minOccurs="0" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Shall describe all special precautions and instructions regarding personnel and equipment protection in the presence of hazards such as high voltage, RF radiation, or lasers.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="HandlingAndMaintenance" type="c:NonBlankString" minOccurs="0" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Shall specify special handling and maintenance requirements.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Extension" type="c:Extension" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Provided to permit schema extensibility.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="SpecialElectricalComponents" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Shall identify all special electrical components required to test the UUT.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="SpecialElectricalComponent" type="c:ItemDescription" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Identification of one special electrical component required to test the UUT.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="SpecialTools" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Shall identify of special tools (e.g., card extenders) required to test the UUT.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="SpecialTool" type="c:ItemDescription" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Identification of one special tool required to test the UUT.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="Extension" type="c:Extension" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Provided to permit schema extensibility.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Extension" type="c:Extension" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provided to permit schema extensibility.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Component">
		<xs:annotation>
			<xs:documentation>Shall describe one component of the UUT.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="Definition">
				<xs:annotation>
					<xs:documentation>Shall be used to describe a UUT Component.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="c:ItemDescription">
							<xs:sequence>
								<xs:element name="Interface" type="c:PhysicalInterface" minOccurs="0">
									<xs:annotation>
										<xs:documentation>Shall define the interface of the component. For components that are regular electronic parts, a single "dummy" Connector shall be defined, with minimal information attached. Additional information can be provided and multiple Connector elements can be used when describing "daughter card" components. </xs:documentation>
									</xs:annotation>
									<xs:key name="componentConnectorKey">
										<xs:selector xpath="./c:Connectors/c:Connector"/>
										<xs:field xpath="@ID"/>
									</xs:key>
									<xs:keyref name="componentConnectorRef" refer="td:componentConnectorKey">
										<xs:selector xpath="./c:Ports/c:Port/c:ConnectorPins/c:ConnectorPin"/>
										<xs:field xpath="@connectorID"/>
									</xs:keyref>
									<xs:unique name="componentPortNamesUnique">
										<xs:selector xpath="./c:Ports/c:Port"/>
										<xs:field xpath="@name"/>
									</xs:unique>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Reference">
				<xs:annotation>
					<xs:documentation>Shall be used to reference a Component description</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="componentID" use="required">
						<xs:annotation>
							<xs:documentation>ID of a Component located under UUT/Description/Definition (if the UUT is described locally) or in an external ATML UUT Description instance document (if the UUT is described in a separate document).</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:choice>
		<xs:attribute name="ID" type="c:NonBlankString" use="required">
			<xs:annotation>
				<xs:documentation>Unique identifier, enables referencing the component.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="LocationItemType">
		<xs:annotation>
			<xs:documentation>Shall be used to identify the item (UUT or Fixture) where a Fault or Failure occurs.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="UUT">
				<xs:annotation>
					<xs:documentation>Shall be used to indicate that the Fault or Failure occurs in the UUT.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Fixture">
				<xs:annotation>
					<xs:documentation>Shall be used to indicate that the Fault or Failure occurs in a Fixture.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="fixtureID">
						<xs:annotation>
							<xs:documentation>ID of the Fixture where the Fault or Failure occurs.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="FailureFaultData">
		<xs:annotation>
			<xs:documentation>Shall contain the failures and faults defined for the UUT.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Failures" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall contain the list of failures defined for the UUT.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Failure" type="td:Failure" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Shall describe one failure.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="FaultData" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall contain UUT fault data, including component descriptions and fault descriptions.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Components" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Shall contain the list of UUT components for which faults are defined.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Component" type="td:Component" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Shall describe one UUT component. The attribute 'designator' of child element Identification shall be used to specify the reference designator of the component (e.g., "R1"). Element Identification/ModelName shall be used to specify the type of the component (e.g., "Resistor"). </xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="Faults" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Shall contain the list of faults defined for the UUT.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Fault" type="td:Fault" maxOccurs="unbounded">
										<xs:annotation>
											<xs:documentation>Shall describe one fault defined for the UUT.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Extension" type="c:Extension" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provided to permit schema extensibility.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Fault">
		<xs:annotation>
			<xs:documentation>Shall describe one fault of the UUT or of a Fixture. A fault is a condition that causes a component of the UUT or Fixture to fail to perform in a required manner (e.g., broken wire, short circuit, value out of tolerance, etc.). Note that Faults can be defined only for hardware UUTs or Fixtures for which Components are also defined. Refer to B.2 for an example on describing faults</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="Definition">
				<xs:annotation>
					<xs:documentation>Shall be used to describe a Fault.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="uut:Fault">
							<xs:sequence>
								<xs:element name="LocationItem" type="td:LocationItemType">
									<xs:annotation>
										<xs:documentation>Shall be used to identify the item (UUT or Fixture) where the Fault occurs.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Reference">
				<xs:annotation>
					<xs:documentation>Shall be used to reference a UUT Fault description</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="faultID" use="required">
						<xs:annotation>
							<xs:documentation>ID of a Fault located under UUT/Description/Definition (if the UUT is described locally) or in an external ATML UUT Description instance document (if the UUT is described in a separate document)</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:choice>
		<xs:attribute name="ID" type="c:NonBlankString" use="required">
			<xs:annotation>
				<xs:documentation>Unique identifier, enables referencing the fault or failure.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="Failure">
		<xs:annotation>
			<xs:documentation>Shall describe one failure of the UUT or of a Fixture. A failure is a change in operating characteristics of the UUT or Fixture resulting in degradation of its performance. The Failures defined for the UUT typically correspond to the prime failure modes of all inputs and outputs to each next lower assembly of the UUT.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="Definition">
				<xs:annotation>
					<xs:documentation>Shall be used to describe a Failure.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="uut:Failure">
							<xs:sequence>
								<xs:element name="LocationItem" type="td:LocationItemType">
									<xs:annotation>
										<xs:documentation>Shall be used to identify the item (UUT or Fixture) where the Failure occurs.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Reference">
				<xs:annotation>
					<xs:documentation>Shall be used to reference a UUT Failure description</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:attribute name="failureID" use="required">
						<xs:annotation>
							<xs:documentation>ID of a Failure located under UUT/Description/Definition (if the UUT is described locally) or in an external ATML UUT Description instance document (if the UUT is described in a separate document)</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
		</xs:choice>
		<xs:attribute name="ID" type="c:NonBlankString" use="required">
			<xs:annotation>
				<xs:documentation>Unique identifier, enables referencing the fault or failure.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="AutomaticGeneration">
		<xs:annotation>
			<xs:documentation>Shall define the Automatic Test Program Generator (ATPG) tools that may be used to generate the test program or parts of the test program. Includes UUT simulators, fault simulators, test pattern generators, translators, post-processors, etc.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Tools">
				<xs:annotation>
					<xs:documentation>Shall contain the list of ATPG tools.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Tool" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Shall describe one ATPG tool.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:complexContent>
									<xs:extension base="c:SoftwareInstance">
										<xs:sequence>
											<xs:element name="DataFormat" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Shall describe the format of data processed by the ATPG tool (e.g., IEEE Std 1445 DTIF).</xs:documentation>
												</xs:annotation>
												<xs:complexType>
													<xs:sequence>
														<xs:element name="Description" type="c:NonBlankString" minOccurs="0">
															<xs:annotation>
																<xs:documentation>Free-form description of the format.</xs:documentation>
															</xs:annotation>
														</xs:element>
														<xs:element name="ComplianceDocument" type="c:Document" minOccurs="0" maxOccurs="unbounded">
															<xs:annotation>
																<xs:documentation> References a compliance document applicable to the format (for example: IEEE Std 1445 DTIF).</xs:documentation>
															</xs:annotation>
														</xs:element>
													</xs:sequence>
													<xs:attribute name="name" type="c:NonBlankString">
														<xs:annotation>
															<xs:documentation>Name of the format.</xs:documentation>
														</xs:annotation>
													</xs:attribute>
												</xs:complexType>
											</xs:element>
											<xs:element name="Extension" type="c:Extension" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Provided to permit schema extensibility.</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
										<xs:attribute name="ID" type="c:NonBlankString" use="required">
											<xs:annotation>
												<xs:documentation>Unique identifier, enables referencing the ATPG tool.</xs:documentation>
											</xs:annotation>
										</xs:attribute>
										<xs:attribute name="type" type="c:NonBlankString" use="required">
											<xs:annotation>
												<xs:documentation>Tool type (e.g., pattern generator)</xs:documentation>
											</xs:annotation>
										</xs:attribute>
										<xs:attribute name="name" type="c:NonBlankString">
											<xs:annotation>
												<xs:documentation>Optional tool name.</xs:documentation>
											</xs:annotation>
										</xs:attribute>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Extension" type="c:Extension" minOccurs="0">
				<xs:annotation>
					<xs:documentation>User-defined ATPG data.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Test">
		<xs:annotation>
			<xs:documentation>Abstract base type for test actions. The following derived types are defined in the schema: Test. Note that this is an abstract type, used as base type for other type definitions. Where this type is assigned in the schema, elements with derived types shall be provided. The 'xsi:type' attribute shall be used to indicate the type of these elements.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Description" type="c:NonBlankString" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Free-form description for the action.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Parameters" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall describe the parameters of the action and shall specify their values. Refer to Annex B for examples on describing parameters. Refer to B.2.15 for usage information regarding parameters.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Parameter" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Shall describe one parameter of the action and shall specify its value. Parameters shall be used to represent values that determine the behavior of the action. This includes, for example: the characteristics of stimulus signals, measurement conditions, UUT pins where signals are applied or measured, the limits of parametric sweeps, the indices of UUT channels to be tested, string commands to be sent to the UUT, identification of firmware to be loaded in the UUT, etc. Parameters shall not be used to represent the limits of acceptable UUT operation, as those limits are described using TestResult descendants of complex type Test, which is derived from ActionType.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="Description" type="c:NonBlankString" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Free-form description of the parameter.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Extension" type="c:Extension" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Provided to permit schema extensibility.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Value" type="td:InValues"/>
								</xs:sequence>
								<xs:attribute name="ID" type="c:NonBlankString" use="required">
									<xs:annotation>
										<xs:documentation>Unique identifier, enables referencing the parameter.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="name" type="c:NonBlankString" use="required">
									<xs:annotation>
										<xs:documentation>Name of the parameter.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="documentRequirementID" type="c:NonBlankString">
									<xs:annotation>
										<xs:documentation>Reference to a requirement ID from an external requirements document, which in turn shall be referenced by a Document element under Documentation/Requirements. Note that the format and location of requirement IDs in the external document are not enforced by this standard and can be application-specific.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
				<xs:unique name="parameterNamesUnique2">
					<xs:selector xpath="./td:Parameter"/>
					<xs:field xpath="@name"/>
				</xs:unique>
			</xs:element>
			<xs:element name="Variables" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Variable" type="td:Variable" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Behavior">
				<xs:annotation>
					<xs:documentation>Shall describe the behavior of the action.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:choice>
						<xs:element name="Description" type="c:NonBlankString">
							<xs:annotation>
								<xs:documentation>The presence of this element shall indicate that behavior is specified using free-form text. The element shall contain the descriptive text. Refer B.2 for an example that contains free-form description of test behavior.</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Operations" type="td:Operations">
							<xs:annotation>
								<xs:documentation>The presence of this element indicates that behavior is specified as a sequence of predefined operations. The operation described by the child elements shall be executed sequentially, in the order in which they appear in the instance document. Refer to B.4 for an example where test behavior is described through operations.</xs:documentation>
							</xs:annotation>
							<xs:unique name="operationIdUnique">
								<xs:selector xpath=".//td:Operation"/>
								<xs:field xpath="@ID"/>
							</xs:unique>
						</xs:element>
						<xs:element name="IeeeStd1641" type="td:IeeeStd1641">
							<xs:annotation>
								<xs:documentation>The presence of this element shall indicate that behavior is specified as a test definition conformant to IEEE Std 1641. Refer to B.3 for an example where test behavior is described through IEEE Std. 1641 signals. The element shall not appear in instance documents unless it has at least one child element. Note that this constraint is not enforced by the XML schema. Consumers should verify the constraint programmatically.</xs:documentation>
							</xs:annotation>
							<xs:unique name="signalNameKey">
								<xs:selector xpath=".//*"/>
								<xs:field xpath="@name"/>
							</xs:unique>
							<xs:keyref name="signalNameRef" refer="td:signalNameKey">
								<xs:selector xpath=".//*"/>
								<xs:field xpath="@signalName"/>
							</xs:keyref>
						</xs:element>
						<xs:element name="TestGroupCall">
							<xs:annotation>
								<xs:documentation>The presence of this element shall indicate that the action consists in the execution of a test group. The element shall identify the test group. If the test group has multiple entry points, execution shall start at the primary entry point. When the behavior specified for an action is â€œtest group callâ€, the outcomes defined for that action shall be identical to those of the referenced test group. Note that the previous constraint is not enforced by this XML schema. Consumer applications should verify the constraint programmatically. Refer to B.4 for an example that contains test group calls.
</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attribute name="testGroupID" type="c:NonBlankString" use="required">
									<xs:annotation>
										<xs:documentation>ID of the test group that is executed.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="AutomaticGeneration">
							<xs:annotation>
								<xs:documentation>The presence of this element shall indicate that the part of the test program that corresponds to the current action will be generated automatically by an ATPG tool. The child elements shall identify the tool and the data files used for generation.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="DataFiles" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Shall contain the list of all data files processed or generated by the ATPG tool for the current test.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:sequence>
												<xs:element name="DataFile" type="c:Document" maxOccurs="unbounded">
													<xs:annotation>
														<xs:documentation>Shall identify one data file.</xs:documentation>
													</xs:annotation>
												</xs:element>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="toolID" type="c:NonBlankString" use="required">
									<xs:annotation>
										<xs:documentation>ID of the element describing the ATPG tool that generates the test.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
						<xs:element name="Extension" type="c:Extension">
							<xs:annotation>
								<xs:documentation>Provided to permit schema extensibility. Through this element, test behavior may be specified using XML content that conforms to an external XML schema.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:choice>
				</xs:complexType>
			</xs:element>
			<xs:element name="Conditions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall specify the preconditions and postconditions for the action. The element shall not appear in instance documents unless it has at least one child element. Note that this constraint is not enforced by the XML schema. Consumers should verify the constraint programmatically.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PreConditions" type="td:PreConditions" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Shall describes all preconditions for the  action or test group. The specification of preconditions aims to ensure that actions and test groups are executed only if the proper conditions exist. For example: power is applied to the UUT, the appropriate firmware is loaded in the UUT, the UUT temperature is within specified limits, etc. </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PostConditions" type="td:PostConditions" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Shall describe all postconditions for the action or test group. Preconditions can be fulfilled by executing actions or test groups with the appropriate postconditions. For example a session action can apply power, download firmware, or change the temperature of a thermal chamber; a test can verify the signature of the UUT, etc. Note that postconditions can be specified for both actions and action outcomes. Postconditions specified for actions become fulfilled after action execution, regardless of the outcome produced by that action.  Postconditions specified for action outcomes become fulfilled after action execution only if that specific outcome was produced by the action. If postconditions are specified at both levels, postconditions associated with action outcomes override those associated with the action.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Outcomes">
				<xs:annotation>
					<xs:documentation>Shall describe the possible outcomes of the current test. The value-qualifier combinations shall be unique for all the outcomes of a test. Note that this constraint is not enforced by the schema. Consumers should verify uniqueness programmatically.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Outcome" type="td:Outcome" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Shall describe one outcome of the test.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="TestResults" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall describe the test results of the current test.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="TestResult" type="td:TestResult" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Shall describe one test result of the current test. Test results serve various purposes, for example: used to determine the test's outcome through comparison with limits, passed to a different test as a parameter, recorded in a test results database for subsequent analysis, etc. Instance documents shall contain one TestResult element for each result produced by the test. For results that are used to determine the test outcome, the TestResult element shall also include the limits or expected value the corresponding result is compared against.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
				<xs:unique name="testResultNamesUnique2">
					<xs:selector xpath="./td:TestResult"/>
					<xs:field xpath="@name"/>
				</xs:unique>
			</xs:element>
			<xs:element name="Extension" type="c:Extension" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provided to permit schema extensibility.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="ID" type="c:NonBlankString" use="required">
			<xs:annotation>
				<xs:documentation>Unique identifier, enables referencing the action.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="name" type="c:NonBlankString" use="required">
			<xs:annotation>
				<xs:documentation>Name of the action</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="c:ClassifiedAttributes"/>
		<xs:attribute name="customType" type="c:NonBlankString">
			<xs:annotation>
				<xs:documentation>Custom action type, used to indicate actions that belong to user-defined categories. The semantics attached to categories are user-specific. For example, actions from the same category may be implemented as a single function or procedure. When this attribute is used to provide a guideline for implementation, implementers may choose to follow or ignore the guideline.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="cost" type="xs:double">
			<xs:annotation>
				<xs:documentation>Cost of action execution, representing the duration of execution, the financial cost associated with execution, or a value calculated by an objective function. May be used to optimize the order of execution.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="documentRequirementID" type="c:NonBlankString">
			<xs:annotation>
				<xs:documentation>Reference to a requirement ID from an external requirements document, which in turn shall be referenced by a Document element under Documentation/Requirements. Note that the format and location of requirement IDs in the external document are not mandated by this standard and can be application-specific.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="type" type="td:TestType">
			<xs:annotation>
				<xs:documentation>Test type. Shall be one of: UutIdentification, PowerStimuliShort, SafeToTurnOn, Performance, Diagnostic.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="typeQualifier" type="c:NonBlankString">
			<xs:annotation>
				<xs:documentation>User-defined information regarding the test type.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="TestResult">
		<xs:annotation>
			<xs:documentation>Abstract base type for describing one result of an action (i.e., test or session action). Note that this type is used as base type for other type definitions. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Description" type="c:NonBlankString" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Free-form description of the result.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Value" type="td:OutValues"/>
			<xs:element name="Extension" type="c:Extension" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provided to permit schema extensibility.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Transform" type="c:NonBlankString" minOccurs="0">
				<xs:annotation>
					<xs:documentation>When applicable, shall describe through free-form text the transformation used to convert instrument data into the test result.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TestLimits" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall specify the limits the current test result is compared against. The result of the comparison shall determine the outcome of the test, i.e., the test passes if the result of the comparison is â€œtrueâ€, and fails if the result is â€œfalseâ€. If a test has multiple test results that contain test limits, multiple comparisons shall be performed (one for each test result). The results of these comparisons shall be combined through the logical operator â€œANDâ€, unless specified otherwise in the descendants of the Behavior child element of Test.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Limit" type="c:Limit" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Shall specify one limit. The type ValueFromTestGroupParameter shall be assigned to a Datum descendant to indicate an  expected value, limit or mask that originates from a parameter of the containing test group. The type ValueFromActionResults shall be assigned to a Datum descendant to indicate an  expected value, limit or mask that comes from one or more test results of tests, or session data of session actions from the same test group. </xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="ID" type="c:NonBlankString" use="required">
			<xs:annotation>
				<xs:documentation>Unique identifier, enables referencing the result.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="name" type="c:NonBlankString" use="required">
			<xs:annotation>
				<xs:documentation>Name of the action result.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="documentRequirementID" type="c:NonBlankString">
			<xs:annotation>
				<xs:documentation>Reference to a requirement ID from an external requirements document, which in turn shall be referenced by a Document element under Documentation/Requirements. Note that the format and location of requirement IDs in the external document are not enforced by this standard and can be application-specific.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="Outcome">
		<xs:annotation>
			<xs:documentation>Abstract base type for describing the outcome of an action (test or session action) or test group. Note that this is an abstract type, used as base type for other type definitions. Where this type is assigned in the schema, elements with derived types shall be provided. The 'xsi:type' attribute shall be used to indicate the type of these elements.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Description" type="c:NonBlankString" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Free-form description of the outcome.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PostConditions" type="td:PostConditions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall describe all postconditions for the action or test group, or for an individual outcome of that test or test group. Postconditions defined in a child element of Test/Conditions or SessionAction/Condition shall apply to all outcomes of that test or session action. Postconditions defined in a child element of Outcome shall apply only for that particular outcome, overriding the postconditions defined in a child element of Test/Conditions or SessionAction/Condition. Preconditions can be fulfilled by executing actions or test groups with the appropriate postconditions. For example a session action can apply power, download firmware, or change the temperature of a thermal chamber; a test can verify the signature of the UUT, etc. Note that postconditions can be specified for both actions (i.e., tests or session outcomes) and action outcomes. Postconditions specified for actions become fulfilled after action execution, regardless of the outcome produced by that action.  Postconditions specified for action outcomes become fulfilled after action execution only if that specific outcome was produced by the action. If postconditions are specified at both levels, postconditions associated with action outcomes override those associated with the action.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Extension" type="c:Extension" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provided to permit schema extensibility.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="ID" type="c:NonBlankString" use="required">
			<xs:annotation>
				<xs:documentation>Unique identifier, enables referencing the action outcome.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="qualifier" type="c:NonBlankString">
			<xs:annotation>
				<xs:documentation>Outcome qualifier (e.g., High, Low). When used, shall contain an adjective providing additional descriptive data for the â€˜valueâ€™ attribute defined in derived types. When â€˜valueâ€™ is â€œAbortedâ€, â€˜qualifierâ€™ shall provide essential descriptive or explanatory information regarding the reason for the action or test group not completing normally. Refer to B.2.12 for an example using qualifiers.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="value" type="td:OutcomeValue" use="required">
			<xs:annotation>
				<xs:documentation>Outcome value. Shall be one of: Passed, Failed, Aborted.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="Condition">
		<xs:annotation>
			<xs:documentation>Shall describe a precondition or postcondition.</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="VariableValue">
				<xs:annotation>
					<xs:documentation>Shall describe the precondition or postcondition in terms of state variable values.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Value" type="c:Value">
							<xs:annotation>
								<xs:documentation>For PreConditions, this element shall specify the value the global variable is compared against. For PostConditions, it shall specify the value assigned to the global variable</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="globalVariableID" type="c:NonBlankString" use="required">
						<xs:annotation>
							<xs:documentation>ID of the Global variable.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="Other" type="c:NonBlankString">
				<xs:annotation>
					<xs:documentation>Shall describe the precondition or postcondition through free-form text.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
		<xs:attribute name="name" type="c:NonBlankString">
			<xs:annotation>
				<xs:documentation>Name of the precondition or postcondition.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="Conditions">
		<xs:annotation>
			<xs:documentation>Shall describe preconditions and postconditions for an action (test or session action) or a test group. Refer to B.3 for an example where conditions are used. Refer to B.3.2 for usage information regarding conditions.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PreConditions" type="td:PreConditions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall describes all preconditions for the  action or test group. The specification of preconditions aims to ensure that actions and test groups are executed only if the proper conditions exist. For example: power is applied to the UUT, the appropriate firmware is loaded in the UUT, the UUT temperature is within specified limits, etc. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PostConditions" type="td:PostConditions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall describe all postconditions for the action or test group. Preconditions can be fulfilled by executing actions or test groups with the appropriate postconditions. For example a session action can apply power, download firmware, or change the temperature of a thermal chamber; a test can verify the signature of the UUT, etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PreConditions">
		<xs:annotation>
			<xs:documentation>Shall describe all preconditions for an action or test group. The specification of preconditions aims to ensure that actions and test groups are executed only if the proper conditions exist. For example: power is applied to the UUT, the appropriate firmware is loaded in the UUT, the UUT temperature is within specified limits, etc. Note that this is a recursive definition, allowing the specification of arbitrarily complex composite preconditions. </xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="PreCondition">
				<xs:annotation>
					<xs:documentation>Shall describe one elementary precondition.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="td:Condition">
							<xs:attribute name="operatorNot" type="xs:boolean">
								<xs:annotation>
									<xs:documentation>The presence of this element shall indicate that the logical operator NOT is applied to the elementary precondition.</xs:documentation>
								</xs:annotation>
							</xs:attribute>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:sequence>
				<xs:element name="Composition">
					<xs:annotation>
						<xs:documentation>Allows for specification of composite preconditions that consist of elementary preconditions connected through logical operators (e.g., Power is on AND (UUT model is AAA OR UUT model is BBB)). </xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="PreConditions" type="td:PreConditions" minOccurs="2" maxOccurs="2">
								<xs:annotation>
									<xs:documentation>Preconditions to be composed. These can be elementary preconditions or composite preconditions.</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="operator" type="c:LogicalOperator" use="required">
							<xs:annotation>
								<xs:documentation>Logical operator that connects the preconditions specified through child elements of the current element.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="PostConditions">
		<xs:annotation>
			<xs:documentation>Shall describe all postconditions for an action or test group, or for a particular outcome of that action or test group. Preconditions can be fulfilled by executing actions or test groups with the appropriate postconditions. For example a session action can apply power, download firmware, or change the temperature of a thermal chamber; a test can verify the signature of the UUT, etc.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PostCondition" type="td:Condition" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Describes one postcondition.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TestGroup">
		<xs:annotation>
			<xs:documentation>Abstract base type, shall describe a group of actions without specifying an order of execution. Contains information common to all test group types. Derived types define a specific order of execution. Note that this is an abstract type, used as base type for other type definitions. Where this type is assigned in the schema, elements with derived types shall be provided. The 'xsi:type' attribute shall be used to indicate the type of these elements. Note that the grouping of actions in test groups does not impose a constraint for the modularity and structure of generated test programs. For example, the actions that are part of a test group may be implemented in the same code module or subroutine, or in separate code modules or subroutines. Refer to B.2.22 for usage information regarding test groups.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Description" type="c:NonBlankString" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Free-form description of the test group.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Outcomes">
				<xs:annotation>
					<xs:documentation>Shall describe the possible outcomes of the test group. When applicable, shall reference the UUT faults or failures identified by these outcomes. The value-qualifier combinations for the outcomes of a test group shall be unique. Note that this constraint is not enforced by the schema. Consumers should verify uniqueness programmatically.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Outcome" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Shall describe one outcome.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:complexContent>
									<xs:extension base="td:Outcome">
										<xs:sequence>
											<xs:element name="DetectionIsolation" type="td:DetectionIsolation" minOccurs="0">
												<xs:annotation>
													<xs:documentation>Shall identify the faults and failures detected or isolated when the parent outcome is obtained through the execution of the test group. Failure and fault data referenced by this element shall be defined under the FailureFaultData child of the root element. The element shall not appear in instance documents unless it has at least one child element. Note that this constraint is not enforced by the XML schema. Consumers should verify the constraint programmatically.</xs:documentation>
												</xs:annotation>
											</xs:element>
										</xs:sequence>
									</xs:extension>
								</xs:complexContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="ParameterDescriptions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall describe the parameters of the test group, without specifying the actual values of these parameters.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="ParameterDescription" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Shall describe one parameter.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="ValueDescription" type="td:ValueDescription">
										<xs:annotation>
											<xs:documentation>Describes the values supported by the parameter. Typically specifies the data type and the unit. Types derived from DatumDescriptionType shall be assigned to DatumDescription descendants. The type ConnectionDatumDescription shall be assigned to the DatumDescription child element to indicate that the parameter contains connection data.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Extension" type="c:Extension" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Provided to permit schema extensibility.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="ID" type="c:NonBlankString" use="required">
									<xs:annotation>
										<xs:documentation>Unique identifier, enables referencing the parameter description.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="name" type="c:NonBlankString" use="required">
									<xs:annotation>
										<xs:documentation>Name of the parameter.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
				<xs:unique name="parameterDescriptionNamesUnique">
					<xs:selector xpath="./td:ParameterDescription"/>
					<xs:field xpath="@name"/>
				</xs:unique>
				<xs:unique name="parameterDescriptionIDsUnique">
					<xs:selector xpath="./td:ParameterDescription"/>
					<xs:field xpath="@ID"/>
				</xs:unique>
			</xs:element>
			<xs:element name="TestResultDescriptions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall describe the results produced by the test group.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="TestResultDescription" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Shall describe one result produced by the test group. The child element ValueToTestResult of type ActionResultType, assigned to descendants of Test or SessionAction elements under the current test group, shall be used to indicate that the value of the test result originates from test results of tests, or from session data of session actions that belong to the current test group.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="ValueDescription" type="td:ValueDescription">
										<xs:annotation>
											<xs:documentation>Shall describe the data type and the unit of the result. Types derived from DatumDescriptionType shall be assigned to DatumDescription descendants. Resolution, ErrorLimit, Range and Confidence information can be provided under DatumQuality descendants.</xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="Extension" type="c:Extension" minOccurs="0">
										<xs:annotation>
											<xs:documentation>Provided to permit schema extensibility.</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
								<xs:attribute name="ID" type="c:NonBlankString" use="required">
									<xs:annotation>
										<xs:documentation>Unique identifier, enables referencing the test result.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="name" type="c:NonBlankString" use="required">
									<xs:annotation>
										<xs:documentation>Name of the test result.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
				<xs:unique name="testResultDescriptionNamesUnique">
					<xs:selector xpath="./td:TestResultDescription"/>
					<xs:field xpath="@name"/>
				</xs:unique>
				<xs:unique name="testResultDescriptionIDsUnique">
					<xs:selector xpath="./td:TestResultDescription"/>
					<xs:field xpath="@ID"/>
				</xs:unique>
			</xs:element>
			<xs:element name="Conditions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall specify the preconditions and postconditions for the action. The element shall not appear in instance documents unless it has at least one child element. Note that this constraint is not enforced by the XML schema. Consumers should verify the constraint programmatically.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="PreConditions" type="td:PreConditions" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Shall describes all preconditions for the  action or test group. The specification of preconditions aims to ensure that actions and test groups are executed only if the proper conditions exist. For example: power is applied to the UUT, the appropriate firmware is loaded in the UUT, the UUT temperature is within specified limits, etc. </xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="PostConditions" type="td:PostConditions" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Shall describe all postconditions for the action or test group. Preconditions can be fulfilled by executing actions or test groups with the appropriate postconditions. For example a session action can apply power, download firmware, or change the temperature of a thermal chamber; a test can verify the signature of the UUT, etc.</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Initialization" type="td:InitializationTermination" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall describe the initialization operations for the test group. The implementation of the test program will ensure that these operations are performed before the first test from the test group is executed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Termination" type="td:InitializationTermination" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall describe the termination operations for the test group. The implementation of the test program will ensure that these operations are performed after the last test from the test group is executed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="Sequence">
					<xs:annotation>
						<xs:documentation>Shall describe a test group where actions are executed sequentially. The order of execution depends on the outcomes returned by the tests. Each step in the sequence represents of the execution of an action (test or session action) or a test group. The next step to be executed is specified in the instance document, for each possible outcome of the executed item, through NextStep elements. This mode of representation for test sequencing is commonly known as a â€œfault treeâ€. Refer to Annex B for examples. Refer to B.2.23 for usage information regarding test sequences. </xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Steps">
								<xs:annotation>
									<xs:documentation>Shall describe all the steps of the current sequence. Each step represents the execution of a test or test group. The order of Step elements in the XML instance document is not relevant for the order of execution. The order of execution is determined exclusively by the contents of NextStep descendants.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Step" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Shall describe one step.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="Description" type="c:NonBlankString" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Free-form description of the step.</xs:documentation>
														</xs:annotation>
													</xs:element>
													<xs:element name="ActionReference">
														<xs:annotation>
															<xs:documentation>The presence of this element shall indicate that the step represents the execution of an action (i.e., test or session action).</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:attribute name="actionID" type="c:NonBlankString" use="required">
																<xs:annotation>
																	<xs:documentation>ID of the action to be executed for the current step.</xs:documentation>
																</xs:annotation>
															</xs:attribute>
														</xs:complexType>
													</xs:element>
													<xs:element name="Results">
														<xs:annotation>
															<xs:documentation>Shall describe the course of action to be taken when specific results are obtained for the current step (i.e., specific outcomes are returned by the action or test group referenced by the step). This course of action may be: execute another test, adjust components, finish sequence execution and identify components to replace, etc.</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:sequence>
																<xs:element name="Result" type="td:Result" maxOccurs="unbounded">
																	<xs:annotation>
																		<xs:documentation>Shall describe the course of action to be taken for one result of the current step. One Result element shall exist for each outcome of the action or test group referenced by the current step. Note that this constraint is not enforced by the XML schema. Clients should verify the constraint programmatically.
</xs:documentation>
																	</xs:annotation>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
												<xs:attribute name="ID" type="c:NonBlankString" use="required">
													<xs:annotation>
														<xs:documentation>Unique identifier, enables the referencing of the step.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="name" type="c:NonBlankString">
													<xs:annotation>
														<xs:documentation>Optional step name.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="EntryPoints">
								<xs:annotation>
									<xs:documentation>Shall identify the entry points of the current sequence. Each entry point references a step that can be executed as the first step in the sequence.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="EntryPoint" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Shall describe one entry point.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:attribute name="ID" type="c:NonBlankString" use="required">
													<xs:annotation>
														<xs:documentation>Unique identifier, enables the referencing of the entry point.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="stepID" type="c:NonBlankString" use="required">
													<xs:annotation>
														<xs:documentation>ID of the step designated as entry point.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="primaryEntryPointID" type="c:NonBlankString" use="required">
										<xs:annotation>
											<xs:documentation>Shall identify the primary entry point of the sequence. In the absence of an entry point selection (e.g., by the operator), this entry point will be used when the test program is executed.</xs:documentation>
										</xs:annotation>
									</xs:attribute>
								</xs:complexType>
								<xs:key name="seqEntryPointKey">
									<xs:selector xpath="./td:EntryPoint"/>
									<xs:field xpath="@ID"/>
								</xs:key>
								<xs:keyref name="seqEntryPointRef" refer="td:seqEntryPointKey">
									<xs:selector xpath="."/>
									<xs:field xpath="@primaryEntryPointID"/>
								</xs:keyref>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Serial">
					<xs:annotation>
						<xs:documentation>Shall describe a test group where steps are executed sequentially. The order of step execution shall be identical to the order of Steps/Step descendants. The execution of the test group shall finish once all steps are executed. If the FaultDictionary child element is present the outcome returned the test group shall be determined by the rules specified in the fault dictionary. If the FaultDictionary child element is absent the outcome returned the test group shall be determined as follows: if at least one action produced a "Failed" outcome, the outcome of the test group shall be "Failed"; otherwise, the outcome of the test group shall be "Passed". </xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Steps">
								<xs:annotation>
									<xs:documentation>Shall contain the list of all steps for the test group.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Step" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Shall describe one step. The step represents the execution of an Action.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="Description" type="c:NonBlankString" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Free-form description of the step.</xs:documentation>
														</xs:annotation>
													</xs:element>
												</xs:sequence>
												<xs:attribute name="ID" type="c:NonBlankString" use="required">
													<xs:annotation>
														<xs:documentation>Unique identifier, enables the referencing of the step.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="name" type="c:NonBlankString">
													<xs:annotation>
														<xs:documentation>Optional step name.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="actionID" type="c:NonBlankString" use="required">
													<xs:annotation>
														<xs:documentation>ID of the action to be executed for the current step.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="FaultDictionary" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Shall be used to specify the test group action to return after the execution of all steps is finished, for specific combinations of outcomes produced by the executed steps. </xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Rules">
											<xs:annotation>
												<xs:documentation>Shall contain the list of all fault dictionary rules. The rules shall be evaluated once the execution of all steps is finished. The rules shall be evaluated in the order in which they appear in the XML instance document. The first rule for which the combination of step outcomes is matched shall apply.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="Rule" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation>Shall describe one fault dictionary rule. The rule speciifies the test group outcome to return when a specific combination of outcomes is produced by the actions referenced by the steps.  </xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:sequence>
																<xs:element name="Results">
																	<xs:annotation>
																		<xs:documentation>Shall contain the list of all step results for the current rule. A Result child element shall exist for each outcome that must be matched for the current rule to apply. For the outcomes are irrelevant for the current rule ("don't care") no Result element shall exist.</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:sequence>
																			<xs:element name="Result" maxOccurs="unbounded">
																				<xs:annotation>
																					<xs:documentation>Shall describe one step result for the current rule. The step result references a step and an outcome produced by the action referenced by the Step. </xs:documentation>
																				</xs:annotation>
																				<xs:complexType>
																					<xs:attribute name="stepID" type="c:NonBlankString" use="required">
																						<xs:annotation>
																							<xs:documentation>ID of the referenced step.</xs:documentation>
																						</xs:annotation>
																					</xs:attribute>
																					<xs:attribute name="actionOutcomeID" type="c:NonBlankString" use="required">
																						<xs:annotation>
																							<xs:documentation>ID of the referenced action outcome.</xs:documentation>
																						</xs:annotation>
																					</xs:attribute>
																				</xs:complexType>
																			</xs:element>
																		</xs:sequence>
																	</xs:complexType>
																</xs:element>
																<xs:element name="TestGroupOutcome">
																	<xs:annotation>
																		<xs:documentation>The element shall specify the test group outcome to be returned when the current rule applies. This outcome may indicate the failures or faults that were isolated.</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:attribute name="testGroupOutcomeID" type="c:NonBlankString" use="required">
																			<xs:annotation>
																				<xs:documentation>ID of the test group outcome to be returned.</xs:documentation>
																			</xs:annotation>
																		</xs:attribute>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
															<xs:attribute name="name" type="c:NonBlankString">
																<xs:annotation>
																	<xs:documentation>Descriptive name for the rule</xs:documentation>
																</xs:annotation>
															</xs:attribute>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Parallel">
					<xs:annotation>
						<xs:documentation>Shall describe a test group where steps can be executed in parallel (i.e., simultaneously), depending on resource availability. The execution of the test group shall finish once all steps are executed. If the FaultDictionary child element is present the outcome returned the test group shall be determined by the rules specified in the fault dictionary. If the FaultDictionary child element is absent the outcome returned the test group shall be determined as follows: if at least one action produced a "Failed" outcome, the outcome of the test group shall be "Failed"; otherwise, the outcome of the test group shall be "Passed". </xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Steps">
								<xs:annotation>
									<xs:documentation>Shall contain the list of all steps for the test group.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Step" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Shall describe one step. The step represents the execution of an Action.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="Description" type="c:NonBlankString" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Free-form description of the step.</xs:documentation>
														</xs:annotation>
													</xs:element>
												</xs:sequence>
												<xs:attribute name="ID" type="c:NonBlankString" use="required">
													<xs:annotation>
														<xs:documentation>Unique identifier, enables the referencing of the step.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="name" type="c:NonBlankString">
													<xs:annotation>
														<xs:documentation>Optional step name.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="actionID" type="c:NonBlankString" use="required">
													<xs:annotation>
														<xs:documentation>ID of the action to be executed for the current step.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="FaultDictionary" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Shall be used to specify the test group action to return after the execution of all steps is finished, for specific combinations of outcomes produced by the executed steps. </xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Rules">
											<xs:annotation>
												<xs:documentation>Shall contain the list of all fault dictionary rules. The rules shall be evaluated once the execution of all steps is finished. The rules shall be evaluated in the order in which they appear in the XML instance document. The first rule for which the combination of step outcomes is matched shall apply.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="Rule" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation>Shall describe one fault dictionary rule. The rule speciifies the test group outcome to return when a specific combination of outcomes is produced by the actions referenced by the steps.  </xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:sequence>
																<xs:element name="Results">
																	<xs:annotation>
																		<xs:documentation>Shall contain the list of all step results for the current rule. A Result child element shall exist for each outcome that must be matched for the current rule to apply. For the outcomes are irrelevant for the current rule ("don't care") no Result element shall exist.</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:sequence>
																			<xs:element name="Result" maxOccurs="unbounded">
																				<xs:annotation>
																					<xs:documentation>Shall describe one step result for the current rule. The step result references a step and an outcome produced by the action referenced by the Step. </xs:documentation>
																				</xs:annotation>
																				<xs:complexType>
																					<xs:attribute name="stepID" type="c:NonBlankString" use="required">
																						<xs:annotation>
																							<xs:documentation>ID of the referenced step.</xs:documentation>
																						</xs:annotation>
																					</xs:attribute>
																					<xs:attribute name="actionOutcomeID" type="c:NonBlankString" use="required">
																						<xs:annotation>
																							<xs:documentation>ID of the referenced action outcome.</xs:documentation>
																						</xs:annotation>
																					</xs:attribute>
																				</xs:complexType>
																			</xs:element>
																		</xs:sequence>
																	</xs:complexType>
																</xs:element>
																<xs:element name="TestGroupOutcome">
																	<xs:annotation>
																		<xs:documentation>The element shall specify the test group outcome to be returned when the current rule applies. This outcome may indicate the failures or faults that were isolated.</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:attribute name="testGroupOutcomeID" type="c:NonBlankString" use="required">
																			<xs:annotation>
																				<xs:documentation>ID of the test group outcome to be returned.</xs:documentation>
																			</xs:annotation>
																		</xs:attribute>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
															<xs:attribute name="name" type="c:NonBlankString">
																<xs:annotation>
																	<xs:documentation>Descriptive name for the rule</xs:documentation>
																</xs:annotation>
															</xs:attribute>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="UnspecifiedOrder">
					<xs:annotation>
						<xs:documentation>Shall describe a test group where step execution is serial and can be in any order. The execution of the test group shall finish once all steps are executed. If the FaultDictionary child element is present the outcome returned the test group shall be determined by the rules specified in the fault dictionary. If the FaultDictionary child element is absent the outcome returned the test group shall be determined as follows: if at least one action produced a "Failed" outcome, the outcome of the test group shall be "Failed"; otherwise, the outcome of the test group shall be "Passed". </xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Steps">
								<xs:annotation>
									<xs:documentation>Shall contain the list of all steps for the test group.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Step" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Shall describe one step. The step represents the execution of an Action.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="Description" type="c:NonBlankString" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Free-form description of the step.</xs:documentation>
														</xs:annotation>
													</xs:element>
												</xs:sequence>
												<xs:attribute name="ID" type="c:NonBlankString" use="required">
													<xs:annotation>
														<xs:documentation>Unique identifier, enables the referencing of the step.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="name" type="c:NonBlankString">
													<xs:annotation>
														<xs:documentation>Optional step name.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="actionID" type="c:NonBlankString" use="required">
													<xs:annotation>
														<xs:documentation>ID of the action to be executed for the current step.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="FaultDictionary" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Shall be used to specify the test group action to return after the execution of all steps is finished, for specific combinations of outcomes produced by the executed steps. </xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Rules">
											<xs:annotation>
												<xs:documentation>Shall contain the list of all fault dictionary rules. The rules shall be evaluated once the execution of all steps is finished. The rules shall be evaluated in the order in which they appear in the XML instance document. The first rule for which the combination of step outcomes is matched shall apply.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="Rule" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation>Shall describe one fault dictionary rule. The rule speciifies the test group outcome to return when a specific combination of outcomes is produced by the actions referenced by the steps.  </xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:sequence>
																<xs:element name="Results">
																	<xs:annotation>
																		<xs:documentation>Shall contain the list of all step results for the current rule. A Result child element shall exist for each outcome that must be matched for the current rule to apply. For the outcomes are irrelevant for the current rule ("don't care") no Result element shall exist.</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:sequence>
																			<xs:element name="Result" maxOccurs="unbounded">
																				<xs:annotation>
																					<xs:documentation>Shall describe one step result for the current rule. The step result references a step and an outcome produced by the action referenced by the Step. </xs:documentation>
																				</xs:annotation>
																				<xs:complexType>
																					<xs:attribute name="stepID" type="c:NonBlankString" use="required">
																						<xs:annotation>
																							<xs:documentation>ID of the referenced step.</xs:documentation>
																						</xs:annotation>
																					</xs:attribute>
																					<xs:attribute name="actionOutcomeID" type="c:NonBlankString" use="required">
																						<xs:annotation>
																							<xs:documentation>ID of the referenced action outcome.</xs:documentation>
																						</xs:annotation>
																					</xs:attribute>
																				</xs:complexType>
																			</xs:element>
																		</xs:sequence>
																	</xs:complexType>
																</xs:element>
																<xs:element name="TestGroupOutcome">
																	<xs:annotation>
																		<xs:documentation>The element shall specify the test group outcome to be returned when the current rule applies. This outcome may indicate the failures or faults that were isolated.</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:attribute name="testGroupOutcomeID" type="c:NonBlankString" use="required">
																			<xs:annotation>
																				<xs:documentation>ID of the test group outcome to be returned.</xs:documentation>
																			</xs:annotation>
																		</xs:attribute>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
															<xs:attribute name="name" type="c:NonBlankString">
																<xs:annotation>
																	<xs:documentation>Descriptive name for the rule</xs:documentation>
																</xs:annotation>
															</xs:attribute>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="DiagnosticModel">
					<xs:annotation>
						<xs:documentation>Shall describe a test group where the order of step execution is determined by a diagnostic reasoner in accordance to a diagnostic model (e.g., a diagnostic model conformant with IEEE Std. 1232). Shall reference an external document that contains the diagnostic model.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Steps">
								<xs:annotation>
									<xs:documentation>Shall contain the list of all steps for the test group.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="Step" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Shall describe one step. The step represents the execution of an Action.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="Description" type="c:NonBlankString" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Free-form description of the step.</xs:documentation>
														</xs:annotation>
													</xs:element>
												</xs:sequence>
												<xs:attribute name="ID" type="c:NonBlankString" use="required">
													<xs:annotation>
														<xs:documentation>Unique identifier, enables the referencing of the step.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="name" type="c:NonBlankString">
													<xs:annotation>
														<xs:documentation>Optional step name.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="actionID" type="c:NonBlankString" use="required">
													<xs:annotation>
														<xs:documentation>ID of the action to be executed for the current step.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="DiagnosticModel" type="c:Document">
								<xs:annotation>
									<xs:documentation>Shall reference the document that contains the diagnostic model. This may be an XML instance document or another type of document. </xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:element name="Extension" type="c:Extension" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provided to permit schema extensibility.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="ID" type="c:NonBlankString" use="required">
			<xs:annotation>
				<xs:documentation>Unique identifier, enables referencing the test group.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="name" type="c:NonBlankString" use="required">
			<xs:annotation>
				<xs:documentation>Name of the test group.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attributeGroup ref="c:ClassifiedAttributes"/>
		<xs:attribute name="type" type="td:TestType">
			<xs:annotation>
				<xs:documentation>Test group type. Shall be one of: UutIdentification, PowerStimuliShort, SafeToTurnOn, Performance, Diagnostic.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="typeQualifier" type="c:NonBlankString">
			<xs:annotation>
				<xs:documentation>User-defined information regarding the test group type.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="cost" type="xs:double">
			<xs:annotation>
				<xs:documentation>Cost of test group execution, representing the duration of test execution, the financial cost associated with execution, or a value calculated by an objective function. May be used to optimize the order of test execution.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="documentRequirementID" type="c:NonBlankString">
			<xs:annotation>
				<xs:documentation>Reference to a requirement ID from an external requirements document, which in turn shall be referenced by a Document element under Documentation/Requirements. Note that the format and location of requirement IDs in the external document are not enforced by this standard and can be application-specific.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="InitializationTermination">
		<xs:annotation>
			<xs:documentation>Shall describe the initalization or termination conditions for a test group.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="DetailedDescription">
					<xs:annotation>
						<xs:documentation>The presence of this element shall indicate that termination is described through free-form text.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:annotation>
							<xs:documentation>The presence of this element indicates that termination is described through free-form text.</xs:documentation>
						</xs:annotation>
						<xs:sequence>
							<xs:element name="DetailedInformation" type="c:NonBlankString">
								<xs:annotation>
									<xs:documentation>Shall describe through free-form text the operations required after the execution of the test group is finished.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="PowerSequence" type="c:NonBlankString" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Shall describe through free-form text the power sequence required to initialize the UUT.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Warmup" type="c:NonBlankString" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Shall describe through free-form text the warmup required for the UUT.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Conditioning" type="c:NonBlankString" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Shall describe through free-form text the conditioning required for the UUT.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="AlignmentAndAdjustment" type="c:NonBlankString" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Shall describe through free-form text the alignment and adjustment operations required to initialize the UUT.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="Extension" type="c:Extension" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Provided to permit schema extensibility.</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="Action">
					<xs:annotation>
						<xs:documentation>The presence of this element shall indicate that initalization or termination is performed by executing a single action, which may be a test or a session action. The element shall reference that action. </xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:attribute name="actionID" type="c:NonBlankString" use="required">
							<xs:annotation>
								<xs:documentation>ID of the referenced action.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<xs:element name="TestGroup">
					<xs:annotation>
						<xs:documentation>The presence of this element shall indicate that initalization or termination is performed by executing a test group. The element shall reference that test group. </xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:attribute name="testGroupID" type="c:NonBlankString" use="required">
							<xs:annotation>
								<xs:documentation>ID of the referenced test group.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:element name="Results">
				<xs:annotation>
					<xs:documentation>Shall describe the course of action to be taken when specific Outcomes are returned by the Action or TestGroup executed for initialization or termination </xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Result" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Shall describe the course of action to be taken for one outcome of the containing Action or TestGroup  executed for Initialization or Termination. One Result element shall exist for each Outcomeof the Action or TestGroup. Note that this constraint is not enforced by the XML schema. Clients should verify the constraint programmatically.
</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:choice>
									<xs:element name="Continue">
										<xs:annotation>
											<xs:documentation>For Initialization the presence of this element shall indicate that the execution of the TestGroup will continue. For Termination the presense of this element shall indicate that the Outcome returned by the TestGroup will remain unchanged. </xs:documentation>
										</xs:annotation>
									</xs:element>
									<xs:element name="TestGroupOutcome">
										<xs:annotation>
											<xs:documentation>For Initialization the presence of this element shall indicate that the TestGroup will not be executed. Instead the outcome referenced by the sequenceOutcomeID attribute will be returned. For Termination the presense of this element shall indicate that the Outcome returned by the TestGroup will be overwritten by the outcome referenced by the sequenceOutcomeID attribute will be returned.</xs:documentation>
										</xs:annotation>
										<xs:complexType>
											<xs:attribute name="testGroupOutcomeID" type="c:NonBlankString" use="required">
												<xs:annotation>
													<xs:documentation>ID of the TestGroup outcome to be returned.</xs:documentation>
												</xs:annotation>
											</xs:attribute>
										</xs:complexType>
									</xs:element>
								</xs:choice>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Result">
		<xs:annotation>
			<xs:documentation>Shall describe the course of action to be taken for one result of a step in a test sequence. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="ActionOutcomeReference">
					<xs:annotation>
						<xs:documentation>Shall identify the action outcome the current result corresponds to. This element shall be present if the ancestor Step element represents the execution of an action (test or session action).</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:attribute name="actionOutcomeID" type="c:NonBlankString" use="required">
							<xs:annotation>
								<xs:documentation>ID of the referenced action outcome.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<xs:element name="TestGroupOutcomeReference">
					<xs:annotation>
						<xs:documentation>Shall identify the test group outcome the current result corresponds to. This element shall be present if the ancestor Step element represents the execution of a test group. </xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:attribute name="testGroupOutcomeID" type="c:NonBlankString" use="required">
							<xs:annotation>
								<xs:documentation>ID of the referenced test group outcome.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:choice>
				<xs:element name="NextStep">
					<xs:annotation>
						<xs:documentation>The presence of this element shall indicate the that another step will be executed when the current result is obtained.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="DetectionIsolation" type="td:DetectionIsolation" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Shall identify the faults and failures detected or isolated when the current Step Result is obtained. Failure and fault data referenced by this element shall be defined in the FailureFaultData child of the root element. The element shall not appear in instance documents unless it has at least one child element. Note that this constraint is not enforced by the XML schema. Consumers should verify the constraint programmatically.</xs:documentation>
								</xs:annotation>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="stepID" type="c:NonBlankString" use="required">
							<xs:annotation>
								<xs:documentation>ID of the step to be executed.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<xs:element name="SequenceOutcome">
					<xs:annotation>
						<xs:documentation>The presence of this element shall indicate the that the execution of the sequence will finish when the current result is obtained. The element shall specify the sequence outcome to be returned. In turn, this outcome may indicate the failures or faults that were detected or isolated.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:attribute name="sequenceOutcomeID" type="c:NonBlankString" use="required">
							<xs:annotation>
								<xs:documentation>ID of the sequence outcome to be returned.</xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<xs:element name="Adjust">
					<xs:annotation>
						<xs:documentation>The presence of this element shall indicate that one or more UUT components will be adjusted when the current result is obtained. The element shall specify the components to be adjusted.</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Description" type="c:NonBlankString" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Free-form description of the overall adjustment operation.</xs:documentation>
								</xs:annotation>
							</xs:element>
							<xs:element name="AdjustComponents">
								<xs:annotation>
									<xs:documentation>Shall identify all the components to adjust.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element name="AdjustComponent" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>Shall identify one component to adjust.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element name="Description" type="c:NonBlankString" minOccurs="0">
														<xs:annotation>
															<xs:documentation>Free-form description of the adjustment operation for the current component.</xs:documentation>
														</xs:annotation>
													</xs:element>
												</xs:sequence>
												<xs:attribute name="componentID" type="c:NonBlankString" use="required">
													<xs:annotation>
														<xs:documentation>ID of the component to adjust.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="AfterAdjust">
								<xs:annotation>
									<xs:documentation>Shall describe the course of action to be taken after the adjustment is performed.</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:choice>
										<xs:element name="Finish">
											<xs:annotation>
												<xs:documentation>The presence of this element shall indicate that sequence execution will finish. The element shall specify the sequence outcome to be returned. It is assumed that adjustment solves the problem and re-test is not necessary.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:attribute name="sequenceOutcomeID" type="c:NonBlankString" use="required">
													<xs:annotation>
														<xs:documentation>ID of the sequence outcome to be returned.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
										<xs:element name="Repeat">
											<xs:annotation>
												<xs:documentation>The presence of this element shall indicate that the last executed step will be repeated.</xs:documentation>
											</xs:annotation>
										</xs:element>
										<xs:element name="NextStep">
											<xs:annotation>
												<xs:documentation>The presence of this element shall indicate that a different step will be executed. The element shall identify the step to be executed.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:attribute name="stepID" type="c:NonBlankString" use="required">
													<xs:annotation>
														<xs:documentation>ID of the step to be executed.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
									</xs:choice>
								</xs:complexType>
							</xs:element>
							<xs:element name="OnAdjustFailure" minOccurs="0">
								<xs:annotation>
									<xs:documentation>Shall describe the operations to be performed if adjustment is impossible (e.g., due to insufficient range).</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:choice>
										<xs:element name="Finish">
											<xs:annotation>
												<xs:documentation>The presence of this element shall indicate that sequence execution will finish if adjustment is impossible. </xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:attribute name="sequenceOutcomeID" type="c:NonBlankString" use="required">
													<xs:annotation>
														<xs:documentation>ID of the sequence outcome to be returned when execution is finished.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
										<xs:element name="NextStep">
											<xs:annotation>
												<xs:documentation>The presence of this element shall indicate that a different step will be executed. The element shall identify the step to be executed.</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:attribute name="stepID" type="c:NonBlankString" use="required">
													<xs:annotation>
														<xs:documentation>ID of the step to be executed.</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
									</xs:choice>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PowerSpecification">
		<xs:annotation>
			<xs:documentation>Shall describe UUT power requirements.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="c:Limit">
				<xs:sequence>
					<xs:element name="Conditions" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Shall describe the conditions under which the current specification is defined.</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:sequence>
								<xs:element name="Condition" type="c:NonBlankString" maxOccurs="unbounded">
									<xs:annotation>
										<xs:documentation>Shall describe one condition through free-form text.</xs:documentation>
									</xs:annotation>
								</xs:element>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
					<xs:element name="SupplementalInformation" type="c:NonBlankString" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Shall contain any additional information necessary to clarify the specification.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DetectionIsolation">
		<xs:annotation>
			<xs:documentation>Shall identify a set of faults and failures detected or isolated. Failure and fault data referenced by this type shall be defined under the FailureFaultData child of the root element.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Faults" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall identify the faults detected or isolated.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Fault" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Shall identify one fault.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attribute name="faultID" type="c:NonBlankString" use="required">
									<xs:annotation>
										<xs:documentation>ID of the fault.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="Failures" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Shall identify the failures detected or isolated.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="Failure" maxOccurs="unbounded">
							<xs:annotation>
								<xs:documentation>Shall identify one failure.</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:attribute name="failureID" type="c:NonBlankString" use="required">
									<xs:annotation>
										<xs:documentation>ID of the failure.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Variable">
		<xs:sequence>
			<xs:element name="Description" type="c:NonBlankString" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Free-form description of the Variable.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ValueDescription">
				<xs:annotation>
					<xs:documentation>Shall identify a variable that can be accessed and modifed by multiple Tests or TestGroups. To identify a signal, that can be shared by multiple operations assign the derived type SignalDescription. </xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="td:ValueDescription">
							<xs:sequence minOccurs="0">
								<xs:element name="ValueFrom" type="td:ValueFrom"/>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="Extension" type="c:Extension" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provided to permit schema extensibility.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="ID" type="c:NonBlankString" use="required">
			<xs:annotation>
				<xs:documentation>Unique identifier, enables referencing the Variable</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="name" type="c:NonBlankString">
			<xs:annotation>
				<xs:documentation>Name of the Variable</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="documentRequirementID" type="c:NonBlankString"/>
	</xs:complexType>
</xs:schema>
